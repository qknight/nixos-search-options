{"boot.blacklistedKernelModules":{"declarations":["nixos/modules/system/boot/modprobe.nix"],"default":[],"description":"List of names of kernel modules that should not be loaded\nautomatically by the hardware probing code.\n","example":["cirrusfb","i2c_piix4"],"readOnly":false,"type":"list of strings"},"boot.bootMount":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"description":"Alias of <option>boot.loader.grub.bootDevice</option>.","readOnly":false,"type":"unspecified"},"boot.cleanTmpDir":{"declarations":["nixos/modules/system/boot/tmp.nix"],"default":false,"description":"Whether to delete all files in <filename>/tmp</filename> during boot.\n","readOnly":false,"type":"boolean"},"boot.consoleLogLevel":{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":4,"description":"The kernel console log level.  Log messages with a priority\nnumerically less than this will not appear on the console.\n","readOnly":false,"type":"integer"},"boot.copyKernels":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"description":"Alias of <option>boot.loader.grub.copyKernels</option>.","readOnly":false,"type":"unspecified"},"boot.crashDump.enable":{"declarations":["nixos/modules/misc/crashdump.nix"],"default":false,"description":"If enabled, NixOS will set up a kernel that will\nboot on crash, and leave the user to a stage1 debug1devices\ninteractive shell to be able to save the crashed kernel dump.\nIt also activates the NMI watchdog.\n","readOnly":false,"type":"boolean"},"boot.crashDump.kernelPackages":{"declarations":["nixos/modules/misc/crashdump.nix"],"default":"pkgs.linuxPackages","description":"This will override the boot.kernelPackages, and will add some\nkernel configuration parameters for the crash dump to work.\n","example":{"_type":"literalExample","text":"pkgs.linuxPackages_2_6_25"},"readOnly":false,"type":"package"},"boot.crashDump.kernelParams":{"declarations":["nixos/modules/misc/crashdump.nix"],"default":["debug1devices"],"description":"Parameters that will be passed to the kernel kexec-ed on crash.\n","readOnly":false,"type":"list of strings"},"boot.devShmSize":{"declarations":["nixos/modules/system/boot/stage-2.nix"],"default":"50%","description":"Size limit for the /dev/shm tmpfs. Look at mount(8), tmpfs size option,\nfor the accepted syntax.\n","example":"256m","readOnly":false,"type":"string"},"boot.devSize":{"declarations":["nixos/modules/system/boot/stage-2.nix"],"default":"5%","description":"Size limit for the /dev tmpfs. Look at mount(8), tmpfs size option,\nfor the accepted syntax.\n","example":"32m","readOnly":false,"type":"string"},"boot.earlyVconsoleSetup":{"declarations":["nixos/modules/tasks/kbd.nix"],"default":false,"description":"Enable setting font as early as possible (in initrd).\n","readOnly":false,"type":"boolean"},"boot.enableContainers":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":true,"description":"Whether to enable support for nixos containers.\n","readOnly":false,"type":"boolean"},"boot.extraGrubEntries":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"description":"Alias of <option>boot.loader.grub.extraEntries</option>.","readOnly":false,"type":"unspecified"},"boot.extraGrubEntriesBeforeNixos":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"description":"Alias of <option>boot.loader.grub.extraEntriesBeforeNixOS</option>.","readOnly":false,"type":"unspecified"},"boot.extraKernelParams":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>boot.kernelParams</option>.","readOnly":false,"type":"unspecified"},"boot.extraModprobeConfig":{"declarations":["nixos/modules/system/boot/modprobe.nix"],"default":"","description":"Any additional configuration to be appended to the generated\n<filename>modprobe.conf</filename>.  This is typically used to\nspecify module options.  See\n<citerefentry><refentrytitle>modprobe.conf</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":"options parport_pc io=0x378 irq=7 dma=1\n","readOnly":false,"type":"string"},"boot.extraModulePackages":{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":[],"description":"A list of additional packages supplying kernel modules.","example":{"_type":"literalExample","text":"[ pkgs.linuxPackages.nvidia_x11 ]"},"readOnly":false,"type":"list of packages"},"boot.extraTTYs":{"declarations":["nixos/modules/tasks/kbd.nix"],"default":[],"description":"Tty (virtual console) devices, in addition to the consoles on\nwhich mingetty and syslogd run, that must be initialised.\nOnly useful if you have some program that you want to run on\nsome fixed console.  For example, the NixOS installation CD\nopens the manual in a web browser on console 7, so it sets\n<option>boot.extraTTYs</option> to <literal>[\"tty7\"]</literal>.\n","example":["tty8","tty9"],"readOnly":false,"type":"list of strings"},"boot.grubDevice":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"description":"Alias of <option>boot.loader.grub.device</option>.","readOnly":false,"type":"unspecified"},"boot.grubSplashImage":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"description":"Alias of <option>boot.loader.grub.splashImage</option>.","readOnly":false,"type":"unspecified"},"boot.hardwareScan":{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":true,"description":"Whether to try to load kernel modules for all detected hardware.\nUsually this does a good job of providing you with the modules\nyou need, but sometimes it can crash the system or cause other\nnasty effects.\n","readOnly":false,"type":"boolean"},"boot.initrd.availableKernelModules":{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":[],"description":"The set of kernel modules in the initial ramdisk used during the\nboot process.  This set must include all modules necessary for\nmounting the root device.  That is, it should include modules\nfor the physical device (e.g., SCSI drivers) and for the file\nsystem (e.g., ext3).  The set specified here is automatically\nclosed under the module dependency relation, i.e., all\ndependencies of the modules list here are included\nautomatically.  The modules listed here are available in the\ninitrd, but are only loaded on demand (e.g., the ext3 module is\nloaded automatically when an ext3 filesystem is mounted, and\nmodules for PCI devices are loaded when they match the PCI ID\nof a device in your system).  To force a module to be loaded,\ninclude it in <option>boot.initrd.kernelModules</option>.\n","example":["sata_nv","ext3"],"readOnly":false,"type":"list of strings"},"boot.initrd.checkJournalingFS":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":true,"description":"Whether to run <command>fsck</command> on journaling filesystems such as ext3.\n","readOnly":false,"type":"boolean"},"boot.initrd.extraKernelModules":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>boot.initrd.kernelModules</option>.","readOnly":false,"type":"unspecified"},"boot.initrd.kernelModules":{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":[],"description":"List of modules that are always loaded by the initrd.","readOnly":false,"type":"list of strings"},"boot.initrd.luks.cryptoModules":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":["aes","aes_generic","blowfish","twofish","serpent","cbc","xts","lrw","sha1","sha256","sha512","aes_x86_64"],"description":"A list of cryptographic kernel modules needed to decrypt the root device(s).\nThe default includes all common modules.\n","readOnly":false,"type":"list of strings"},"boot.initrd.luks.devices":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":{},"description":"The encrypted disk that should be opened before the root\nfilesystem is mounted. Both LVM-over-LUKS and LUKS-over-LVM\nsetups are sypported. The unencrypted devices can be accessed as\n<filename>/dev/mapper/<replaceable>name</replaceable></filename>.\n","example":{"luksroot":{"device":"/dev/disk/by-uuid/430e9eff-d852-4f68-aa3b-2fa3599ebe08"}},"readOnly":false,"type":"list or attribute set of submodules"},"boot.initrd.luks.devices.<name?>.allowDiscards":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":false,"description":"Whether to allow TRIM requests to the underlying device. This option\nhas security implications; please read the LUKS documentation before\nactivating it.\n","readOnly":false,"type":"boolean"},"boot.initrd.luks.devices.<name?>.device":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"description":"Path of the underlying encrypted block device.","example":"/dev/disk/by-uuid/430e9eff-d852-4f68-aa3b-2fa3599ebe08","readOnly":false,"type":"string"},"boot.initrd.luks.devices.<name?>.header":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":null,"description":"The name of the file or block device that\nshould be used as header for the encrypted device.\n","example":"/root/header.img","readOnly":false,"type":"null or string"},"boot.initrd.luks.devices.<name?>.keyFile":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":null,"description":"The name of the file (can be a raw device or a partition) that\nshould be used as the decryption key for the encrypted device. If\nnot specified, you will be prompted for a passphrase instead.\n","example":"/dev/sdb1","readOnly":false,"type":"null or string"},"boot.initrd.luks.devices.<name?>.keyFileSize":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":null,"description":"The size of the key file. Use this if only the beginning of the\nkey file should be used as a key (often the case if a raw device\nor partition is used as key file). If not specified, the whole\n<literal>keyFile</literal> will be used decryption, instead of just\nthe first <literal>keyFileSize</literal> bytes.\n","example":4096,"readOnly":false,"type":"null or integer"},"boot.initrd.luks.devices.<name?>.preLVM":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":true,"description":"Whether the luksOpen will be attempted before LVM scan or after it.","readOnly":false,"type":"boolean"},"boot.initrd.luks.devices.<name?>.yubikey":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":null,"description":"The options to use for this LUKS device in Yubikey-PBA.\nIf null (the default), Yubikey-PBA will be disabled for this device.\n","readOnly":false,"type":"null or submodule"},"boot.initrd.luks.devices.<name?>.yubikey.gracePeriod":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":2,"description":"Time in seconds to wait before attempting to find the Yubikey.","readOnly":false,"type":"integer"},"boot.initrd.luks.devices.<name?>.yubikey.iterationStep":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":0,"description":"How much the iteration count for PBKDF2 is increased at each successful authentication.","readOnly":false,"type":"integer"},"boot.initrd.luks.devices.<name?>.yubikey.keyLength":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":64,"description":"Length of the LUKS slot key derived with PBKDF2 in byte.","readOnly":false,"type":"integer"},"boot.initrd.luks.devices.<name?>.yubikey.ramfsMountPoint":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":"/crypt-ramfs","description":"Path where the ramfs used to update the LUKS key will be mounted during early boot.","readOnly":false,"type":"string"},"boot.initrd.luks.devices.<name?>.yubikey.saltLength":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":16,"description":"Length of the new salt in byte (64 is the effective maximum).","readOnly":false,"type":"integer"},"boot.initrd.luks.devices.<name?>.yubikey.slot":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":2,"description":"Which slot on the Yubikey to challenge.","readOnly":false,"type":"integer"},"boot.initrd.luks.devices.<name?>.yubikey.storage.device":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":"/dev/sda1","description":"An unencrypted device that will temporarily be mounted in stage-1.\nMust contain the current salt to create the challenge for this LUKS device.\n","readOnly":false,"type":"path"},"boot.initrd.luks.devices.<name?>.yubikey.storage.fsType":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":"vfat","description":"The filesystem of the unencrypted device.","readOnly":false,"type":"string"},"boot.initrd.luks.devices.<name?>.yubikey.storage.mountPoint":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":"/crypt-storage","description":"Path where the unencrypted device will be mounted during early boot.","readOnly":false,"type":"string"},"boot.initrd.luks.devices.<name?>.yubikey.storage.path":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":"/crypt-storage/default","description":"Absolute path of the salt on the unencrypted device with\nthat device's root directory as \"/\".\n","readOnly":false,"type":"string"},"boot.initrd.luks.devices.<name?>.yubikey.twoFactor":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":true,"description":"Whether to use a passphrase and a Yubikey (true), or only a Yubikey (false).","readOnly":false,"type":"boolean"},"boot.initrd.luks.mitigateDMAAttacks":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":true,"description":"Unless enabled, encryption keys can be easily recovered by an attacker with physical\naccess to any machine with PCMCIA, ExpressCard, ThunderBolt or FireWire port.\nMore information is available at <link xlink:href=\"http://en.wikipedia.org/wiki/DMA_attack\"/>.\n\nThis option blacklists FireWire drivers, but doesn't remove them. You can manually\nload the drivers if you need to use a FireWire device, but don't forget to unload them!\n","readOnly":false,"type":"boolean"},"boot.initrd.luks.yubikeySupport":{"declarations":["nixos/modules/system/boot/luksroot.nix"],"default":false,"description":"Enables support for authenticating with a Yubikey on LUKS devices.\nSee the NixOS wiki for information on how to properly setup a LUKS device\nand a Yubikey to work with this feature.\n","readOnly":false,"type":"boolean"},"boot.initrd.mdadmConf":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Contents of <filename>/etc/mdadm.conf</filename> in stage 1.\n","readOnly":false,"type":"string"},"boot.initrd.network.enable":{"declarations":["nixos/modules/system/boot/initrd-network.nix"],"default":false,"description":"Add network connectivity support to initrd. The network may be\nconfigured using the <literal>ip</literal> kernel parameter,\nas described in <link\nxlink:href=\"https://www.kernel.org/doc/Documentation/filesystems/nfs/nfsroot.txt\">the\nkernel documentation</link>.  Otherwise, if\n<option>networking.useDHCP</option> is enabled, an IP address\nis acquired using DHCP.\n","readOnly":false,"type":"boolean"},"boot.initrd.network.postCommands":{"declarations":["nixos/modules/system/boot/initrd-network.nix"],"default":"","description":"Shell commands to be executed after stage 1 of the\nboot has initialised the network.\n","readOnly":false,"type":"string"},"boot.initrd.network.ssh.authorizedKeys":{"declarations":["nixos/modules/system/boot/initrd-ssh.nix"],"default":[],"description":"Authorized keys for the root user on initrd.\n","readOnly":false,"type":"list of strings"},"boot.initrd.network.ssh.enable":{"declarations":["nixos/modules/system/boot/initrd-ssh.nix"],"default":false,"description":"Start SSH service during initrd boot. It can be used to debug failing\nboot on a remote server, enter pasphrase for an encrypted partition etc.\nService is killed when stage-1 boot is finished.\n","readOnly":false,"type":"boolean"},"boot.initrd.network.ssh.hostDSSKey":{"declarations":["nixos/modules/system/boot/initrd-ssh.nix"],"default":null,"description":"DSS SSH private key file in the Dropbear format.\n\nWARNING: This key is contained insecurely in the global Nix store. Do NOT\nuse your regular SSH host private keys for this purpose or you'll expose\nthem to regular users!\n","readOnly":false,"type":"null or path"},"boot.initrd.network.ssh.hostECDSAKey":{"declarations":["nixos/modules/system/boot/initrd-ssh.nix"],"default":null,"description":"ECDSA SSH private key file in the Dropbear format.\n\nWARNING: This key is contained insecurely in the global Nix store. Do NOT\nuse your regular SSH host private keys for this purpose or you'll expose\nthem to regular users!\n","readOnly":false,"type":"null or path"},"boot.initrd.network.ssh.hostRSAKey":{"declarations":["nixos/modules/system/boot/initrd-ssh.nix"],"default":null,"description":"RSA SSH private key file in the Dropbear format.\n\nWARNING: This key is contained insecurely in the global Nix store. Do NOT\nuse your regular SSH host private keys for this purpose or you'll expose\nthem to regular users!\n","readOnly":false,"type":"null or path"},"boot.initrd.network.ssh.port":{"declarations":["nixos/modules/system/boot/initrd-ssh.nix"],"default":22,"description":"Port on which SSH initrd service should listen.\n","readOnly":false,"type":"integer"},"boot.initrd.network.ssh.shell":{"declarations":["nixos/modules/system/boot/initrd-ssh.nix"],"default":"/bin/ash","description":"Login shell of the remote user. Can be used to limit actions user can do.\n","readOnly":false,"type":"string"},"boot.initrd.postDeviceCommands":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Shell commands to be executed immediately after stage 1 of the\nboot has loaded kernel modules and created device nodes in\n<filename>/dev</filename>.\n","readOnly":false,"type":"string"},"boot.initrd.postMountCommands":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Shell commands to be executed immediately after the stage 1\nfilesystems have been mounted.\n","readOnly":false,"type":"string"},"boot.initrd.preDeviceCommands":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Shell commands to be executed before udev is started to create\ndevice nodes.\n","readOnly":false,"type":"string"},"boot.initrd.preFailCommands":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Shell commands to be executed before the failure prompt is shown.\n","readOnly":false,"type":"string"},"boot.initrd.preLVMCommands":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Shell commands to be executed immediately before LVM discovery.\n","readOnly":false,"type":"string"},"boot.initrd.prepend":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":[],"description":"Other initrd files to prepend to the final initrd we are building.\n","readOnly":false,"type":"list of strings"},"boot.initrd.supportedFilesystems":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":[],"description":"Names of supported filesystem types in the initial ramdisk.","example":["btrfs"],"readOnly":false,"type":"list of strings"},"boot.isContainer":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":false,"description":"Whether this NixOS machine is a lightweight container running\nin another NixOS system.\n","readOnly":false,"type":"boolean"},"boot.kernel.sysctl":{"declarations":["nixos/modules/config/sysctl.nix"],"default":{},"description":"Runtime parameters of the Linux kernel, as set by\n<citerefentry><refentrytitle>sysctl</refentrytitle>\n<manvolnum>8</manvolnum></citerefentry>.  Note that sysctl\nparameters names must be enclosed in quotes\n(e.g. <literal>\"vm.swappiness\"</literal> instead of\n<literal>vm.swappiness</literal>).  The value of each\nparameter may be a string, integer, boolean, or null\n(signifying the option will not appear at all).\n","example":{"_type":"literalExample","text":"{ \"net.ipv4.tcp_syncookies\" = false; \"vm.swappiness\" = 60; }\n"},"readOnly":false,"type":"attribute set of sysctl option values"},"boot.kernelModules":{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":[],"description":"The set of kernel modules to be loaded in the second stage of\nthe boot process.  Note that modules that are needed to\nmount the root file system should be added to\n<option>boot.initrd.availableKernelModules</option> or\n<option>boot.initrd.kernelModules</option>.\n","readOnly":false,"type":"list of strings"},"boot.kernelPackages":{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":"pkgs.linuxPackages","description":"This option allows you to override the Linux kernel used by\nNixOS.  Since things like external kernel module packages are\ntied to the kernel you're using, it also overrides those.\nThis option is a function that takes Nixpkgs as an argument\n(as a convenience), and returns an attribute set containing at\nthe very least an attribute <varname>kernel</varname>.\nAdditional attributes may be needed depending on your\nconfiguration.  For instance, if you use the NVIDIA X driver,\nthen it also needs to contain an attribute\n<varname>nvidia_x11</varname>.\n","example":{"_type":"literalExample","text":"pkgs.linuxPackages_2_6_25"},"readOnly":false,"type":"unspecified"},"boot.kernelParams":{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":[],"description":"Parameters added to the kernel command line.","readOnly":false,"type":"list of strings"},"boot.kernelPatches":{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":[],"description":"A list of additional patches to apply to the kernel.","example":{"_type":"literalExample","text":"[ pkgs.kernelPatches.ubuntu_fan_4_4 ]"},"readOnly":false,"type":"list of attribute sets"},"boot.loader.efi.canTouchEfiVariables":{"declarations":["nixos/modules/system/boot/loader/efi.nix"],"default":false,"description":"Whether the installation process is allowed to modify EFI boot variables.","readOnly":false,"type":"boolean"},"boot.loader.efi.efiSysMountPoint":{"declarations":["nixos/modules/system/boot/loader/efi.nix"],"default":"/boot","description":"Where the EFI System Partition is mounted.","readOnly":false,"type":"string"},"boot.loader.efi.efibootmgr.enable":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>boot.loader.efi.canTouchEfiVariables</option>.","readOnly":false,"type":"unspecified"},"boot.loader.generationsDir.copyKernels":{"declarations":["nixos/modules/system/boot/loader/generations-dir/generations-dir.nix"],"default":false,"description":"\n          Whether copy the necessary boot files into /boot, so\n          /nix/store is not needed by the boot loader.\n        ","readOnly":false,"type":"boolean"},"boot.loader.generationsDir.enable":{"declarations":["nixos/modules/system/boot/loader/generations-dir/generations-dir.nix"],"default":false,"description":"Whether to create symlinks to the system generations under\n<literal>/boot</literal>.  When enabled,\n<literal>/boot/default/kernel</literal>,\n<literal>/boot/default/initrd</literal>, etc., are updated to\npoint to the current generation's kernel image, initial RAM\ndisk, and other bootstrap files.\n\nThis optional is not necessary with boot loaders such as GNU GRUB\nfor which the menu is updated to point to the latest bootstrap\nfiles.  However, it is needed for U-Boot on platforms where the\nboot command line is stored in flash memory rather than in a\nmenu file.\n","readOnly":false,"type":"boolean"},"boot.loader.generic-extlinux-compatible.configurationLimit":{"declarations":["nixos/modules/system/boot/loader/generic-extlinux-compatible"],"default":20,"description":"Maximum number of configurations in the boot menu.\n","example":10,"readOnly":false,"type":"integer"},"boot.loader.generic-extlinux-compatible.enable":{"declarations":["nixos/modules/system/boot/loader/generic-extlinux-compatible"],"default":false,"description":"Whether to generate an extlinux-compatible configuration file\nunder <literal>/boot/extlinux.conf</literal>.  For instance,\nU-Boot's generic distro boot support uses this file format.\n\nSee <link xlink:href=\"http://git.denx.de/?p=u-boot.git;a=blob;f=doc/README.distro;hb=refs/heads/master\">U-boot's documentation</link>\nfor more information.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.configurationLimit":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":100,"description":"Maximum of configurations in boot menu. GRUB has problems when\nthere are too many entries.\n","example":120,"readOnly":false,"type":"integer"},"boot.loader.grub.configurationName":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"GRUB entry name instead of default.\n","example":"Stable 2.6.21","readOnly":false,"type":"string"},"boot.loader.grub.copyKernels":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":false,"description":"Whether the GRUB menu builder should copy kernels and initial\nramdisks to /boot.  This is done automatically if /boot is\non a different partition than /.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.default":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":0,"description":"Index of the default menu item to be booted.\n","readOnly":false,"type":"integer"},"boot.loader.grub.device":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"The device on which the GRUB boot loader will be installed.\nThe special value <literal>nodev</literal> means that a GRUB\nboot menu will be generated, but GRUB itself will not\nactually be installed.  To install GRUB on multiple devices,\nuse <literal>boot.loader.grub.devices</literal>.\n","example":"/dev/hda","readOnly":false,"type":"string"},"boot.loader.grub.devices":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":[],"description":"The devices on which the boot loader, GRUB, will be\ninstalled. Can be used instead of <literal>device</literal> to\ninstall GRUB onto multiple devices.\n","example":["/dev/hda"],"readOnly":false,"type":"list of strings"},"boot.loader.grub.efiInstallAsRemovable":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":false,"description":"Whether to invoke <literal>grub-install</literal> with\n<literal>--removable</literal>.</para>\n\n<para>Unless you turn this on, GRUB will install itself somewhere in\n<literal>boot.loader.efi.efiSysMountPoint</literal> (exactly where\ndepends on other config variables). If you've set\n<literal>boot.loader.efi.canTouchEfiVariables</literal> *AND* you\nare currently booted in UEFI mode, then GRUB will use\n<literal>efibootmgr</literal> to modify the boot order in the\nEFI variables of your firmware to include this location. If you are\n*not* booted in UEFI mode at the time GRUB is being installed, the\nNVRAM will not be modified, and your system will not find GRUB at\nboot time. However, GRUB will still return success so you may miss\nthe warning that gets printed (\"<literal>efibootmgr: EFI variables\nare not supported on this system.</literal>\").</para>\n\n<para>If you turn this feature on, GRUB will install itself in a\nspecial location within <literal>efiSysMountPoint</literal> (namely\n<literal>EFI/boot/boot$arch.efi</literal>) which the firmwares\nare hardcoded to try first, regardless of NVRAM EFI variables.</para>\n\n<para>To summarize, turn this on if:\n<itemizedlist>\n  <listitem><para>You are installing NixOS and want it to boot in UEFI mode,\n  but you are currently booted in legacy mode</para></listitem>\n  <listitem><para>You want to make a drive that will boot regardless of\n  the NVRAM state of the computer (like a USB \"removable\" drive)</para></listitem>\n  <listitem><para>You simply dislike the idea of depending on NVRAM\n  state to make your drive bootable</para></listitem>\n</itemizedlist>\n","example":true,"readOnly":false,"type":"boolean"},"boot.loader.grub.efiSupport":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":false,"description":"Whether GRUB should be built with EFI support.\nEFI support is only available for GRUB v2.\nThis option is ignored for GRUB v1.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.enable":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":true,"description":"Whether to enable the GNU GRUB boot loader.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.enableCryptodisk":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":false,"description":"Enable support for encrypted partitions. GRUB should automatically\nunlock the correct encrypted partition and look for filesystems.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.extraConfig":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Additional GRUB commands inserted in the configuration file\njust before the menu entries.\n","example":"serial; terminal_output.serial","readOnly":false,"type":"string"},"boot.loader.grub.extraEntries":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Any additional entries you want added to the GRUB boot menu.\n","example":"# GRUB 1 example (not GRUB 2 compatible)\ntitle Windows\n  chainloader (hd0,1)+1\n\n# GRUB 2 example\nmenuentry \"Windows 7\" {\n  chainloader (hd0,4)+1\n}\n","readOnly":false,"type":"string"},"boot.loader.grub.extraEntriesBeforeNixOS":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":false,"description":"Whether extraEntries are included before the default option.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.extraFiles":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":{},"description":"A set of files to be copied to <filename>/boot</filename>.\nEach attribute name denotes the destination file name in\n<filename>/boot</filename>, while the corresponding\nattribute value specifies the source file.\n","example":{"_type":"literalExample","text":"{ \"memtest.bin\" = \"${pkgs.memtest86plus}/memtest.bin\"; }\n"},"readOnly":false,"type":"attribute set of paths"},"boot.loader.grub.extraPerEntryConfig":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Additional GRUB commands inserted in the configuration file\nat the start of each NixOS menu entry.\n","example":"root (hd0)","readOnly":false,"type":"string"},"boot.loader.grub.extraPrepareConfig":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Additional bash commands to be run at the script that\nprepares the GRUB menu entries.\n","readOnly":false,"type":"string"},"boot.loader.grub.forceInstall":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":false,"description":"Whether to try and forcibly install GRUB even if problems are\ndetected. It is not recommended to enable this unless you know what\nyou are doing.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.fsIdentifier":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"uuid","description":"Determines how GRUB will identify devices when generating the\nconfiguration file. A value of uuid / label signifies that grub\nwill always resolve the uuid or label of the device before using\nit in the configuration. A value of provided means that GRUB will\nuse the device name as show in <command>df</command> or\n<command>mount</command>. Note, zfs zpools / datasets are ignored\nand will always be mounted using their labels.\n","readOnly":false,"type":"one of \"uuid\", \"label\", \"provided\""},"boot.loader.grub.gfxmodeBios":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"1024x768","description":"The gfxmode to pass to GRUB when loading a graphical boot interface under BIOS.\n","example":"auto","readOnly":false,"type":"string"},"boot.loader.grub.gfxmodeEfi":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"auto","description":"The gfxmode to pass to GRUB when loading a graphical boot interface under EFI.\n","example":"1024x768","readOnly":false,"type":"string"},"boot.loader.grub.ipxe":{"declarations":["nixos/modules/system/boot/loader/grub/ipxe.nix"],"default":{},"description":"Set of iPXE scripts available for\nbooting from the GRUB boot menu.\n","example":{"_type":"literalExample","text":"{ demo = ''\n    #!ipxe\n    dhcp\n    chain http://boot.ipxe.org/demo/boot.php\n  '';\n}\n"},"readOnly":false,"type":"attribute set of path or strings"},"boot.loader.grub.memtest86.enable":{"declarations":["nixos/modules/system/boot/loader/grub/memtest.nix"],"default":false,"description":"Make Memtest86+, a memory testing program, available from the\nGRUB boot menu.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.memtest86.params":{"declarations":["nixos/modules/system/boot/loader/grub/memtest.nix"],"default":[],"description":"Parameters added to the Memtest86+ command line. As of memtest86+ 5.01\nthe following list of (apparently undocumented) parameters are\naccepted:\n\n<itemizedlist>\n\n<listitem>\n  <para><literal>console=...</literal>, set up a serial console.\n  Examples:\n  <literal>console=ttyS0</literal>,\n  <literal>console=ttyS0,9600</literal> or\n  <literal>console=ttyS0,115200n8</literal>.</para>\n</listitem>\n\n<listitem>\n  <para><literal>btrace</literal>, enable boot trace.</para>\n</listitem>\n\n<listitem>\n  <para><literal>maxcpus=N</literal>, limit number of CPUs.</para>\n</listitem>\n\n<listitem>\n  <para><literal>onepass</literal>, run one pass and exit if there\n  are no errors.</para>\n</listitem>\n\n<listitem>\n  <para><literal>tstlist=...</literal>, list of tests to run.\n  Example: <literal>0,1,2</literal>.</para>\n</listitem>\n\n<listitem>\n  <para><literal>cpumask=...</literal>, set a CPU mask, to select CPUs\n  to use for testing.</para>\n</listitem>\n\n</itemizedlist>\n\nThis list of command line options was obtained by reading the\nMemtest86+ source code.\n","example":["console=ttyS0,115200"],"readOnly":false,"type":"list of strings"},"boot.loader.grub.mirroredBoots":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":[],"description":"Mirror the boot configuration to multiple partitions and install grub\nto the respective devices corresponding to those partitions.\n","example":[{"devices":["/dev/sda"],"path":"/boot1"},{"devices":["/dev/sdb"],"path":"/boot2"}],"readOnly":false,"type":"list of submodules"},"boot.loader.grub.mirroredBoots.*.devices":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":[],"description":"The path to the devices which will have the GRUB MBR written.\nNote these are typically device paths and not paths to partitions.\n","example":["/dev/sda","/dev/sdb"],"readOnly":false,"type":"list of strings"},"boot.loader.grub.mirroredBoots.*.efiBootloaderId":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":null,"description":"The id of the bootloader to store in efi nvram.\nThe default is to name it NixOS and append the path or efiSysMountPoint.\nThis is only used if <literal>boot.loader.efi.canTouchEfiVariables</literal> is true.\n","example":"NixOS-fsid","readOnly":false,"type":"null or string"},"boot.loader.grub.mirroredBoots.*.efiSysMountPoint":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":null,"description":"The path to the efi system mount point. Usually this is the same\npartition as the above path and can be left as null.\n","example":"/boot1/efi","readOnly":false,"type":"null or string"},"boot.loader.grub.mirroredBoots.*.path":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"description":"The path to the boot directory where GRUB will be written. Generally\nthis boot path should double as an EFI path.\n","example":"/boot1","readOnly":false,"type":"string"},"boot.loader.grub.splashImage":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"description":"Background image used for GRUB.  It must be a 640x480,\n14-colour image in XPM format, optionally compressed with\n<command>gzip</command> or <command>bzip2</command>.  Set to\n<literal>null</literal> to run GRUB in text mode.\n","example":{"_type":"literalExample","text":"./my-background.png"},"readOnly":false,"type":"null or path"},"boot.loader.grub.storePath":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"/nix/store","description":"Path to the Nix store when looking for kernels at boot.\nOnly makes sense when copyKernels is false.\n","readOnly":false,"type":"string"},"boot.loader.grub.timeout":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>boot.loader.timeout</option>.","readOnly":false,"type":"unspecified"},"boot.loader.grub.trustedBoot.enable":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":false,"description":"Enable trusted boot. GRUB will measure all critical components during\nthe boot process to offer TCG (TPM) support.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.trustedBoot.isHPLaptop":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":false,"description":"Use a special version of TrustedGRUB that is needed by some HP laptops\nand works only for the HP laptops.\n","readOnly":false,"type":"boolean"},"boot.loader.grub.trustedBoot.systemHasTPM":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":"","description":"Assertion that the target system has an activated TPM. It is a safety\ncheck before allowing the activation of 'trustedBoot.enable'. TrustedBoot\nWILL FAIL TO BOOT YOUR SYSTEM if no TPM is available.\n","example":"YES_TPM_is_activated","readOnly":false,"type":"string"},"boot.loader.grub.version":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":2,"description":"The version of GRUB to use: <literal>1</literal> for GRUB\nLegacy (versions 0.9x), or <literal>2</literal> (the\ndefault) for GRUB 2.\n","example":1,"readOnly":false,"type":"integer"},"boot.loader.grub.zfsSupport":{"declarations":["nixos/modules/system/boot/loader/grub/grub.nix"],"default":false,"description":"Whether GRUB should be built against libzfs.\nZFS support is only available for GRUB v2.\nThis option is ignored for GRUB v1.\n","readOnly":false,"type":"boolean"},"boot.loader.gummiboot.enable":{"declarations":["nixos/modules/system/boot/loader/systemd-boot/systemd-boot.nix"],"description":"Alias of <option>boot.loader.systemd-boot.enable</option>.","readOnly":false,"type":"unspecified"},"boot.loader.gummiboot.timeout":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>boot.loader.timeout</option>.","readOnly":false,"type":"unspecified"},"boot.loader.initScript.enable":{"declarations":["nixos/modules/system/boot/loader/init-script/init-script.nix"],"default":false,"description":"Some systems require a /sbin/init script which is started.\nOr having it makes starting NixOS easier.\nThis applies to some kind of hosting services and user mode linux.\n\nAdditionally this script will create\n/boot/init-other-configurations-contents.txt containing\ncontents of remaining configurations. You can copy paste them into\n/sbin/init manually running a rescue system or such.\n","readOnly":false,"type":"boolean"},"boot.loader.raspberryPi.enable":{"declarations":["nixos/modules/system/boot/loader/raspberrypi/raspberrypi.nix"],"default":false,"description":"Whether to create files with the system generations in\n<literal>/boot</literal>.\n<literal>/boot/old</literal> will hold files from old generations.\n","readOnly":false,"type":"boolean"},"boot.loader.raspberryPi.version":{"declarations":["nixos/modules/system/boot/loader/raspberrypi/raspberrypi.nix"],"default":2,"description":"","readOnly":false,"type":"one of 1, 2"},"boot.loader.systemd-boot.enable":{"declarations":["nixos/modules/system/boot/loader/systemd-boot/systemd-boot.nix"],"default":false,"description":"Whether to enable the systemd-boot (formerly gummiboot) EFI boot manager","readOnly":false,"type":"boolean"},"boot.loader.timeout":{"declarations":["nixos/modules/system/boot/loader/loader.nix"],"default":5,"description":"Timeout (in seconds) until loader boots the default menu item. Use null if the loader menu should be displayed indefinitely.\n","readOnly":false,"type":"null or integer"},"boot.plymouth.enable":{"declarations":["nixos/modules/system/boot/plymouth.nix"],"default":false,"description":"Whether to enable Plymouth boot splash screen.","example":true,"readOnly":false,"type":"boolean"},"boot.plymouth.logo":{"declarations":["nixos/modules/system/boot/plymouth.nix"],"default":"pkgs.fetchurl {\n          url = \"https://nixos.org/logo/nixos-hires.png\";\n          sha256 = \"1ivzgd7iz0i06y36p8m5w48fd8pjqwxhdaavc0pxs7w1g7mcy5si\";\n        }","description":"Logo which is displayed on the splash screen.\n","readOnly":false,"type":"path"},"boot.plymouth.theme":{"declarations":["nixos/modules/system/boot/plymouth.nix"],"default":"fade-in","description":"Splash screen theme.\n","readOnly":false,"type":"string"},"boot.plymouth.themePackages":{"declarations":["nixos/modules/system/boot/plymouth.nix"],"default":[],"description":"Extra theme packages for plymouth.\n","readOnly":false,"type":"list of packages"},"boot.postBootCommands":{"declarations":["nixos/modules/system/boot/stage-2.nix"],"default":"","description":"Shell commands to be executed just before systemd is started.\n","example":"rm -f /var/log/messages","readOnly":false,"type":"string"},"boot.resumeDevice":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":"","description":"Device for manual resume attempt during boot. This should be used primarily\nif you want to resume from file. If left empty, the swap partitions are used.\nSpecify here the device where the file resides.\nYou should also use <varname>boot.kernelParams</varname> to specify\n<literal><replaceable>resume_offset</replaceable></literal>.\n","example":"/dev/sda3","readOnly":false,"type":"string"},"boot.runSize":{"declarations":["nixos/modules/system/boot/stage-2.nix"],"default":"25%","description":"Size limit for the /run tmpfs. Look at mount(8), tmpfs size option,\nfor the accepted syntax.\n","example":"256m","readOnly":false,"type":"string"},"boot.specialFileSystems.<name?>.device":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":null,"description":"Location of the device.","example":"/dev/sda","readOnly":false,"type":"null or string"},"boot.specialFileSystems.<name?>.fsType":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":"auto","description":"Type of the file system.","example":"ext3","readOnly":false,"type":"string"},"boot.specialFileSystems.<name?>.mountPoint":{"declarations":["nixos/modules/tasks/filesystems.nix"],"description":"Location of the mounted the file system.","example":"/mnt/usb","readOnly":false,"type":"string"},"boot.specialFileSystems.<name?>.options":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":["defaults"],"description":"Options used to mount the file system.","example":["data=journal"],"readOnly":false,"type":"list of strings"},"boot.supportedFilesystems":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":[],"description":"Names of supported filesystem types.","example":["btrfs"],"readOnly":false,"type":"list of strings"},"boot.systemd.services":{"declarations":["nixos/modules/system/boot/systemd.nix"],"description":"Alias of <option>systemd.services</option>.","readOnly":false,"type":"unspecified"},"boot.systemd.sockets":{"declarations":["nixos/modules/system/boot/systemd.nix"],"description":"Alias of <option>systemd.sockets</option>.","readOnly":false,"type":"unspecified"},"boot.systemd.targets":{"declarations":["nixos/modules/system/boot/systemd.nix"],"description":"Alias of <option>systemd.targets</option>.","readOnly":false,"type":"unspecified"},"boot.tmpOnTmpfs":{"declarations":["nixos/modules/system/boot/tmp.nix"],"default":false,"description":"Whether to mount a tmpfs on <filename>/tmp</filename> during boot.\n","readOnly":false,"type":"boolean"},"boot.vesa":{"declarations":["nixos/modules/system/boot/kernel.nix"],"default":false,"description":"Whether to activate VESA video mode on boot.\n","readOnly":false,"type":"boolean"},"boot.zfs.devNodes":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"/dev/disk/by-id","description":"Name of directory from which to import ZFS devices.\n\nThis should be a path under /dev containing stable names for all devices needed, as\nimport may fail if device nodes are renamed concurrently with a device failing.\n","example":"/dev/disk/by-id","readOnly":false,"type":"path"},"boot.zfs.extraPools":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":[],"description":"Name or GUID of extra ZFS pools that you wish to import during boot.\n\nUsually this is not necessary. Instead, you should set the mountpoint property\nof ZFS filesystems to <literal>legacy</literal> and add the ZFS filesystems to\nNixOS's <option>fileSystems</option> option, which makes NixOS automatically\nimport the associated pool.\n\nHowever, in some cases (e.g. if you have many filesystems) it may be preferable\nto exclusively use ZFS commands to manage filesystems. If so, since NixOS/systemd\nwill not be managing those filesystems, you will need to specify the ZFS pool here\nso that NixOS automatically imports it on every boot.\n","example":["tank","data"],"readOnly":false,"type":"list of strings"},"boot.zfs.forceImportAll":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":true,"description":"Forcibly import all ZFS pool(s).\n\nThis is enabled by default for backwards compatibility purposes, but it is highly\nrecommended to disable this option, as it bypasses some of the safeguards ZFS uses\nto protect your ZFS pools.\n\nIf you set this option to <literal>false</literal> and NixOS subsequently fails to\nimport your non-root ZFS pool(s), you should manually import each pool with\n\"zpool import -f &lt;pool-name&gt;\", and then reboot. You should only need to do\nthis once.\n","example":false,"readOnly":false,"type":"boolean"},"boot.zfs.forceImportRoot":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":true,"description":"Forcibly import the ZFS root pool(s) during early boot.\n\nThis is enabled by default for backwards compatibility purposes, but it is highly\nrecommended to disable this option, as it bypasses some of the safeguards ZFS uses\nto protect your ZFS pools.\n\nIf you set this option to <literal>false</literal> and NixOS subsequently fails to\nboot because it cannot import the root pool, you should boot with the\n<literal>zfs_force=1</literal> option as a kernel parameter (e.g. by manually\nediting the kernel params in grub during boot). You should only need to do this\nonce.\n","example":false,"readOnly":false,"type":"boolean"},"containers":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":{},"description":"A set of NixOS system configurations to be run as lightweight\ncontainers.  Each container appears as a service\n<literal>container-<replaceable>name</replaceable></literal>\non the host system, allowing it to be started and stopped via\n<command>systemctl</command>.\n","example":{"_type":"literalExample","text":"{ webserver =\n    { path = \"/nix/var/nix/profiles/webserver\";\n    };\n  database =\n    { config =\n        { config, pkgs, ... }:\n        { services.postgresql.enable = true;\n          services.postgresql.package = pkgs.postgresql92;\n        };\n    };\n}\n"},"readOnly":false,"type":"attribute set of submodules"},"containers.<name>.additionalCapabilities":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":[],"description":"Grant additional capabilities to the container.  See the\ncapabilities(7) and systemd-nspawn(1) man pages for more\ninformation.\n","example":["CAP_NET_ADMIN","CAP_MKNOD"],"readOnly":false,"type":"list of strings"},"containers.<name>.allowedDevices":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":[],"description":"A list of device nodes to which the containers has access to.\n","example":[{"modifier":"rw","node":"/dev/net/tun"}],"readOnly":false,"type":"list of submodules"},"containers.<name>.allowedDevices.*.modifier":{"declarations":["nixos/modules/virtualisation/containers.nix"],"description":"Device node access modifier. Takes a combination\n<literal>r</literal> (read), <literal>w</literal> (write), and\n<literal>m</literal> (mknod). See the\n<literal>systemd.resource-control(5)</literal> man page for more\ninformation.","example":"rw","readOnly":false,"type":"string"},"containers.<name>.allowedDevices.*.node":{"declarations":["nixos/modules/virtualisation/containers.nix"],"description":"Path to device node","example":"/dev/net/tun","readOnly":false,"type":"string"},"containers.<name>.autoStart":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":false,"description":"Wether the container is automatically started at boot-time.\n","readOnly":false,"type":"boolean"},"containers.<name>.bindMounts":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":{},"description":"An extra list of directories that is bound to the container.\n","example":{"/home":{"hostPath":"/home/alice","isReadOnly":false}},"readOnly":false,"type":"list or attribute set of submodules"},"containers.<name>.bindMounts.<name?>.hostPath":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"Location of the host path to be mounted.","example":"/home/alice","readOnly":false,"type":"null or string"},"containers.<name>.bindMounts.<name?>.isReadOnly":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":true,"description":"Determine whether the mounted path will be accessed in read-only mode.","example":true,"readOnly":false,"type":"boolean"},"containers.<name>.bindMounts.<name?>.mountPoint":{"declarations":["nixos/modules/virtualisation/containers.nix"],"description":"Mount point on the container file system.","example":"/mnt/usb","readOnly":false,"type":"string"},"containers.<name>.config":{"declarations":["nixos/modules/virtualisation/containers.nix"],"description":"A specification of the desired configuration of this\ncontainer, as a NixOS module.\n","readOnly":false,"type":"Toplevel NixOS config"},"containers.<name>.enableTun":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":false,"description":"Allows the container to create and setup tunnel interfaces\nby granting the <literal>NET_ADMIN</literal> capability and\nenabling access to <literal>/dev/net/tun</literal>.\n","readOnly":false,"type":"boolean"},"containers.<name>.extraVeths":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":{},"description":"Extra veth-pairs to be created for the container\n","readOnly":false,"type":"attribute set of submodules"},"containers.<name>.extraVeths.<name>.hostAddress":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"The IPv4 address assigned to the host interface.\n(Not used when hostBridge is set.)\n","example":"10.231.136.1","readOnly":false,"type":"null or string"},"containers.<name>.extraVeths.<name>.hostAddress6":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"The IPv6 address assigned to the host interface.\n(Not used when hostBridge is set.)\n","example":"fc00::1","readOnly":false,"type":"null or string"},"containers.<name>.extraVeths.<name>.hostBridge":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"Put the host-side of the veth-pair into the named bridge.\nOnly one of hostAddress* or hostBridge can be given.\n","example":"br0","readOnly":false,"type":"null or string"},"containers.<name>.extraVeths.<name>.localAddress":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"The IPv4 address assigned to the interface in the container.\nIf a hostBridge is used, this should be given with netmask to access\nthe whole network. Otherwise the default netmask is /32 and routing is\nset up from localAddress to hostAddress and back.\n","example":"10.231.136.2","readOnly":false,"type":"null or string"},"containers.<name>.extraVeths.<name>.localAddress6":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"The IPv6 address assigned to the interface in the container.\nIf a hostBridge is used, this should be given with netmask to access\nthe whole network. Otherwise the default netmask is /128 and routing is\nset up from localAddress6 to hostAddress6 and back.\n","example":"fc00::2","readOnly":false,"type":"null or string"},"containers.<name>.hostAddress":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"The IPv4 address assigned to the host interface.\n(Not used when hostBridge is set.)\n","example":"10.231.136.1","readOnly":false,"type":"null or string"},"containers.<name>.hostAddress6":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"The IPv6 address assigned to the host interface.\n(Not used when hostBridge is set.)\n","example":"fc00::1","readOnly":false,"type":"null or string"},"containers.<name>.hostBridge":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"Put the host-side of the veth-pair into the named bridge.\nOnly one of hostAddress* or hostBridge can be given.\n","example":"br0","readOnly":false,"type":"null or string"},"containers.<name>.interfaces":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":[],"description":"The list of interfaces to be moved into the container.\n","example":["eth1","eth2"],"readOnly":false,"type":"list of strings"},"containers.<name>.localAddress":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"The IPv4 address assigned to the interface in the container.\nIf a hostBridge is used, this should be given with netmask to access\nthe whole network. Otherwise the default netmask is /32 and routing is\nset up from localAddress to hostAddress and back.\n","example":"10.231.136.2","readOnly":false,"type":"null or string"},"containers.<name>.localAddress6":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":null,"description":"The IPv6 address assigned to the interface in the container.\nIf a hostBridge is used, this should be given with netmask to access\nthe whole network. Otherwise the default netmask is /128 and routing is\nset up from localAddress6 to hostAddress6 and back.\n","example":"fc00::2","readOnly":false,"type":"null or string"},"containers.<name>.macvlans":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":[],"description":"The list of host interfaces from which macvlans will be\ncreated. For each interface specified, a macvlan interface\nwill be created and moved to the container.\n","example":["eth1","eth2"],"readOnly":false,"type":"list of strings"},"containers.<name>.path":{"declarations":["nixos/modules/virtualisation/containers.nix"],"description":"As an alternative to specifying\n<option>config</option>, you can specify the path to\nthe evaluated NixOS system configuration, typically a\nsymlink to a system profile.\n","example":"/nix/var/nix/profiles/containers/webserver","readOnly":false,"type":"path"},"containers.<name>.privateNetwork":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":false,"description":"Whether to give the container its own private virtual\nEthernet interface.  The interface is called\n<literal>eth0</literal>, and is hooked up to the interface\n<literal>ve-<replaceable>container-name</replaceable></literal>\non the host.  If this option is not set, then the\ncontainer shares the network interfaces of the host,\nand can bind to any port on any interface.\n","readOnly":false,"type":"boolean"},"containers.<name>.tmpfs":{"declarations":["nixos/modules/virtualisation/containers.nix"],"default":[],"description":"Mounts a set of tmpfs file systems into the container.\nMultiple paths can be specified.\nValid items must conform to the --tmpfs argument\nof systemd-nspawn. See systemd-nspawn(1) for details.\n","example":["/var"],"readOnly":false,"type":"list of strings"},"dysnomia.components":{"declarations":["nixos/modules/services/misc/dysnomia.nix"],"default":{},"description":"An atttribute set in which each key represents a container and each value an attribute set in which each key represents a component and each value a derivation constructing its initial state","readOnly":false,"type":"unspecified"},"dysnomia.containers":{"declarations":["nixos/modules/services/misc/dysnomia.nix"],"default":{},"description":"An attribute set in which each key represents a container and each value an attribute set providing its configuration properties","readOnly":false,"type":"unspecified"},"dysnomia.enable":{"declarations":["nixos/modules/services/misc/dysnomia.nix"],"default":false,"description":"Whether to enable Dysnomia","readOnly":false,"type":"boolean"},"dysnomia.enableAuthentication":{"declarations":["nixos/modules/services/misc/dysnomia.nix"],"default":false,"description":"Whether to publish privacy-sensitive authentication credentials","readOnly":false,"type":"boolean"},"dysnomia.extraContainerPaths":{"declarations":["nixos/modules/services/misc/dysnomia.nix"],"default":[],"description":"A list of paths containing additional container configurations that are added to the search folders","readOnly":false,"type":"unspecified"},"dysnomia.extraContainerProperties":{"declarations":["nixos/modules/services/misc/dysnomia.nix"],"default":{},"description":"An attribute set providing additional container settings in addition to the default properties","readOnly":false,"type":"unspecified"},"dysnomia.extraModulePaths":{"declarations":["nixos/modules/services/misc/dysnomia.nix"],"default":[],"description":"A list of paths containing additional modules that are added to the search folders","readOnly":false,"type":"unspecified"},"dysnomia.package":{"declarations":["nixos/modules/services/misc/dysnomia.nix"],"description":"The Dysnomia package","readOnly":false,"type":"path"},"dysnomia.properties":{"declarations":["nixos/modules/services/misc/dysnomia.nix"],"default":{},"description":"An attribute set in which each attribute represents a machine property. Optionally, these values can be shell substitutions.","readOnly":false,"type":"unspecified"},"environment.blcr.enable":{"declarations":["nixos/modules/programs/blcr.nix"],"default":false,"description":"Whether to enable support for the BLCR checkpointing tool.","readOnly":false,"type":"unspecified"},"environment.checkConfigurationOptions":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>_module.check</option>.","readOnly":false,"type":"unspecified"},"environment.enableBashCompletion":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>programs.bash.enableCompletion</option>.","readOnly":false,"type":"unspecified"},"environment.enableDebugInfo":{"declarations":["nixos/modules/config/debug-info.nix"],"default":false,"description":"Some NixOS packages provide debug symbols. However, these are\nnot included in the system closure by default to save disk\nspace. Enabling this option causes the debug symbols to appear\nin <filename>/run/current-system/sw/lib/debug/.build-id</filename>,\nwhere tools such as <command>gdb</command> can find them.\nIf you need debug symbols for a package that doesn't\nprovide them by default, you can enable them as follows:\n<programlisting>\nnixpkgs.config.packageOverrides = pkgs: {\n  hello = pkgs.hello.overrideAttrs (oldAttrs: {\n    separateDebugInfo = true;\n  });\n};\n</programlisting>\n","readOnly":false,"type":"boolean"},"environment.etc":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":{},"description":"Set of files that have to be linked in <filename>/etc</filename>.\n","example":{"_type":"literalExample","text":"{ example-configuration-file =\n    { source = \"/nix/store/.../etc/dir/file.conf.example\";\n      mode = \"0440\";\n    };\n  \"default/useradd\".text = \"GROUP=100 ...\";\n}\n"},"readOnly":false,"type":"list or attribute set of submodules"},"environment.etc.<name?>.enable":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":true,"description":"Whether this /etc file should be generated.  This\noption allows specific /etc files to be disabled.\n","readOnly":false,"type":"boolean"},"environment.etc.<name?>.gid":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":0,"description":"GID of created file. Only takes affect when the file is\ncopied (that is, the mode is not 'symlink').\n","readOnly":false,"type":"integer"},"environment.etc.<name?>.mode":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":"symlink","description":"If set to something else than <literal>symlink</literal>,\nthe file is copied instead of symlinked, with the given\nfile mode.\n","example":"0600","readOnly":false,"type":"string"},"environment.etc.<name?>.source":{"declarations":["nixos/modules/system/etc/etc.nix"],"description":"Path of the source file.","readOnly":false,"type":"path"},"environment.etc.<name?>.target":{"declarations":["nixos/modules/system/etc/etc.nix"],"description":"Name of symlink (relative to\n<filename>/etc</filename>).  Defaults to the attribute\nname.\n","readOnly":false,"type":"string"},"environment.etc.<name?>.text":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":null,"description":"Text of the file.","readOnly":false,"type":"null or string"},"environment.etc.<name?>.uid":{"declarations":["nixos/modules/system/etc/etc.nix"],"default":0,"description":"UID of created file. Only takes affect when the file is\ncopied (that is, the mode is not 'symlink').\n","readOnly":false,"type":"integer"},"environment.extraInit":{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"Shell script code called during global environment initialisation\nafter all variables and profileVariables have been set.\nThis code is asumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n","readOnly":false,"type":"string"},"environment.extraOutputsToInstall":{"declarations":["nixos/modules/config/system-path.nix"],"default":[],"description":"List of additional package outputs to be symlinked into <filename>/run/current-system/sw</filename>.","example":["doc","info","devdoc"],"readOnly":false,"type":"list of strings"},"environment.freetds":{"declarations":["nixos/modules/programs/freetds.nix"],"default":{},"description":"Configure freetds database entries. Each attribute denotes\na section within freetds.conf, and the value (a string) is the config\ncontent for that section. When at least one entry is configured\nthe global environment variables FREETDSCONF, FREETDS and SYBASE\nwill be configured to allow the programs that use freetds to find the\nlibrary and config.\n","example":{"_type":"literalExample","text":"{ MYDATABASE = ''\n    host = 10.0.2.100\n    port = 1433\n    tds version = 7.2\n  '';\n}\n"},"readOnly":false,"type":"attribute set of strings"},"environment.gnome3.excludePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":[],"description":"Which packages gnome should exclude from the default environment","example":{"_type":"literalExample","text":"[ pkgs.gnome3.totem ]"},"readOnly":false,"type":"list of packages"},"environment.gnome3.packageSet":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":null,"description":"Which GNOME 3 package set to use.","example":{"_type":"literalExample","text":"pkgs.gnome3_22"},"readOnly":false,"type":"unspecified"},"environment.interactiveShellInit":{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"Shell script code called during interactive shell initialisation.\nThis code is asumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n","readOnly":false,"type":"string"},"environment.kdePackages":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>environment.systemPackages</option>.","readOnly":false,"type":"unspecified"},"environment.loginShellInit":{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"Shell script code called during login shell initialisation.\nThis code is asumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n","readOnly":false,"type":"string"},"environment.nix":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>nix.package</option>.","readOnly":false,"type":"unspecified"},"environment.noXlibs":{"declarations":["nixos/modules/config/no-x-libs.nix"],"default":false,"description":"Switch off the options in the default configuration that\nrequire X11 libraries. This includes client-side font\nconfiguration and SSH forwarding of X11 authentication\nin. Thus, you probably do not want to enable this option if\nyou want to run X11 programs on this machine via SSH.\n","readOnly":false,"type":"boolean"},"environment.pathsToLink":{"declarations":["nixos/modules/config/system-path.nix"],"default":[],"description":"List of directories to be symlinked in <filename>/run/current-system/sw</filename>.","example":["/"],"readOnly":false,"type":"list of strings"},"environment.profileRelativeEnvVars":{"declarations":["nixos/modules/config/shells-environment.nix"],"description":"Attribute set of environment variable.  Each attribute maps to a list\nof relative paths.  Each relative path is appended to the each profile\nof <option>environment.profiles</option> to form the content of the\ncorresponding environment variable.\n","example":{"MANPATH":["/man","/share/man"],"PATH":["/bin","/sbin"]},"readOnly":false,"type":"attribute set of list of stringss"},"environment.profiles":{"declarations":["nixos/modules/config/shells-environment.nix"],"default":[],"description":"A list of profiles used to setup the global environment.\n","readOnly":false,"type":"list of strings"},"environment.promptInit":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>programs.bash.promptInit</option>.","readOnly":false,"type":"unspecified"},"environment.sessionVariables":{"declarations":["nixos/modules/config/system-environment.nix"],"default":{},"description":"A set of environment variables used in the global environment.\nThese variables will be set by PAM.\nThe value of each variable can be either a string or a list of\nstrings.  The latter is concatenated, interspersed with colon\ncharacters.\n","readOnly":false,"type":"attribute set of string or list of stringss"},"environment.shellAliases":{"declarations":["nixos/modules/config/shells-environment.nix"],"default":{},"description":"An attribute set that maps aliases (the top level attribute names in\nthis option) to command strings or directly to build outputs. The\naliases are added to all users' shells.\n","example":{"ll":"ls -l"},"readOnly":false,"type":"attribute set"},"environment.shellInit":{"declarations":["nixos/modules/config/shells-environment.nix"],"default":"","description":"Shell script code called during shell initialisation.\nThis code is asumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n","readOnly":false,"type":"string"},"environment.shells":{"declarations":["nixos/modules/config/shells-environment.nix"],"default":[],"description":"A list of permissible login shells for user accounts.\nNo need to mention <literal>/bin/sh</literal>\nhere, it is placed into this list implicitly.\n","example":{"_type":"literalExample","text":"[ pkgs.bashInteractive pkgs.zsh ]"},"readOnly":false,"type":"list of package or paths"},"environment.systemPackages":{"declarations":["nixos/modules/config/system-path.nix"],"default":[],"description":"The set of packages that appear in\n/run/current-system/sw.  These packages are\nautomatically available to all users, and are\nautomatically updated every time you rebuild the system\nconfiguration.  (The latter is the main difference with\ninstalling them in the default profile,\n<filename>/nix/var/nix/profiles/default</filename>.\n","example":{"_type":"literalExample","text":"[ pkgs.firefox pkgs.thunderbird ]"},"readOnly":false,"type":"list of packages"},"environment.unixODBCDrivers":{"declarations":["nixos/modules/config/unix-odbc-drivers.nix"],"default":[],"description":"Specifies Unix ODBC drivers to be registered in\n<filename>/etc/odbcinst.ini</filename>.  You may also want to\nadd <literal>pkgs.unixODBC</literal> to the system path to get\na command line client to connnect to ODBC databases.\n","example":{"_type":"literalExample","text":"with pkgs.unixODBCDrivers; [ sqlite psql ]"},"readOnly":false,"type":"list of packages"},"environment.variables":{"declarations":["nixos/modules/config/shells-environment.nix"],"default":{},"description":"A set of environment variables used in the global environment.\nThese variables will be set on shell initialisation.\nThe value of each variable can be either a string or a list of\nstrings.  The latter is concatenated, interspersed with colon\ncharacters.\n","readOnly":false,"type":"attribute set of string or list of stringss"},"environment.wvdial.dialerDefaults":{"declarations":["nixos/modules/programs/wvdial.nix"],"default":"","description":"Contents of the \"Dialer Defaults\" section of\n<filename>/etc/wvdial.conf</filename>.\n","example":"Init1 = AT+CGDCONT=1,\"IP\",\"internet.t-mobile\"","readOnly":false,"type":"string"},"environment.wvdial.pppDefaults":{"declarations":["nixos/modules/programs/wvdial.nix"],"default":"noipdefault\nusepeerdns\ndefaultroute\npersist\nnoauth\n","description":"Default ppp settings for wvdial.","readOnly":false,"type":"string"},"environment.x11Packages":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>environment.systemPackages</option>.","readOnly":false,"type":"unspecified"},"fileSystems":{"declarations":["nixos/modules/tasks/filesystems.nix","nixos/modules/tasks/encrypted-devices.nix","nixos/modules/system/boot/stage-1.nix"],"default":{},"description":"The file systems to be mounted.  It must include an entry for\nthe root directory (<literal>mountPoint = \"/\"</literal>).  Each\nentry in the list is an attribute set with the following fields:\n<literal>mountPoint</literal>, <literal>device</literal>,\n<literal>fsType</literal> (a file system type recognised by\n<command>mount</command>; defaults to\n<literal>\"auto\"</literal>), and <literal>options</literal>\n(the mount options passed to <command>mount</command> using the\n<option>-o</option> flag; defaults to <literal>[ \"defaults\" ]</literal>).\n\nInstead of specifying <literal>device</literal>, you can also\nspecify a volume label (<literal>label</literal>) for file\nsystems that support it, such as ext2/ext3 (see <command>mke2fs\n-L</command>).\n","example":{"_type":"literalExample","text":"{\n  \"/\".device = \"/dev/hda1\";\n  \"/data\" = {\n    device = \"/dev/hda2\";\n    fsType = \"ext3\";\n    options = [ \"data=journal\" ];\n  };\n  \"/bigdisk\".label = \"bigdisk\";\n}\n"},"readOnly":false,"type":"list or attribute set of submodules"},"fileSystems.<name?>.autoFormat":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":false,"description":"If the device does not currently contain a filesystem (as\ndetermined by <command>blkid</command>, then automatically\nformat it with the filesystem type specified in\n<option>fsType</option>.  Use with caution.\n","readOnly":false,"type":"boolean"},"fileSystems.<name?>.autoResize":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":false,"description":"If set, the filesystem is grown to its maximum size before\nbeing mounted. (This is typically the size of the containing\npartition.) This is currently only supported for ext2/3/4\nfilesystems that are mounted during early boot.\n","readOnly":false,"type":"boolean"},"fileSystems.<name?>.device":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":null,"description":"Location of the device.","example":"/dev/sda","readOnly":false,"type":"null or string"},"fileSystems.<name?>.encrypted.blkDev":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":null,"description":"Location of the backing encrypted device.","example":"/dev/sda1","readOnly":false,"type":"null or string"},"fileSystems.<name?>.encrypted.enable":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":false,"description":"The block device is backed by an encrypted one, adds this device as a initrd luks entry.","readOnly":false,"type":"boolean"},"fileSystems.<name?>.encrypted.keyFile":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":null,"description":"File system location of keyfile. This unlocks the drive after the root has been mounted to <literal>/mnt-root</literal>.","example":"/root/.swapkey","readOnly":false,"type":"null or string"},"fileSystems.<name?>.encrypted.label":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":null,"description":"Label of the unlocked encrypted device. Set <literal>fileSystems.&lt;name?&gt;.device</literal> to <literal>/dev/mapper/&lt;label&gt;</literal> to mount the unlocked device.","example":"rootfs","readOnly":false,"type":"null or string"},"fileSystems.<name?>.formatOptions":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":"","description":"If <option>autoFormat</option> option is set specifies\nextra options passed to mkfs.\n","readOnly":false,"type":"string"},"fileSystems.<name?>.fsType":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":"auto","description":"Type of the file system.","example":"ext3","readOnly":false,"type":"string"},"fileSystems.<name?>.label":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":null,"description":"Label of the device (if any).","example":"root-partition","readOnly":false,"type":"null or string"},"fileSystems.<name?>.mountPoint":{"declarations":["nixos/modules/tasks/filesystems.nix"],"description":"Location of the mounted the file system.","example":"/mnt/usb","readOnly":false,"type":"string"},"fileSystems.<name?>.neededForBoot":{"declarations":["nixos/modules/system/boot/stage-1.nix"],"default":false,"description":"If set, this file system will be mounted in the initial\nramdisk.  By default, this applies to the root file system\nand to the file system containing\n<filename>/nix/store</filename>.\n","readOnly":false,"type":"boolean"},"fileSystems.<name?>.noCheck":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":false,"description":"Disable running fsck on this filesystem.","readOnly":false,"type":"boolean"},"fileSystems.<name?>.options":{"declarations":["nixos/modules/tasks/filesystems.nix"],"default":["defaults"],"description":"Options used to mount the file system.","example":["data=journal"],"readOnly":false,"type":"list of strings"},"fonts.enableDefaultFonts":{"declarations":["nixos/modules/config/fonts/fonts.nix"],"default":false,"description":"Enable a basic set of fonts providing several font styles\nand families and reasonable coverage of Unicode.\n","readOnly":false,"type":"boolean"},"fonts.enableFontConfig":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>fonts.fontconfig.enable</option>.","readOnly":false,"type":"unspecified"},"fonts.enableFontDir":{"declarations":["nixos/modules/config/fonts/fontdir.nix"],"default":false,"description":"Whether to create a directory with links to all fonts in\n<filename>/run/current-system/sw/share/X11-fonts</filename>.\n","readOnly":false,"type":"unspecified"},"fonts.enableGhostscriptFonts":{"declarations":["nixos/modules/config/fonts/ghostscript.nix"],"default":false,"description":"Whether to add the fonts provided by Ghostscript (such as\nvarious URW fonts and the “Base-14” Postscript fonts) to the\nlist of system fonts, making them available to X11\napplications.\n","readOnly":false,"type":"unspecified"},"fonts.extraFonts":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>fonts.fonts</option>.","readOnly":false,"type":"unspecified"},"fonts.fontconfig.antialias":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":true,"description":"Enable font antialiasing.","readOnly":false,"type":"boolean"},"fonts.fontconfig.cache32Bit":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":false,"description":"Generate system fonts cache for 32-bit applications.\n","readOnly":false,"type":"boolean"},"fonts.fontconfig.defaultFonts.monospace":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":["DejaVu Sans Mono"],"description":"System-wide default monospace font(s). Multiple fonts may be\nlisted in case multiple languages must be supported.\n","readOnly":false,"type":"list of strings"},"fonts.fontconfig.defaultFonts.sansSerif":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":["DejaVu Sans"],"description":"System-wide default sans serif font(s). Multiple fonts may be\nlisted in case multiple languages must be supported.\n","readOnly":false,"type":"list of strings"},"fonts.fontconfig.defaultFonts.serif":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":["DejaVu Serif"],"description":"System-wide default serif font(s). Multiple fonts may be listed\nin case multiple languages must be supported.\n","readOnly":false,"type":"list of strings"},"fonts.fontconfig.dpi":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":0,"description":"Force DPI setting. Setting to <literal>0</literal> disables DPI\nforcing; the DPI detected for the display will be used.\n","readOnly":false,"type":"integer"},"fonts.fontconfig.enable":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":true,"description":"If enabled, a Fontconfig configuration file will be built\npointing to a set of default fonts.  If you don't care about\nrunning X11 applications or any other program that uses\nFontconfig, you can turn this option off and prevent a\ndependency on all those fonts.\n","readOnly":false,"type":"boolean"},"fonts.fontconfig.hinting.autohint":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":true,"description":"Enable the autohinter, which provides hinting for otherwise\nun-hinted fonts. The results are usually lower quality than\ncorrectly-hinted fonts.\n","readOnly":false,"type":"boolean"},"fonts.fontconfig.hinting.enable":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":true,"description":"Enable TrueType hinting.","readOnly":false,"type":"boolean"},"fonts.fontconfig.hinting.style":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":"full","description":"TrueType hinting style, one of <literal>none</literal>,\n<literal>slight</literal>, <literal>medium</literal>, or\n<literal>full</literal>.\n","readOnly":false,"type":"one of \"none\", \"slight\", \"medium\", \"full\""},"fonts.fontconfig.includeUserConf":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":true,"description":"Include the user configuration from\n<filename>~/.config/fontconfig/fonts.conf</filename> or\n<filename>~/.config/fontconfig/conf.d</filename>.\n","readOnly":false,"type":"boolean"},"fonts.fontconfig.localConf":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":"","description":"System-wide customization file contents, has higher priority than \n<literal>defaultFonts</literal> settings.\n","readOnly":false,"type":"string"},"fonts.fontconfig.subpixel.lcdfilter":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":"default","description":"FreeType LCD filter.\n","readOnly":false,"type":"one of \"none\", \"default\", \"light\", \"legacy\""},"fonts.fontconfig.subpixel.rgba":{"declarations":["nixos/modules/config/fonts/fontconfig.nix"],"default":"rgb","description":"Subpixel order.\n","readOnly":false,"type":"one of \"rgb\", \"bgr\", \"vrgb\", \"vbgr\", \"none\""},"fonts.fontconfig.ultimate.allowBitmaps":{"declarations":["nixos/modules/config/fonts/fontconfig-ultimate.nix"],"default":true,"description":"Allow bitmap fonts. Set to <literal>false</literal> to ban all\nbitmap fonts.\n","readOnly":false,"type":"boolean"},"fonts.fontconfig.ultimate.allowType1":{"declarations":["nixos/modules/config/fonts/fontconfig-ultimate.nix"],"default":false,"description":"Allow Type-1 fonts. Default is <literal>false</literal> because of\npoor rendering.\n","readOnly":false,"type":"boolean"},"fonts.fontconfig.ultimate.enable":{"declarations":["nixos/modules/config/fonts/fontconfig-ultimate.nix"],"default":true,"description":"Enable fontconfig-ultimate settings (formerly known as\nInfinality). Besides the customizable settings in this NixOS\nmodule, fontconfig-ultimate also provides many font-specific\nrendering tweaks.\n","readOnly":false,"type":"boolean"},"fonts.fontconfig.ultimate.forceAutohint":{"declarations":["nixos/modules/config/fonts/fontconfig-ultimate.nix"],"default":false,"description":"Force use of the TrueType Autohinter. Useful for debugging or\nfree-software purists.\n","readOnly":false,"type":"boolean"},"fonts.fontconfig.ultimate.preset":{"declarations":["nixos/modules/config/fonts/fontconfig-ultimate.nix"],"default":"ultimate3","description":"FreeType rendering settings preset. Any of the presets may be\ncustomized by setting environment variables.\n","readOnly":false,"type":"one of \"ultimate1\", \"ultimate2\", \"ultimate3\", \"ultimate4\", \"ultimate5\", \"osx\", \"windowsxp\""},"fonts.fontconfig.ultimate.renderMonoTTFAsBitmap":{"declarations":["nixos/modules/config/fonts/fontconfig-ultimate.nix"],"default":false,"description":"Render some monospace TTF fonts as bitmaps.","readOnly":false,"type":"boolean"},"fonts.fontconfig.ultimate.rendering":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>fonts.fontconfig.ultimate.preset</option>.","readOnly":false,"type":"unspecified"},"fonts.fontconfig.ultimate.substitutions":{"declarations":["nixos/modules/config/fonts/fontconfig-ultimate.nix"],"default":"free","description":"Font substitutions to replace common Type 1 fonts with nicer\nTrueType fonts. <literal>free</literal> uses free fonts,\n<literal>ms</literal> uses Microsoft fonts,\n<literal>combi</literal> uses a combination, and\n<literal>none</literal> disables the substitutions.\n","readOnly":false,"type":"null or one of \"free\", \"combi\", \"ms\""},"fonts.fontconfig.ultimate.useEmbeddedBitmaps":{"declarations":["nixos/modules/config/fonts/fontconfig-ultimate.nix"],"default":false,"description":"Use embedded bitmaps in fonts like Calibri.","readOnly":false,"type":"boolean"},"fonts.fonts":{"declarations":["nixos/modules/config/fonts/fonts.nix"],"default":[],"description":"List of primary font paths.","example":{"_type":"literalExample","text":"[ pkgs.dejavu_fonts ]"},"readOnly":false,"type":"list of paths"},"gnu":{"declarations":["nixos/modules/config/gnu.nix"],"default":false,"description":"When enabled, GNU software is chosen by default whenever a there is\n          a choice between GNU and non-GNU software (e.g., GNU lsh\n          vs. OpenSSH).\n","readOnly":false,"type":"boolean"},"hardware.amdHybridGraphics.disable":{"declarations":["nixos/modules/services/hardware/amd-hybrid-graphics.nix"],"default":false,"description":"Completely disable the AMD graphics card and use the\nintegrated graphics processor instead.\n","readOnly":false,"type":"boolean"},"hardware.bluetooth.enable":{"declarations":["nixos/modules/services/hardware/bluetooth.nix"],"default":false,"description":"Whether to enable support for Bluetooth.","readOnly":false,"type":"boolean"},"hardware.bumblebee.connectDisplay":{"declarations":["nixos/modules/hardware/video/bumblebee.nix"],"default":false,"description":"Set to true if you intend to connect your discrete card to a\nmonitor. This option will set up your Nvidia card for EDID\ndiscovery and to turn on the monitor signal.\n\nOnly nvidia driver is supported so far.\n","readOnly":false,"type":"boolean"},"hardware.bumblebee.driver":{"declarations":["nixos/modules/hardware/video/bumblebee.nix"],"default":"nvidia","description":"Set driver used by bumblebeed. Supported are nouveau and nvidia.\n","readOnly":false,"type":"one of \"nvidia\", \"nouveau\""},"hardware.bumblebee.enable":{"declarations":["nixos/modules/hardware/video/bumblebee.nix"],"default":false,"description":"Enable the bumblebee daemon to manage Optimus hybrid video cards.\nThis should power off secondary GPU until its use is requested\nby running an application with optirun.\n","readOnly":false,"type":"boolean"},"hardware.bumblebee.group":{"declarations":["nixos/modules/hardware/video/bumblebee.nix"],"default":"wheel","description":"Group for bumblebee socket","example":"video","readOnly":false,"type":"string"},"hardware.bumblebee.pmMethod":{"declarations":["nixos/modules/hardware/video/bumblebee.nix"],"default":"auto","description":"Set preferred power management method for unused card.\n","readOnly":false,"type":"one of \"auto\", \"bbswitch\", \"nouveau\", \"switcheroo\", \"none\""},"hardware.cpu.amd.updateMicrocode":{"declarations":["nixos/modules/hardware/cpu/amd-microcode.nix"],"default":false,"description":"Update the CPU microcode for AMD processors.\n","readOnly":false,"type":"boolean"},"hardware.cpu.intel.updateMicrocode":{"declarations":["nixos/modules/hardware/cpu/intel-microcode.nix"],"default":false,"description":"Update the CPU microcode for Intel processors.\n","readOnly":false,"type":"boolean"},"hardware.enableAllFirmware":{"declarations":["nixos/modules/hardware/all-firmware.nix"],"default":false,"description":"Turn on this option if you want to enable all the firmware shipped in linux-firmware.\n","readOnly":false,"type":"boolean"},"hardware.enableKSM":{"declarations":["nixos/modules/hardware/ksm.nix"],"default":false,"description":"Whether to enable Kernel Same-Page Merging.","example":true,"readOnly":false,"type":"boolean"},"hardware.facetimehd.enable":{"declarations":["nixos/modules/hardware/video/webcam/facetimehd.nix"],"default":false,"description":"Whether to enable facetimehd kernel module.","example":true,"readOnly":false,"type":"boolean"},"hardware.firmware":{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":[],"description":"List of packages containing firmware files.  Such files\nwill be loaded automatically if the kernel asks for them\n(i.e., when it has detected specific hardware that requires\nfirmware to function).  If multiple packages contain firmware\nfiles with the same name, the first package in the list takes\nprecedence.  Note that you must rebuild your system if you add\nfiles to any of these directories.\n","readOnly":false,"type":"list of packages"},"hardware.nvidiaOptimus.disable":{"declarations":["nixos/modules/services/hardware/nvidia-optimus.nix"],"default":false,"description":"Completely disable the NVIDIA graphics card and use the\nintegrated graphics processor instead.\n","readOnly":false,"type":"boolean"},"hardware.opengl.driSupport":{"declarations":["nixos/modules/hardware/opengl.nix"],"default":true,"description":"Whether to enable accelerated OpenGL rendering through the\nDirect Rendering Interface (DRI).\n","readOnly":false,"type":"boolean"},"hardware.opengl.driSupport32Bit":{"declarations":["nixos/modules/hardware/opengl.nix"],"default":false,"description":"On 64-bit systems, whether to support Direct Rendering for\n32-bit applications (such as Wine).  This is currently only\nsupported for the <literal>nvidia</literal> and \n<literal>ati_unfree</literal> drivers, as well as\n<literal>Mesa</literal>.\n","readOnly":false,"type":"boolean"},"hardware.opengl.extraPackages":{"declarations":["nixos/modules/hardware/opengl.nix"],"default":[],"description":"Additional packages to add to OpenGL drivers. This can be used\nto add additional VA-API/VDPAU drivers.\n","example":{"_type":"literalExample","text":"with pkgs; [ vaapiIntel libvdpau-va-gl vaapiVdpau ]"},"readOnly":false,"type":"list of packages"},"hardware.opengl.extraPackages32":{"declarations":["nixos/modules/hardware/opengl.nix"],"default":[],"description":"Additional packages to add to 32-bit OpenGL drivers on\n64-bit systems. Used when <option>driSupport32Bit</option> is\nset. This can be used to add additional VA-API/VDPAU drivers.\n","example":{"_type":"literalExample","text":"with pkgs.pkgsi686Linux; [ vaapiIntel libvdpau-va-gl vaapiVdpau ]"},"readOnly":false,"type":"list of packages"},"hardware.opengl.s3tcSupport":{"declarations":["nixos/modules/hardware/opengl.nix"],"default":false,"description":"Make S3TC(S3 Texture Compression) via libtxc_dxtn available\nto OpenGL drivers instead of the patent-free S2TC replacement.\n\nUsing this library may require a patent license depending on your location.\n","readOnly":false,"type":"boolean"},"hardware.opengl.videoDrivers":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.xserver.videoDrivers</option>.","readOnly":false,"type":"unspecified"},"hardware.parallels.enable":{"declarations":["nixos/modules/virtualisation/parallels-guest.nix"],"default":false,"description":"This enables Parallels Tools for Linux guests, along with provided\nvideo, mouse and other hardware drivers.\n","readOnly":false,"type":"boolean"},"hardware.pcmcia.config":{"declarations":["nixos/modules/hardware/pcmcia.nix"],"default":null,"description":"Path to the configuration file which maps the memory, IRQs\nand ports used by the PCMCIA hardware.\n","readOnly":false,"type":"unspecified"},"hardware.pcmcia.enable":{"declarations":["nixos/modules/hardware/pcmcia.nix"],"default":false,"description":"Enable this option to support PCMCIA card.\n","readOnly":false,"type":"boolean"},"hardware.pcmcia.firmware":{"declarations":["nixos/modules/hardware/pcmcia.nix"],"default":[],"description":"List of firmware used to handle specific PCMCIA card.\n","readOnly":false,"type":"list of paths"},"hardware.pulseaudio.configFile":{"declarations":["nixos/modules/config/pulseaudio.nix"],"description":"The path to the default configuration options the PulseAudio server\nshould use. By default, the \"default.pa\" configuration\nfrom the PulseAudio distribution is used.\n","readOnly":false,"type":"null or path"},"hardware.pulseaudio.daemon.logLevel":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":"notice","description":"The log level that the system-wide pulseaudio daemon should use,\nif activated.\n","readOnly":false,"type":"string"},"hardware.pulseaudio.enable":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":false,"description":"Whether to enable the PulseAudio sound server.\n","readOnly":false,"type":"boolean"},"hardware.pulseaudio.extraClientConf":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":"","description":"Extra configuration appended to pulse/client.conf file.\n","readOnly":false,"type":"string"},"hardware.pulseaudio.extraConfig":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":"","description":"Literal string to append to <literal>configFile</literal>\nand the config file generated by the pulseaudio module.\n","readOnly":false,"type":"string"},"hardware.pulseaudio.package":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":"pkgs.pulseaudioLight","description":"The PulseAudio derivation to use.  This can be used to enable\nfeatures (such as JACK support, Bluetooth) via the\n<literal>pulseaudioFull</literal> package.\n","example":{"_type":"literalExample","text":"pkgs.pulseaudioFull"},"readOnly":false,"type":"package"},"hardware.pulseaudio.support32Bit":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":false,"description":"Whether to include the 32-bit pulseaudio libraries in the systemn or not.\nThis is only useful on 64-bit systems and currently limited to x86_64-linux.\n","readOnly":false,"type":"boolean"},"hardware.pulseaudio.systemWide":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":false,"description":"If false, a PulseAudio server is launched automatically for\neach user that tries to use the sound system. The server runs\nwith user privileges. This is the recommended and most secure\nway to use PulseAudio. If true, one system-wide PulseAudio\nserver is launched on boot, running as the user \"pulse\".\nPlease read the PulseAudio documentation for more details.\n","readOnly":false,"type":"boolean"},"hardware.pulseaudio.tcp.anonymousClients.allowAll":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":false,"description":"Whether to enable all anonymous clients to stream to the server.","example":true,"readOnly":false,"type":"boolean"},"hardware.pulseaudio.tcp.anonymousClients.allowedIpRanges":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":[],"description":"A list of IP subnets that are allowed to stream to the server.\n","example":{"_type":"literalExample","text":"[ \"127.0.0.1\" \"192.168.1.0/24\" ]"},"readOnly":false,"type":"list of strings"},"hardware.pulseaudio.tcp.enable":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":false,"description":"Whether to enable tcp streaming support.","example":true,"readOnly":false,"type":"boolean"},"hardware.pulseaudio.zeroconf.discovery.enable":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":false,"description":"Whether to enable discovery of pulseaudio sinks in the local network.","example":true,"readOnly":false,"type":"boolean"},"hardware.pulseaudio.zeroconf.publish.enable":{"declarations":["nixos/modules/config/pulseaudio.nix"],"default":false,"description":"Whether to enable publishing the pulseaudio sink in the local network.","example":true,"readOnly":false,"type":"boolean"},"hardware.sane.enable":{"declarations":["nixos/modules/services/hardware/sane.nix"],"default":false,"description":"Enable support for SANE scanners.\n\n<note><para>\n  Users in the \"scanner\" group will gain access to the scanner.\n</para></note>\n","readOnly":false,"type":"boolean"},"hardware.sane.extraBackends":{"declarations":["nixos/modules/services/hardware/sane.nix"],"default":[],"description":"Packages providing extra SANE backends to enable.\n\n<note><para>\n  The example contains the package for HP scanners.\n</para></note>\n","example":{"_type":"literalExample","text":"[ pkgs.hplipWithPlugin ]"},"readOnly":false,"type":"list of paths"},"hardware.sane.netConf":{"declarations":["nixos/modules/services/hardware/sane.nix"],"default":"","description":"Network hosts that should be probed for remote scanners.\n","example":"192.168.0.16","readOnly":false,"type":"string"},"hardware.sane.snapshot":{"declarations":["nixos/modules/services/hardware/sane.nix"],"default":false,"description":"Use a development snapshot of SANE scanner drivers.","readOnly":false,"type":"boolean"},"hardware.trackpoint.emulateWheel":{"declarations":["nixos/modules/tasks/trackpoint.nix"],"default":false,"description":"Enable scrolling while holding the middle mouse button.\n","readOnly":false,"type":"boolean"},"hardware.trackpoint.enable":{"declarations":["nixos/modules/tasks/trackpoint.nix"],"default":false,"description":"Enable sensitivity and speed configuration for trackpoints.\n","readOnly":false,"type":"boolean"},"hardware.trackpoint.fakeButtons":{"declarations":["nixos/modules/tasks/trackpoint.nix"],"default":false,"description":"Switch to \"bare\" PS/2 mouse support in case Trackpoint buttons are not recognized\nproperly. This can happen for example on models like the L430, T450, T450s, on\nwhich the Trackpoint buttons are actually a part of the Synaptics touchpad.\n","readOnly":false,"type":"boolean"},"hardware.trackpoint.sensitivity":{"declarations":["nixos/modules/tasks/trackpoint.nix"],"default":128,"description":"Configure the trackpoint sensitivity. By default, the kernel\nconfigures 128.\n","example":255,"readOnly":false,"type":"integer"},"hardware.trackpoint.speed":{"declarations":["nixos/modules/tasks/trackpoint.nix"],"default":97,"description":"Configure the trackpoint speed. By default, the kernel\nconfigures 97.\n","example":255,"readOnly":false,"type":"integer"},"i18n.consoleColors":{"declarations":["nixos/modules/config/i18n.nix"],"default":[],"description":"The 16 colors palette used by the virtual consoles.\nLeave empty to use the default colors.\nColors must be in hexadecimal format and listed in\norder from color 0 to color 15.\n","example":["002b36","dc322f","859900","b58900","268bd2","d33682","2aa198","eee8d5","002b36","cb4b16","586e75","657b83","839496","6c71c4","93a1a1","fdf6e3"],"readOnly":false,"type":"list of strings"},"i18n.consoleFont":{"declarations":["nixos/modules/config/i18n.nix"],"default":"Lat2-Terminus16","description":"The font used for the virtual consoles.  Leave empty to use\nwhatever the <command>setfont</command> program considers the\ndefault font.\n","example":"LatArCyrHeb-16","readOnly":false,"type":"string"},"i18n.consoleKeyMap":{"declarations":["nixos/modules/config/i18n.nix"],"default":"us","description":"The keyboard mapping table for the virtual consoles.\n","example":"fr","readOnly":false,"type":"string or path"},"i18n.consolePackages":{"declarations":["nixos/modules/config/i18n.nix"],"default":"with pkgs.kbdKeymaps; [ dvp neo ]","description":"\t  List of additional packages that provide console fonts, keymaps and\n          other resources.\n","readOnly":false,"type":"list of packages"},"i18n.consoleUseXkbConfig":{"declarations":["nixos/modules/config/i18n.nix"],"default":false,"description":"If set, configure the console keymap from the xserver keyboard\nsettings.\n","readOnly":false,"type":"boolean"},"i18n.defaultLocale":{"declarations":["nixos/modules/config/i18n.nix"],"default":"en_US.UTF-8","description":"The default locale.  It determines the language for program\nmessages, the format for dates and times, sort order, and so on.\nIt also determines the character set, such as UTF-8.\n","example":"nl_NL.UTF-8","readOnly":false,"type":"string"},"i18n.inputMethod.enabled":{"declarations":["nixos/modules/i18n/input-method/default.nix"],"default":null,"description":"Select the enabled input method. Input methods is a software to input symbols that are not available on standard input devices.\n\nInput methods are specially used to input Chinese, Japanese and Korean characters.\n\nCurrently the following input methods are available in NixOS:\n\n<itemizedlist>\n<listitem><para>ibus: The intelligent input bus, extra input engines can be added using <literal>i18n.inputMethod.ibus.engines</literal>.</para></listitem>\n<listitem><para>fcitx: A customizable lightweight input method, extra input engines can be added using <literal>i18n.inputMethod.fcitx.engines</literal>.</para></listitem>\n<listitem><para>nabi: A Korean input method based on XIM. Nabi doesn't support Qt 5.</para></listitem>\n<listitem><para>uim: The universal input method, is a library with a XIM bridge. uim mainly support Chinese, Japanese and Korean.</para></listitem>\n</itemizedlist>\n","example":"fcitx","readOnly":false,"type":"null or one of \"ibus\", \"fcitx\", \"nabi\", \"uim\""},"i18n.inputMethod.fcitx.engines":{"declarations":["nixos/modules/i18n/input-method/fcitx.nix"],"default":[],"description":"Enabled Fcitx engines. Available engines are: <literal>anthy</literal>, <literal>chewing</literal>, <literal>cloudpinyin</literal>, <literal>hangul</literal>, <literal>libpinyin</literal>, <literal>m17n</literal>, <literal>mozc</literal>, <literal>table-other</literal>, <literal>unikey</literal>.","example":{"_type":"literalExample","text":"with pkgs.fcitx-engines; [ mozc hangul ]"},"readOnly":false,"type":"list of packages"},"i18n.inputMethod.ibus.engines":{"declarations":["nixos/modules/i18n/input-method/ibus.nix"],"default":[],"description":"Enabled IBus engines. Available engines are: <literal>anthy</literal>, <literal>hangul</literal>, <literal>libpinyin</literal>, <literal>m17n</literal>, <literal>mozc</literal>, <literal>table</literal>, <literal>table-others</literal>, <literal>uniemoji</literal>.","example":{"_type":"literalExample","text":"with pkgs.ibus-engines; [ mozc hangul ]"},"readOnly":false,"type":"list of packages"},"i18n.inputMethod.uim.toolbar":{"declarations":["nixos/modules/i18n/input-method/uim.nix"],"default":"gtk","description":"selected UIM toolbar.\n","example":"gtk-systray","readOnly":false,"type":"one of \"gtk\", \"gtk3\", \"gtk-systray\", \"gtk3-systray\", \"qt4\""},"i18n.supportedLocales":{"declarations":["nixos/modules/config/i18n.nix"],"default":["all"],"description":"List of locales that the system should support.  The value\n<literal>\"all\"</literal> means that all locales supported by\nGlibc will be installed.  A full list of supported locales\ncan be found at <link\nxlink:href=\"http://sourceware.org/cgi-bin/cvsweb.cgi/libc/localedata/SUPPORTED?cvsroot=glibc\"/>.\n","example":["en_US.UTF-8/UTF-8","nl_NL.UTF-8/UTF-8","nl_NL/ISO-8859-1"],"readOnly":false,"type":"list of strings"},"jobs":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>systemd.services</option>.","readOnly":false,"type":"unspecified"},"kde.extraPackages":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>environment.systemPackages</option>.","readOnly":false,"type":"unspecified"},"krb5.defaultRealm":{"declarations":["nixos/modules/config/krb5.nix"],"default":"ATENA.MIT.EDU","description":"Default realm.","readOnly":false,"type":"unspecified"},"krb5.domainRealm":{"declarations":["nixos/modules/config/krb5.nix"],"default":"atena.mit.edu","description":"Default domain realm.","readOnly":false,"type":"unspecified"},"krb5.enable":{"declarations":["nixos/modules/config/krb5.nix"],"default":false,"description":"Whether to enable Kerberos V.","readOnly":false,"type":"unspecified"},"krb5.kdc":{"declarations":["nixos/modules/config/krb5.nix"],"default":"kerberos.mit.edu","description":"Key Distribution Center","readOnly":false,"type":"unspecified"},"krb5.kerberosAdminServer":{"declarations":["nixos/modules/config/krb5.nix"],"default":"kerberos.mit.edu","description":"Kerberos Admin Server.","readOnly":false,"type":"unspecified"},"lib":{"declarations":["nixos/modules/misc/lib.nix"],"default":{},"description":"This option allows modules to define helper functions, constants, etc.\n","readOnly":false,"type":"attribute set of attribute sets"},"nesting.children":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":[],"description":"Additional configurations to build.\n","readOnly":false,"type":"unspecified"},"nesting.clone":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":[],"description":"Additional configurations to build based on the current\nconfiguration which then has a lower priority.\n","readOnly":false,"type":"unspecified"},"networking.bonds":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":{},"description":"This option allows you to define bond devices that aggregate multiple,\nunderlying networking interfaces together. The value of this option is\nan attribute set. Each attribute specifies a bond, with the attribute\nname specifying the name of the bond's network interface\n","example":{"_type":"literalExample","text":{"bond0":{"interfaces":["eth0","wlan0"],"miimon":100,"mode":"active-backup"},"fatpipe":{"interfaces":["enp4s0f0","enp4s0f1","enp5s0f0","enp5s0f1"]}}},"readOnly":false,"type":"attribute set of submodules"},"networking.bonds.<name>.interfaces":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"The interfaces to bond together","example":["enp4s0f0","enp4s0f1","wlan0"],"readOnly":false,"type":"list of strings"},"networking.bonds.<name>.lacp_rate":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"Option specifying the rate in which we'll ask our link partner\nto transmit LACPDU packets in 802.3ad mode.\n","example":"fast","readOnly":false,"type":"null or string"},"networking.bonds.<name>.miimon":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"Miimon is the number of millisecond in between each round of polling\nby the device driver for failed links. By default polling is not\nenabled and the driver is trusted to properly detect and handle\nfailure scenarios.\n","example":100,"readOnly":false,"type":"null or integer"},"networking.bonds.<name>.mode":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The mode which the bond will be running. The default mode for\nthe bonding driver is balance-rr, optimizing for throughput.\nMore information about valid modes can be found at\nhttps://www.kernel.org/doc/Documentation/networking/bonding.txt\n","example":"active-backup","readOnly":false,"type":"null or string"},"networking.bonds.<name>.xmit_hash_policy":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"Selects the transmit hash policy to use for slave selection in\nbalance-xor, 802.3ad, and tlb modes.\n","example":"layer2+3","readOnly":false,"type":"null or string"},"networking.bridges":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":{},"description":"This option allows you to define Ethernet bridge devices\nthat connect physical networks together.  The value of this\noption is an attribute set.  Each attribute specifies a\nbridge, with the attribute name specifying the name of the\nbridge's network interface.\n","example":{"br0":{"interfaces":["eth0","eth1"]},"br1":{"interfaces":["eth2","wlan0"]}},"readOnly":false,"type":"attribute set of submodules"},"networking.bridges.<name>.interfaces":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"The physical network interfaces connected by the bridge.","example":["eth0","eth1"],"readOnly":false,"type":"list of strings"},"networking.bridges.<name>.rstp":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":false,"description":"Whether the bridge interface should enable rstp.","example":true,"readOnly":false,"type":"boolean"},"networking.connman.enable":{"declarations":["nixos/modules/services/networking/connman.nix"],"default":false,"description":"Whether to use ConnMan for managing your network connections.\n","readOnly":false,"type":"boolean"},"networking.connman.enableVPN":{"declarations":["nixos/modules/services/networking/connman.nix"],"default":true,"description":"Whether to enable ConnMan VPN service.\n","readOnly":false,"type":"boolean"},"networking.connman.extraConfig":{"declarations":["nixos/modules/services/networking/connman.nix"],"default":"","description":"Configuration lines appended to the generated connman configuration file.\n","readOnly":false,"type":"string"},"networking.connman.networkInterfaceBlacklist":{"declarations":["nixos/modules/services/networking/connman.nix"],"default":["vmnet","vboxnet","virbr","ifb","ve"],"description":"Default blacklisted interfaces, this includes NixOS containers interfaces (ve).\n","readOnly":false,"type":"list of strings"},"networking.defaultGateway":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The default gateway.  It can be left empty if it is auto-detected through DHCP.\n","example":"131.211.84.1","readOnly":false,"type":"null or string"},"networking.defaultGateway6":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The default ipv6 gateway.  It can be left empty if it is auto-detected through DHCP.\n","example":"2001:4d0:1e04:895::1","readOnly":false,"type":"null or string"},"networking.defaultGatewayWindowSize":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The window size of the default gateway. It limits maximal data bursts that TCP peers\nare allowed to send to us.\n","example":524288,"readOnly":false,"type":"null or integer"},"networking.defaultMailServer.authPass":{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"Password used for SMTP auth. (STORED PLAIN TEXT, WORLD-READABLE IN NIX STORE)\n","example":"correctHorseBatteryStaple","readOnly":false,"type":"string"},"networking.defaultMailServer.authUser":{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"Username used for SMTP auth. Leave blank to disable.\n","example":"foo@example.org","readOnly":false,"type":"string"},"networking.defaultMailServer.directDelivery":{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":false,"description":"Use the trivial Mail Transfer Agent (MTA)\n<command>ssmtp</command> package to allow programs to send\ne-mail.  If you don't want to run a “real” MTA like\n<command>sendmail</command> or <command>postfix</command> on\nyour machine, set this option to <literal>true</literal>, and\nset the option\n<option>networking.defaultMailServer.hostName</option> to the\nhost name of your preferred mail server.\n","example":true,"readOnly":false,"type":"boolean"},"networking.defaultMailServer.domain":{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"The domain from which mail will appear to be sent.\n","example":"example.org","readOnly":false,"type":"string"},"networking.defaultMailServer.hostName":{"declarations":["nixos/modules/programs/ssmtp.nix"],"description":"The host name of the default mail server to use to deliver\ne-mail.\n","example":"mail.example.org","readOnly":false,"type":"string"},"networking.defaultMailServer.root":{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":"","description":"The e-mail to which mail for users with UID &lt; 1000 is forwarded.\n","example":"root@example.org","readOnly":false,"type":"string"},"networking.defaultMailServer.setSendmail":{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":true,"description":"Whether to set the system sendmail to ssmtp's.","readOnly":false,"type":"boolean"},"networking.defaultMailServer.useSTARTTLS":{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":false,"description":"Whether the STARTTLS should be used to connect to the default\nmail server.  (This is needed for TLS-capable mail servers\nrunning on the default SMTP port 25.)\n","example":true,"readOnly":false,"type":"boolean"},"networking.defaultMailServer.useTLS":{"declarations":["nixos/modules/programs/ssmtp.nix"],"default":false,"description":"Whether TLS should be used to connect to the default mail\nserver.\n","example":true,"readOnly":false,"type":"boolean"},"networking.dhcpcd.allowInterfaces":{"declarations":["nixos/modules/services/networking/dhcpcd.nix"],"default":null,"description":"Enable the DHCP client for any interface whose name matches\nany of the shell glob patterns in this list. Any interface not\nexplicitly matched by this pattern will be denied. This pattern only\napplies when non-null.\n","readOnly":false,"type":"null or list of strings"},"networking.dhcpcd.denyInterfaces":{"declarations":["nixos/modules/services/networking/dhcpcd.nix"],"default":[],"description":"Disable the DHCP client for any interface whose name matches\nany of the shell glob patterns in this list. The purpose of\nthis option is to blacklist virtual interfaces such as those\ncreated by Xen, libvirt, LXC, etc.\n","readOnly":false,"type":"list of strings"},"networking.dhcpcd.enable":{"declarations":["nixos/modules/services/networking/dhcpcd.nix"],"default":true,"description":"Whether to enable dhcpcd for device configuration. This is mainly to\nexplicitly disable dhcpcd (for example when using networkd).\n","readOnly":false,"type":"boolean"},"networking.dhcpcd.extraConfig":{"declarations":["nixos/modules/services/networking/dhcpcd.nix"],"default":"","description":"Literal string to append to the config file generated for dhcpcd.\n","readOnly":false,"type":"string"},"networking.dhcpcd.persistent":{"declarations":["nixos/modules/services/networking/dhcpcd.nix"],"default":false,"description":"Whenever to leave interfaces configured on dhcpcd daemon\nshutdown. Set to true if you have your root or store mounted\nover the network or this machine accepts SSH connections\nthrough DHCP interfaces and clients should be notified when\nit shuts down.\n","readOnly":false,"type":"boolean"},"networking.dhcpcd.runHook":{"declarations":["nixos/modules/services/networking/dhcpcd.nix"],"default":"","description":"Shell code that will be run after all other hooks. See\n`man dhcpcd-run-hooks` for details on what is possible.\n","example":"if [[ $reason =~ BOUND ]]; then echo $interface: Routers are $new_routers - were $old_routers; fi","readOnly":false,"type":"string"},"networking.dnsExtensionMechanism":{"declarations":["nixos/modules/config/networking.nix"],"default":false,"description":"Enable the <code>edns0</code> option in <filename>resolv.conf</filename>. With\nthat option set, <code>glibc</code> supports use of the extension mechanisms for\nDNS (EDNS) specified in RFC 2671. The most popular user of that feature is DNSSEC,\nwhich does not work without it.\n","readOnly":false,"type":"boolean"},"networking.dnsSingleRequest":{"declarations":["nixos/modules/config/networking.nix"],"default":false,"description":"Recent versions of glibc will issue both ipv4 (A) and ipv6 (AAAA)\naddress queries at the same time, from the same port. Sometimes upstream\nrouters will systemically drop the ipv4 queries. The symptom of this problem is\nthat 'getent hosts example.com' only returns ipv6 (or perhaps only ipv4) addresses. The\nworkaround for this is to specify the option 'single-request' in\n/etc/resolv.conf. This option enables that.\n","readOnly":false,"type":"boolean"},"networking.domain":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The domain.  It can be left empty if it is auto-detected through DHCP.\n","example":"home","readOnly":false,"type":"null or string"},"networking.enableB43Firmware":{"declarations":["nixos/modules/hardware/network/b43.nix"],"default":false,"description":"Turn on this option if you want firmware for the NICs supported by the b43 module.\n","readOnly":false,"type":"boolean"},"networking.enableIPv6":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":true,"description":"Whether to enable support for IPv6.\n","readOnly":false,"type":"boolean"},"networking.enableIntel2100BGFirmware":{"declarations":["nixos/modules/hardware/network/intel-2100bg.nix"],"default":false,"description":"Turn on this option if you want firmware for the Intel\nPRO/Wireless 2100BG to be loaded automatically.  This is\nrequired if you want to use this device.\n","readOnly":false,"type":"boolean"},"networking.enableIntel2200BGFirmware":{"declarations":["nixos/modules/hardware/network/intel-2200bg.nix"],"default":false,"description":"Turn on this option if you want firmware for the Intel\nPRO/Wireless 2200BG to be loaded automatically.  This is\nrequired if you want to use this device.\n","readOnly":false,"type":"boolean"},"networking.enableIntel3945ABGFirmware":{"declarations":["nixos/modules/hardware/network/intel-3945abg.nix"],"default":false,"description":"This option enables automatic loading of the firmware for the Intel\nPRO/Wireless 3945ABG.\n","readOnly":false,"type":"boolean"},"networking.enableRT73Firmware":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>networking.enableRalinkFirmware</option>.","readOnly":false,"type":"unspecified"},"networking.enableRTL8192cFirmware":{"declarations":["nixos/modules/hardware/network/rtl8192c.nix"],"default":false,"description":"Turn on this option if you want firmware for the RTL8192c (and related) NICs.\n","readOnly":false,"type":"boolean"},"networking.enableRalinkFirmware":{"declarations":["nixos/modules/hardware/network/ralink.nix"],"default":false,"description":"Turn on this option if you want firmware for the RT73 NIC.\n","readOnly":false,"type":"boolean"},"networking.enableWLAN":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>networking.wireless.enable</option>.","readOnly":false,"type":"unspecified"},"networking.extraHosts":{"declarations":["nixos/modules/config/networking.nix"],"default":"","description":"Additional entries to be appended to <filename>/etc/hosts</filename>.\n","example":"192.168.0.1 lanlocalhost","readOnly":false,"type":"string"},"networking.extraResolvconfConf":{"declarations":["nixos/modules/config/networking.nix"],"default":"","description":"Extra configuration to append to <filename>resolvconf.conf</filename>.\n","example":"libc=NO","readOnly":false,"type":"string"},"networking.fan.enable":{"declarations":["nixos/modules/services/networking/fan.nix"],"default":false,"description":"Whether to enable FAN Networking.","example":true,"readOnly":false,"type":"boolean"},"networking.firewall.allowPing":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":true,"description":"Whether to respond to incoming ICMPv4 echo requests\n(\"pings\").  ICMPv6 pings are always allowed because the\nlarger address space of IPv6 makes network scanning much\nless effective.\n","readOnly":false,"type":"boolean"},"networking.firewall.allowedTCPPortRanges":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":[],"description":"A range of TCP ports on which incoming connections are\naccepted.\n","example":[{"from":8999,"to":9003}],"readOnly":false,"type":"list of attribute set of integerss"},"networking.firewall.allowedTCPPorts":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":[],"description":"List of TCP ports on which incoming connections are\naccepted.\n","example":[22,80],"readOnly":false,"type":"list of integers"},"networking.firewall.allowedUDPPortRanges":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":[],"description":"Range of open UDP ports.\n","example":[{"from":60000,"to":61000}],"readOnly":false,"type":"list of attribute set of integerss"},"networking.firewall.allowedUDPPorts":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":[],"description":"List of open UDP ports.\n","example":[53],"readOnly":false,"type":"list of integers"},"networking.firewall.autoLoadConntrackHelpers":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":true,"description":"Whether to auto-load connection-tracking helpers.\nSee the description at networking.firewall.connectionTrackingModules\n\n(needs kernel 3.5+)\n","readOnly":false,"type":"boolean"},"networking.firewall.checkReversePath":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":true,"description":"Performs a reverse path filter test on a packet.\nIf a reply to the packet would not be sent via the same interface\nthat the packet arrived on, it is refused.\n\nIf using asymmetric routing or other complicated routing,\nset this option to loose mode or disable it and setup your\nown counter-measures.\n\n(needs kernel 3.3+)\n","readOnly":false,"type":"boolean or one of \"strict\", \"loose\""},"networking.firewall.connectionTrackingModules":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":["ftp"],"description":"List of connection-tracking helpers that are auto-loaded.\nThe complete list of possible values is given in the example.\n\nAs helpers can pose as a security risk, it is advised to\nset this to an empty list and disable the setting\nnetworking.firewall.autoLoadConntrackHelpers\n\nLoading of helpers is recommended to be done through the new\nCT target. More info:\nhttps://home.regit.org/netfilter-en/secure-use-of-helpers/\n","example":["ftp","irc","sane","sip","tftp","amanda","h323","netbios_sn","pptp","snmp"],"readOnly":false,"type":"list of strings"},"networking.firewall.enable":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":true,"description":"Whether to enable the firewall.  This is a simple stateful\nfirewall that blocks connection attempts to unauthorised TCP\nor UDP ports on this machine.  It does not affect packet\nforwarding.\n","readOnly":false,"type":"boolean"},"networking.firewall.extraCommands":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Additional shell commands executed as part of the firewall\ninitialisation script.  These are executed just before the\nfinal \"reject\" firewall rule is added, so they can be used\nto allow packets that would otherwise be refused.\n","example":"iptables -A INPUT -p icmp -j ACCEPT","readOnly":false,"type":"string"},"networking.firewall.extraPackages":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":[],"description":"Additional packages to be included in the environment of the system\nas well as the path of networking.firewall.extraCommands.\n","example":{"_type":"literalExample","text":"[ pkgs.ipset ]"},"readOnly":false,"type":"list of packages"},"networking.firewall.extraStopCommands":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":"","description":"Additional shell commands executed as part of the firewall\nshutdown script.  These are executed just after the removal\nof the nixos input rule, or if the service enters a failed state.\n","example":"iptables -P INPUT ACCEPT","readOnly":false,"type":"string"},"networking.firewall.logRefusedConnections":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":true,"description":"Whether to log rejected or dropped incoming connections.\n","readOnly":false,"type":"boolean"},"networking.firewall.logRefusedPackets":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":false,"description":"Whether to log all rejected or dropped incoming packets.\nThis tends to give a lot of log messages, so it's mostly\nuseful for debugging.\n","readOnly":false,"type":"boolean"},"networking.firewall.logRefusedUnicastsOnly":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":true,"description":"If <option>networking.firewall.logRefusedPackets</option>\nand this option are enabled, then only log packets\nspecifically directed at this machine, i.e., not broadcasts\nor multicasts.\n","readOnly":false,"type":"boolean"},"networking.firewall.logReversePathDrops":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":false,"description":"Logs dropped packets failing the reverse path filter test if\nthe option networking.firewall.checkReversePath is enabled.\n","readOnly":false,"type":"boolean"},"networking.firewall.pingLimit":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":null,"description":"If pings are allowed, this allows setting rate limits\non them. If non-null, this option should be in the form\nof flags like \"--limit 1/minute --limit-burst 5\"\n","readOnly":false,"type":"null or string"},"networking.firewall.rejectPackets":{"declarations":["nixos/modules/services/networking/firewall.nix"],"default":false,"description":"If set, forbidden packets are rejected rather than dropped\n(ignored).  This means that an ICMP \"port unreachable\" error\nmessage is sent back to the client.  Rejecting packets makes\nport scanning somewhat easier.\n","readOnly":false,"type":"boolean"},"networking.firewall.trustedInterfaces":{"declarations":["nixos/modules/services/networking/firewall.nix"],"description":"Traffic coming in from these interfaces will be accepted\nunconditionally.\n","readOnly":false,"type":"list of strings"},"networking.hostConf":{"declarations":["nixos/modules/config/networking.nix"],"default":"multi on","description":"The contents of <filename>/etc/host.conf</filename>. See also <citerefentry><refentrytitle>host.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>.\n","example":"multi on\nreorder on\ntrim lan\n","readOnly":false,"type":"string"},"networking.hostId":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The 32-bit host ID of the machine, formatted as 8 hexadecimal characters.\n\nYou should try to make this ID unique among your machines. You can\ngenerate a random 32-bit ID using the following commands:\n\n<literal>cksum /etc/machine-id | while read c rest; do printf \"%x\" $c; done</literal>\n\n(this derives it from the machine-id that systemd generates) or\n\n<literal>head -c4 /dev/urandom | od -A none -t x4</literal>\n","example":"4e98920d","readOnly":false,"type":"null or string"},"networking.hostName":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"nixos","description":"The name of the machine.  Leave it empty if you want to obtain\nit from a DHCP server (if using DHCP).\n","readOnly":false,"type":"string"},"networking.interfaces":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":{},"description":"The configuration for each network interface.  If\n<option>networking.useDHCP</option> is true, then every\ninterface not listed here will be configured using DHCP.\n","example":{"eth0":{"ip4":[{"address":"131.211.84.78","prefixLength":25}]}},"readOnly":false,"type":"list or attribute set of submodules"},"networking.interfaces.<name?>.ip4":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":[],"description":"List of IPv4 addresses that will be statically assigned to the interface.\n","example":[{"address":"10.0.0.1","prefixLength":16},{"address":"192.168.1.1","prefixLength":24}],"readOnly":false,"type":"list of submodules"},"networking.interfaces.<name?>.ip4.*.address":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"IPv4 address of the interface.  Leave empty to configure the\ninterface using DHCP.\n","readOnly":false,"type":"string"},"networking.interfaces.<name?>.ip4.*.prefixLength":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"Subnet mask of the interface, specified as the number of\nbits in the prefix (<literal>24</literal>).\n","readOnly":false,"type":"integer"},"networking.interfaces.<name?>.ip6":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":[],"description":"List of IPv6 addresses that will be statically assigned to the interface.\n","example":[{"address":"fdfd:b3f0:482::1","prefixLength":48},{"address":"2001:1470:fffd:2098::e006","prefixLength":64}],"readOnly":false,"type":"list of submodules"},"networking.interfaces.<name?>.ip6.*.address":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"IPv6 address of the interface.  Leave empty to configure the\ninterface using DHCP.\n","readOnly":false,"type":"string"},"networking.interfaces.<name?>.ip6.*.prefixLength":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"Subnet mask of the interface, specified as the number of\nbits in the prefix (<literal>64</literal>).\n","readOnly":false,"type":"integer"},"networking.interfaces.<name?>.ipAddress":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"IP address of the interface.  Leave empty to configure the\ninterface using DHCP.\n","example":"10.0.0.1","readOnly":false,"type":"null or string"},"networking.interfaces.<name?>.ipv6Address":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"IPv6 address of the interface.  Leave empty to configure the\ninterface using NDP.\n","example":"2001:1470:fffd:2098::e006","readOnly":false,"type":"null or string"},"networking.interfaces.<name?>.ipv6PrefixLength":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":64,"description":"Subnet mask of the interface, specified as the number of\nbits in the prefix (<literal>64</literal>).\n","example":64,"readOnly":false,"type":"integer"},"networking.interfaces.<name?>.macAddress":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"MAC address of the interface. Leave empty to use the default.\n","example":"00:11:22:33:44:55","readOnly":false,"type":"null or string"},"networking.interfaces.<name?>.mtu":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"MTU size for packets leaving the interface. Leave empty to use the default.\n","example":9000,"readOnly":false,"type":"null or integer"},"networking.interfaces.<name?>.name":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"Name of the interface.","example":"eth0","readOnly":false,"type":"string"},"networking.interfaces.<name?>.prefixLength":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"Subnet mask of the interface, specified as the number of\nbits in the prefix (<literal>24</literal>).\n","example":24,"readOnly":false,"type":"null or integer"},"networking.interfaces.<name?>.proxyARP":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":false,"description":"Turn on proxy_arp for this device (and proxy_ndp for ipv6).\nThis is mainly useful for creating pseudo-bridges between a real\ninterface and a virtual network such as VPN or a virtual machine for\ninterfaces that don't support real bridging (most wlan interfaces).\nAs ARP proxying acts slightly above the link-layer, below-ip traffic\nisn't bridged, so things like DHCP won't work. The advantage above\nusing NAT lies in the fact that no IP addresses are shared, so all\nhosts are reachable/routeable.\n\nWARNING: turns on ip-routing, so if you have multiple interfaces, you\nshould think of the consequence and setup firewall rules to limit this.\n","readOnly":false,"type":"boolean"},"networking.interfaces.<name?>.subnetMask":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"Defunct, supply the prefix length instead.\n","readOnly":false,"type":"unspecified"},"networking.interfaces.<name?>.useDHCP":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"Whether this interface should be configured with dhcp.\nNull implies the old behavior which depends on whether ip addresses\nare specified or not.\n","readOnly":false,"type":"null or boolean"},"networking.interfaces.<name?>.virtual":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":false,"description":"Whether this interface is virtual and should be created by tunctl.\nThis is mainly useful for creating bridges between a host and a virtual\nnetwork such as VPN or a virtual machine.\n","readOnly":false,"type":"boolean"},"networking.interfaces.<name?>.virtualOwner":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"root","description":"In case of a virtual device, the user who owns it.\n","readOnly":false,"type":"string"},"networking.interfaces.<name?>.virtualType":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The explicit type of interface to create. Accepts tun or tap strings.\nAlso accepts null to implicitly detect the type of device.\n","readOnly":false,"type":"null or one of \"tun\", \"tap\""},"networking.localCommands":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"Shell commands to be executed at the end of the\n<literal>network-setup</literal> systemd service.  Note that if\nyou are using DHCP to obtain the network configuration,\ninterfaces may not be fully configured yet.\n","example":"text=anything; echo You can put $text here.","readOnly":false,"type":"string"},"networking.macvlans":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":{},"description":"This option allows you to define macvlan interfaces which should\nbe automatically created.\n","example":{"_type":"literalExample","text":{"wan":{"interface":"enp2s0","mode":"vepa"}}},"readOnly":false,"type":"attribute set of submodules"},"networking.macvlans.<name>.interface":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"The interface the macvlan will transmit packets through.","example":"enp4s0","readOnly":false,"type":"string"},"networking.macvlans.<name>.mode":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The mode of the macvlan device.","example":"vepa","readOnly":false,"type":"null or string"},"networking.nameservers":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":[],"description":"The list of nameservers.  It can be left empty if it is auto-detected through DHCP.\n","example":["130.161.158.4","130.161.33.17"],"readOnly":false,"type":"list of strings"},"networking.nat.enable":{"declarations":["nixos/modules/services/networking/nat.nix"],"default":false,"description":"Whether to enable Network Address Translation (NAT).\n","readOnly":false,"type":"boolean"},"networking.nat.externalIP":{"declarations":["nixos/modules/services/networking/nat.nix"],"default":null,"description":"The public IP address to which packets from the local\nnetwork are to be rewritten.  If this is left empty, the\nIP address associated with the external interface will be\nused.\n","example":"203.0.113.123","readOnly":false,"type":"null or string"},"networking.nat.externalInterface":{"declarations":["nixos/modules/services/networking/nat.nix"],"description":"The name of the external network interface.\n","example":"eth1","readOnly":false,"type":"string"},"networking.nat.forwardPorts":{"declarations":["nixos/modules/services/networking/nat.nix"],"default":[],"description":"List of forwarded ports from the external interface to\ninternal destinations by using DNAT.\n","example":[{"destination":"10.0.0.1:80","sourcePort":8080}],"readOnly":false,"type":"list of submodules"},"networking.nat.forwardPorts.*.destination":{"declarations":["nixos/modules/services/networking/nat.nix"],"description":"Forward tcp connection to destination ip:port","example":"10.0.0.1:80","readOnly":false,"type":"string"},"networking.nat.forwardPorts.*.sourcePort":{"declarations":["nixos/modules/services/networking/nat.nix"],"description":"Source port of the external interface","example":8080,"readOnly":false,"type":"integer"},"networking.nat.internalIPs":{"declarations":["nixos/modules/services/networking/nat.nix"],"default":[],"description":"The IP address ranges for which to perform NAT.  Packets\ncoming from these addresses (on any interface) and destined\nfor the external interface will be rewritten.\n","example":["192.168.1.0/24"],"readOnly":false,"type":"list of strings"},"networking.nat.internalInterfaces":{"declarations":["nixos/modules/services/networking/nat.nix"],"default":[],"description":"The interfaces for which to perform NAT. Packets coming from\nthese interface and destined for the external interface will\nbe rewritten.\n","example":["eth0"],"readOnly":false,"type":"list of strings"},"networking.networkmanager.appendNameservers":{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":[],"description":"A list of name servers that should be appended\nto the ones configured in NetworkManager or received by DHCP.\n","readOnly":false,"type":"list of strings"},"networking.networkmanager.dispatcherScripts":{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":[],"description":"A list of scripts which will be executed in response to  network  events.\n","readOnly":false,"type":"list of submodules"},"networking.networkmanager.dispatcherScripts.*.source":{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"description":"A script source.\n","readOnly":false,"type":"string"},"networking.networkmanager.dispatcherScripts.*.type":{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":"basic","description":"Dispatcher hook type. Only basic hooks are currently available.\n","readOnly":false,"type":"one of \"basic\", \"pre-down\", \"pre-up\""},"networking.networkmanager.enable":{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":false,"description":"Whether to use NetworkManager to obtain an IP address and other\nconfiguration for all network interfaces that are not manually\nconfigured. If enabled, a group <literal>networkmanager</literal>\nwill be created. Add all users that should have permission\nto change network settings to this group.\n","readOnly":false,"type":"boolean"},"networking.networkmanager.insertNameservers":{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":[],"description":"A list of name servers that should be inserted before\nthe ones configured in NetworkManager or received by DHCP.\n","readOnly":false,"type":"list of strings"},"networking.networkmanager.packages":{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":[],"description":"Extra packages that provide NetworkManager plugins.\n","readOnly":false,"type":"list of paths"},"networking.networkmanager.unmanaged":{"declarations":["nixos/modules/services/networking/networkmanager.nix"],"default":[],"description":"List of interfaces that will not be managed by NetworkManager.\nInterface name can be specified here, but if you need more fidelity\nsee \"Device List Format\" in NetworkManager.conf man page.\n","readOnly":false,"type":"list of strings"},"networking.proxy.allProxy":{"declarations":["nixos/modules/config/networking.nix"],"default":null,"description":"This option specifies the all_proxy environment variable.\n","example":"http://127.0.0.1:3128","readOnly":false,"type":"null or string"},"networking.proxy.default":{"declarations":["nixos/modules/config/networking.nix"],"default":null,"description":"This option specifies the default value for httpProxy, httpsProxy, ftpProxy and rsyncProxy.\n","example":"http://127.0.0.1:3128","readOnly":false,"type":"null or string"},"networking.proxy.ftpProxy":{"declarations":["nixos/modules/config/networking.nix"],"default":null,"description":"This option specifies the ftp_proxy environment variable.\n","example":"http://127.0.0.1:3128","readOnly":false,"type":"null or string"},"networking.proxy.httpProxy":{"declarations":["nixos/modules/config/networking.nix"],"default":null,"description":"This option specifies the http_proxy environment variable.\n","example":"http://127.0.0.1:3128","readOnly":false,"type":"null or string"},"networking.proxy.httpsProxy":{"declarations":["nixos/modules/config/networking.nix"],"default":null,"description":"This option specifies the https_proxy environment variable.\n","example":"http://127.0.0.1:3128","readOnly":false,"type":"null or string"},"networking.proxy.noProxy":{"declarations":["nixos/modules/config/networking.nix"],"default":null,"description":"This option specifies the no_proxy environment variable.\nIf a default proxy is used and noProxy is null,\nthen noProxy will be set to 127.0.0.1,localhost.\n","example":"127.0.0.1,localhost,.localdomain","readOnly":false,"type":"null or string"},"networking.proxy.rsyncProxy":{"declarations":["nixos/modules/config/networking.nix"],"default":null,"description":"This option specifies the rsync_proxy environment variable.\n","example":"http://127.0.0.1:3128","readOnly":false,"type":"null or string"},"networking.resolvconfOptions":{"declarations":["nixos/modules/config/networking.nix"],"default":[],"description":"Set the options in <filename>/etc/resolv.conf</filename>.\n","example":["ndots:1","rotate"],"readOnly":false,"type":"list of strings"},"networking.search":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":[],"description":"The list of search paths used when resolving domain names.\n","example":["example.com","local.domain"],"readOnly":false,"type":"list of strings"},"networking.sits":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":{},"description":"This option allows you to define 6-to-4 interfaces which should be automatically created.\n","example":{"_type":"literalExample","text":{"hurricane":{"local":"10.0.0.22","remote":"10.0.0.1","ttl":255},"msipv6":{"dev":"enp3s0","remote":"192.168.0.1","ttl":127}}},"readOnly":false,"type":"attribute set of submodules"},"networking.sits.<name>.dev":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The underlying network device on which the tunnel resides.\n","example":"enp4s0f0","readOnly":false,"type":"null or string"},"networking.sits.<name>.local":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The address of the local endpoint which the remote\nside should send packets to.\n","example":"10.0.0.22","readOnly":false,"type":"null or string"},"networking.sits.<name>.remote":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The address of the remote endpoint to forward traffic over.\n","example":"10.0.0.1","readOnly":false,"type":"null or string"},"networking.sits.<name>.ttl":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"The time-to-live of the connection to the remote tunnel endpoint.\n","example":255,"readOnly":false,"type":"null or integer"},"networking.supplicant":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"default":{},"description":"Interfaces for which to start <command>wpa_supplicant</command>.\nThe supplicant is used to scan for and associate with wireless networks,\nor to authenticate with 802.1x capable network switches.\n\nThe value of this option is an attribute set. Each attribute configures a\n<command>wpa_supplicant</command> service, where the attribute name specifies\nthe name of the interface that <command>wpa_supplicant</command> operates on.\nThe attribute name can be a space separated list of interfaces.\nThe attribute names <literal>WLAN</literal>, <literal>LAN</literal> and <literal>DBUS</literal>\nhave a special meaning. <literal>WLAN</literal> and <literal>LAN</literal> are\nconfigurations for universal <command>wpa_supplicant</command> service that is\nstarted for each WLAN interface or for each LAN interface, respectively.\n<literal>DBUS</literal> defines a device-unrelated <command>wpa_supplicant</command>\nservice that can be accessed through <literal>D-Bus</literal>.\n","example":{"wlan0 wlan1":{"bridge":"br0","configFile":"/etc/wpa_supplicant","extraCmdArgs":"-u -W","extraConf":"ap_scan=1\np2p_disabled=1\n","userControlled":{"group":"network"}}},"readOnly":false,"type":"attribute set of submodules"},"networking.supplicant.<name>.bridge":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"default":"","description":"Name of the bridge interface that wpa_supplicant should listen at.","readOnly":false,"type":"string"},"networking.supplicant.<name>.configFile.path":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"description":"External <literal>wpa_supplicant.conf</literal> configuration file.\nThe configuration options defined declaratively within <literal>networking.supplicant</literal> have\nprecedence over options defined in <literal>configFile</literal>.\n","example":{"_type":"literalExample","text":"/etc/wpa_supplicant.conf"},"readOnly":false,"type":"path"},"networking.supplicant.<name>.configFile.writable":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"default":false,"description":"Whether the configuration file at <literal>configFile.path</literal> should be written to by\n<literal>wpa_supplicant</literal>.\n","readOnly":false,"type":"boolean"},"networking.supplicant.<name>.driver":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"default":"nl80211,wext","description":"Force a specific wpa_supplicant driver.","readOnly":false,"type":"null or string"},"networking.supplicant.<name>.extraCmdArgs":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"default":"","description":"Command line arguments to add when executing <literal>wpa_supplicant</literal>.","example":"-e/var/run/wpa_supplicant/entropy.bin","readOnly":false,"type":"string"},"networking.supplicant.<name>.extraConf":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"default":"","description":"Configuration options for <literal>wpa_supplicant.conf</literal>.\nOptions defined here have precedence over options in <literal>configFile</literal>.\nNOTE: Do not write sensitive data into <literal>extraConf</literal> as it will\nbe world-readable in the <literal>nix-store</literal>. For sensitive information\nuse the <literal>configFile</literal> instead.\n","example":"ap_scan=1\ndevice_name=My-NixOS-Device\ndevice_type=1-0050F204-1\ndriver_param=use_p2p_group_interface=1\ndisable_scan_offload=1\np2p_listen_reg_class=81\np2p_listen_channel=1\np2p_oper_reg_class=81\np2p_oper_channel=1\nmanufacturer=NixOS\nmodel_name=NixOS_Unstable\nmodel_number=2015\n","readOnly":false,"type":"string"},"networking.supplicant.<name>.userControlled.enable":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"default":false,"description":"Allow normal users to control wpa_supplicant through wpa_gui or wpa_cli.\nThis is useful for laptop users that switch networks a lot and don't want\nto depend on a large package such as NetworkManager just to pick nearby\naccess points.\n","readOnly":false,"type":"boolean"},"networking.supplicant.<name>.userControlled.group":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"default":"wheel","description":"Members of this group can control wpa_supplicant.","example":"network","readOnly":false,"type":"string"},"networking.supplicant.<name>.userControlled.socketDir":{"declarations":["nixos/modules/services/networking/supplicant.nix"],"default":"/var/run/wpa_supplicant","description":"Directory of sockets for controlling wpa_supplicant.","readOnly":false,"type":"string"},"networking.tcpcrypt.enable":{"declarations":["nixos/modules/services/networking/tcpcrypt.nix"],"default":false,"description":"Whether to enable opportunistic TCP encryption. If the other end\nspeaks Tcpcrypt, then your traffic will be encrypted; otherwise\nit will be sent in clear text. Thus, Tcpcrypt alone provides no\nguarantees -- it is best effort. If, however, a Tcpcrypt\nconnection is successful and any attackers that exist are\npassive, then Tcpcrypt guarantees privacy.\n","readOnly":false,"type":"unspecified"},"networking.useDHCP":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":true,"description":"Whether to use DHCP to obtain an IP address and other\nconfiguration for all network interfaces that are not manually\nconfigured.\n","readOnly":false,"type":"boolean"},"networking.useHostResolvConf":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":false,"description":"In containers, whether to use the\n<filename>resolv.conf</filename> supplied by the host.\n","readOnly":false,"type":"boolean"},"networking.useNetworkd":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":false,"description":"Whether we should use networkd as the network configuration backend or\nthe legacy script based system. Note that this option is experimental,\nenable at your own risk.\n","readOnly":false,"type":"boolean"},"networking.usePredictableInterfaceNames":{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":true,"description":"Whether to assign <link\nxlink:href='http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames'>predictable\nnames to network interfaces</link>.  If enabled, interfaces\nare assigned names that contain topology information\n(e.g. <literal>wlp3s0</literal>) and thus should be stable\nacross reboots.  If disabled, names depend on the order in\nwhich interfaces are discovered by the kernel, which may\nchange randomly across reboots; for instance, you may find\n<literal>eth0</literal> and <literal>eth1</literal> flipping\nunpredictably.\n","readOnly":false,"type":"boolean"},"networking.vlans":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":{},"description":"This option allows you to define vlan devices that tag packets\non top of a physical interface. The value of this option is an\nattribute set. Each attribute specifies a vlan, with the name\nspecifying the name of the vlan interface.\n","example":{"_type":"literalExample","text":{"vlan0":{"id":3,"interface":"enp3s0"},"vlan1":{"id":1,"interface":"wlan0"}}},"readOnly":false,"type":"attribute set of submodules"},"networking.vlans.<name>.id":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"The vlan identifier","example":1,"readOnly":false,"type":"integer"},"networking.vlans.<name>.interface":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"The interface the vlan will transmit packets through.","example":"enp4s0","readOnly":false,"type":"string"},"networking.vpnc.services":{"declarations":["nixos/modules/config/vpnc.nix"],"default":{},"description":"The names of cisco VPNs and their associated definitions\n","example":{"_type":"literalExample","text":"{ test = ''\n    IPSec gateway 192.168.1.1\n    IPSec ID someID\n    IPSec secret secretKey\n    Xauth username name\n    Xauth password pass\n  '';\n}\n"},"readOnly":false,"type":"attribute set of strings"},"networking.vswitches":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":{},"description":"This option allows you to define Open vSwitches that connect\nphysical networks together. The value of this option is an\nattribute set. Each attribute specifies a vswitch, with the\nattribute name specifying the name of the vswitch's network\ninterface.\n","example":{"vs0":{"interfaces":["eth0","eth1"]},"vs1":{"interfaces":["eth2","wlan0"]}},"readOnly":false,"type":"attribute set of submodules"},"networking.vswitches.<name>.controllers":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":[],"description":"Specify the controller targets. For the allowed options see <literal>man 8 ovs-vsctl</literal>.\n","example":["ptcp:6653:[::1]"],"readOnly":false,"type":"list of strings"},"networking.vswitches.<name>.extraOvsctlCmds":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"Commands to manipulate the Open vSwitch database. Every line executed with <literal>ovs-vsctl</literal>.\nAll commands are bundled together with the operations for adding the interfaces\ninto one atomic operation.\n","example":"set-fail-mode <switch_name> secure\nset Bridge <switch_name> stp_enable=true\n","readOnly":false,"type":"string"},"networking.vswitches.<name>.interfaces":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"The physical network interfaces connected by the vSwitch.","example":["eth0","eth1"],"readOnly":false,"type":"list of strings"},"networking.vswitches.<name>.openFlowRules":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"","description":"OpenFlow rules to insert into the Open vSwitch. All <literal>openFlowRules</literal> are\nloaded with <literal>ovs-ofctl</literal> within one atomic operation.\n","example":"actions=normal\n","readOnly":false,"type":"string"},"networking.wicd.enable":{"declarations":["nixos/modules/services/networking/wicd.nix"],"default":false,"description":"Whether to start <command>wicd</command>. Wired and\nwireless network configurations can then be managed by\nwicd-client.\n","readOnly":false,"type":"unspecified"},"networking.wireguard.interfaces":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":{},"description":"Wireguard interfaces.","example":{"wg0":{"ips":["192.168.20.4/24"],"peers":[{"allowedIPs":["192.168.20.1/32"],"endpoint":"demo.wireguard.io:12913","publicKey":"xTIBA5rboUvnH4htodjb6e697QjLERt1NAB4mZqp8Dg="}],"privateKey":"yAnz5TF+lXXJte14tji3zlMNq+hd2rYUIgJBgB3fBmk="}},"readOnly":false,"type":"attribute set of submodules"},"networking.wireguard.interfaces.<name>.ips":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":[],"description":"The IP addresses of the interface.","example":["192.168.2.1/24"],"readOnly":false,"type":"list of strings"},"networking.wireguard.interfaces.<name>.listenPort":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":null,"description":"16-bit port for listening. Optional; if not specified,\n        automatically generated based on interface name.","example":51820,"readOnly":false,"type":"null or integer"},"networking.wireguard.interfaces.<name>.peers":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":[],"description":"Peers linked to the interface.","readOnly":false,"type":"list of submodules"},"networking.wireguard.interfaces.<name>.peers.*.allowedIPs":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"description":"List of IP (v4 or v6) addresses with CIDR masks from\n        which this peer is allowed to send incoming traffic and to which\n        outgoing traffic for this peer is directed. The catch-all 0.0.0.0/0 may\n        be specified for matching all IPv4 addresses, and ::/0 may be specified\n        for matching all IPv6 addresses.","example":["10.192.122.3/32","10.192.124.1/24"],"readOnly":false,"type":"list of strings"},"networking.wireguard.interfaces.<name>.peers.*.endpoint":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":null,"description":"Endpoint IP or hostname of the peer, followed by a colon,\n        and then a port number of the peer.","example":"demo.wireguard.io:12913","readOnly":false,"type":"null or string"},"networking.wireguard.interfaces.<name>.peers.*.persistentKeepalive":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":null,"description":"This is optional and is by default off, because most\n        users will not need it. It represents, in seconds, between 1 and 65535\n        inclusive, how often to send an authenticated empty packet to the peer,\n        for the purpose of keeping a stateful firewall or NAT mapping valid\n        persistently. For example, if the interface very rarely sends traffic,\n        but it might at anytime receive traffic from a peer, and it is behind\n        NAT, the interface might benefit from having a persistent keepalive\n        interval of 25 seconds; however, most users will not need this.","example":25,"readOnly":false,"type":"null or integer"},"networking.wireguard.interfaces.<name>.peers.*.publicKey":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"description":"The base64 public key the peer.","example":"xTIBA5rboUvnH4htodjb6e697QjLERt1NAB4mZqp8Dg=","readOnly":false,"type":"string"},"networking.wireguard.interfaces.<name>.postSetup":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":[],"description":"A list of commands called at the end of the interface setup.","example":{"_type":"literalExample","text":["${pkgs.bash} -c 'printf \"nameserver 10.200.100.1\" | ${pkgs.openresolv}/bin/resolvconf -a wg0 -m 0'\n"]},"readOnly":false,"type":"list of strings"},"networking.wireguard.interfaces.<name>.postShutdown":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":[],"description":"A list of commands called after shutting down the interface.","example":{"_type":"literalExample","text":["${pkgs.openresolv}/bin/resolvconf -d wg0"]},"readOnly":false,"type":"list of strings"},"networking.wireguard.interfaces.<name>.preSetup":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":[],"description":"A list of commands called at the start of the interface\n        setup.","example":{"_type":"literalExample","text":["${pkgs.iproute}/bin/ip netns add foo\n"]},"readOnly":false,"type":"list of strings"},"networking.wireguard.interfaces.<name>.presharedKey":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"default":null,"description":"base64 preshared key generated by wg genpsk. Optional,\n        and may be omitted. This option adds an additional layer of\n        symmetric-key cryptography to be mixed into the already existing\n        public-key  cryptography, for post-quantum resistance.","example":"rVXs/Ni9tu3oDBLS4hOyAUAa1qTWVA3loR8eL20os3I=","readOnly":false,"type":"null or string"},"networking.wireguard.interfaces.<name>.privateKey":{"declarations":["nixos/modules/services/networking/wireguard.nix"],"description":"Base64 private key generated by wg genkey.","example":"yAnz5TF+lXXJte14tji3zlMNq+hd2rYUIgJBgB3fBmk=","readOnly":false,"type":"string"},"networking.wireless.driver":{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":"nl80211,wext","description":"Force a specific wpa_supplicant driver.","readOnly":false,"type":"string"},"networking.wireless.enable":{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":false,"description":"Whether to enable wpa_supplicant.","example":true,"readOnly":false,"type":"boolean"},"networking.wireless.interfaces":{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":[],"description":"The interfaces <command>wpa_supplicant</command> will use. If empty, it will\nautomatically use all wireless interfaces.\n","example":["wlan0","wlan1"],"readOnly":false,"type":"list of strings"},"networking.wireless.networks":{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":{},"description":"The network definitions to automatically connect to when\n <command>wpa_supplicant</command> is running. If this\n parameter is left empty wpa_supplicant will use\n/etc/wpa_supplicant.conf as the configuration file.\n","example":{"_type":"literalExample","text":"{ echelon = {\n    psk = \"abcdefgh\";\n  };\n  \"free.wifi\" = {};\n}\n"},"readOnly":false,"type":"attribute set of submodules"},"networking.wireless.networks.<name>.psk":{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":null,"description":"The network's pre-shared key in plaintext defaulting\nto being a network without any authentication.\n\nBe aware that these will be written to the nix store\nin plaintext!\n\nMutually exclusive with <varname>pskRaw</varname>.\n","readOnly":false,"type":"null or string"},"networking.wireless.networks.<name>.pskRaw":{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":null,"description":"The network's pre-shared key in hex defaulting\nto being a network without any authentication.\n\nMutually exclusive with <varname>psk</varname>.\n","readOnly":false,"type":"null or string"},"networking.wireless.userControlled.enable":{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":false,"description":"Allow normal users to control wpa_supplicant through wpa_gui or wpa_cli.\nThis is useful for laptop users that switch networks a lot and don't want\nto depend on a large package such as NetworkManager just to pick nearby\naccess points.\n\nWhen using a declarative network specification you cannot persist any\nsettings via wpa_gui or wpa_cli.\n","readOnly":false,"type":"boolean"},"networking.wireless.userControlled.group":{"declarations":["nixos/modules/services/networking/wpa_supplicant.nix"],"default":"wheel","description":"Members of this group can control wpa_supplicant.","example":"network","readOnly":false,"type":"string"},"networking.wlanInterfaces":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":{},"description":"Creating multiple WLAN interfaces on top of one physical WLAN device (NIC).\n\nThe name of the WLAN interface corresponds to the name of the attribute.\nA NIC is referenced by the persistent device name of the WLAN interface that\n<literal>udev</literal> assigns to a NIC by default.\nIf a NIC supports multiple WLAN interfaces, then the one NIC can be used as\n<literal>device</literal> for multiple WLAN interfaces.\nIf a NIC is used for creating WLAN interfaces, then the default WLAN interface\nwith a persistent device name form <literal>udev</literal> is not created.\nA WLAN interface with the persistent name assigned from <literal>udev</literal>\nwould have to be created explicitly.\n","example":{"_type":"literalExample","text":{"wlan-adhoc0":{"device":"wlp6s0","mac":"02:00:00:00:00:01","type":"ibss"},"wlan-ap0":{"device":"wlp6s0","mac":"02:00:00:00:00:03"},"wlan-p2p0":{"device":"wlp6s0","mac":"02:00:00:00:00:02"},"wlan-station0":{"device":"wlp6s0"}}},"readOnly":false,"type":"attribute set of submodules"},"networking.wlanInterfaces.<name>.device":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"description":"The name of the underlying hardware WLAN device as assigned by <literal>udev</literal>.","example":"wlp6s0","readOnly":false,"type":"string"},"networking.wlanInterfaces.<name>.flags":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"Flags for interface of type <literal>monitor</literal>.\n","example":"control","readOnly":false,"type":"null or one of \"none\", \"fcsfail\", \"control\", \"otherbss\", \"cook\", \"active\""},"networking.wlanInterfaces.<name>.fourAddr":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"Whether to enable <literal>4-address mode</literal> with type <literal>managed</literal>.","readOnly":false,"type":"null or boolean"},"networking.wlanInterfaces.<name>.mac":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"MAC address to use for the device. If <literal>null</literal>, then the MAC of the\nunderlying hardware WLAN device is used.\n\nINFO: Locally administered MAC addresses are of the form:\n<itemizedlist>\n<listitem><para>x2:xx:xx:xx:xx:xx</para></listitem>\n<listitem><para>x6:xx:xx:xx:xx:xx</para></listitem>\n<listitem><para>xA:xx:xx:xx:xx:xx</para></listitem>\n<listitem><para>xE:xx:xx:xx:xx:xx</para></listitem>\n</itemizedlist>\n","example":"02:00:00:00:00:01","readOnly":false,"type":"null or string"},"networking.wlanInterfaces.<name>.meshID":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":null,"description":"MeshID of interface with type <literal>mesh</literal>.","readOnly":false,"type":"null or string"},"networking.wlanInterfaces.<name>.type":{"declarations":["nixos/modules/tasks/network-interfaces.nix"],"default":"managed","description":"The type of the WLAN interface.\nThe type has to be supported by the underlying hardware of the device.\n","example":"ibss","readOnly":false,"type":"one of \"managed\", \"ibss\", \"monitor\", \"mesh\", \"wds\""},"nix.allowedUsers":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":["*"],"description":"A list of names of users (separated by whitespace) that are\nallowed to connect to the Nix daemon. As with\n<option>nix.trustedUsers</option>, you can specify groups by\nprefixing them with <literal>@</literal>. Also, you can\nallow all users by specifying <literal>*</literal>. The\ndefault is <literal>*</literal>. Note that trusted users are\nalways allowed to connect.\n","example":["@wheel","@builders","alice","bob"],"readOnly":false,"type":"list of strings"},"nix.binaryCachePublicKeys":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"description":"List of public keys used to sign binary caches. If\n<option>nix.requireSignedBinaryCaches</option> is enabled,\nthen Nix will use a binary from a binary cache if and only\nif it is signed by <emphasis>any</emphasis> of the keys\nlisted here. By default, only the key for\n<uri>cache.nixos.org</uri> is included.\n","example":["hydra.nixos.org-1:CNHJZBh9K4tP3EKF6FkkgeVYsS3ohTl+oS0Qa8bezVs="],"readOnly":false,"type":"list of strings"},"nix.binaryCaches":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":["https://cache.nixos.org/"],"description":"List of binary cache URLs used to obtain pre-built binaries\nof Nix packages.\n","readOnly":false,"type":"list of strings"},"nix.buildCores":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":1,"description":"This option defines the maximum number of concurrent tasks during\none build. It affects, e.g., -j option for make. The default is 1.\nThe special value 0 means that the builder should use all\navailable CPU cores in the system. Some builds may become\nnon-deterministic with this option; use with care! Packages will\nonly be affected if enableParallelBuilding is set for them.\n","example":64,"readOnly":false,"type":"integer"},"nix.buildMachines":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":[],"description":"This option lists the machines to be used if distributed\nbuilds are enabled (see\n<option>nix.distributedBuilds</option>).  Nix will perform\nderivations on those machines via SSH by copying the inputs\nto the Nix store on the remote machine, starting the build,\nthen copying the output back to the local Nix store.  Each\nelement of the list should be an attribute set containing\nthe machine's host name (<varname>hostname</varname>), the\nuser name to be used for the SSH connection\n(<varname>sshUser</varname>), the Nix system type\n(<varname>system</varname>, e.g.,\n<literal>\"i686-linux\"</literal>), the maximum number of\njobs to be run in parallel on that machine\n(<varname>maxJobs</varname>), the path to the SSH private\nkey to be used to connect (<varname>sshKey</varname>), a\nlist of supported features of the machine\n(<varname>supportedFeatures</varname>) and a list of\nmandatory features of the machine\n(<varname>mandatoryFeatures</varname>). The SSH private key\nshould not have a passphrase, and the corresponding public\nkey should be added to\n<filename>~<replaceable>sshUser</replaceable>/authorized_keys</filename>\non the remote machine.\n","example":[{"hostName":"voila.labs.cs.uu.nl","maxJobs":1,"sshKey":"/root/.ssh/id_buildfarm","sshUser":"nix","system":"powerpc-darwin"},{"hostName":"linux64.example.org","mandatoryFeatures":["perf"],"maxJobs":2,"sshKey":"/root/.ssh/id_buildfarm","sshUser":"buildfarm","supportedFeatures":["kvm"],"system":"x86_64-linux"}],"readOnly":false,"type":"list of attribute sets"},"nix.chrootDirs":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>nix.sandboxPaths</option>.","readOnly":false,"type":"unspecified"},"nix.daemonIONiceLevel":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":0,"description":"Nix daemon process I/O priority. This priority propagates to build processes.\n0 is the default Unix process I/O priority, 7 is the lowest.\n","readOnly":false,"type":"integer"},"nix.daemonNiceLevel":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":0,"description":"Nix daemon process priority. This priority propagates to build processes.\n0 is the default Unix process priority, 19 is the lowest.\n","readOnly":false,"type":"integer"},"nix.distributedBuilds":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":false,"description":"Whether to distribute builds to the machines listed in\n<option>nix.buildMachines</option>.\n","readOnly":false,"type":"boolean"},"nix.extraOptions":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"","description":"Additional text appended to <filename>nix.conf</filename>.","example":"gc-keep-outputs = true\ngc-keep-derivations = true\n","readOnly":false,"type":"string"},"nix.gc.automatic":{"declarations":["nixos/modules/services/misc/nix-gc.nix"],"default":false,"description":"Automatically run the garbage collector at a specific time.","readOnly":false,"type":"boolean"},"nix.gc.dates":{"declarations":["nixos/modules/services/misc/nix-gc.nix"],"default":"03:15","description":"Specification (in the format described by\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>) of the time at\nwhich the garbage collector will run.\n","readOnly":false,"type":"string"},"nix.gc.options":{"declarations":["nixos/modules/services/misc/nix-gc.nix"],"default":"","description":"Options given to <filename>nix-collect-garbage</filename> when the\ngarbage collector is run automatically.\n","example":"--max-freed $((64 * 1024**3))","readOnly":false,"type":"string"},"nix.maxJobs":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":1,"description":"This option defines the maximum number of jobs that Nix will try\nto build in parallel.  The default is 1.  You should generally\nset it to the total number of logical cores in your system (e.g., 16\nfor two CPUs with 4 cores each and hyper-threading).\n","example":64,"readOnly":false,"type":"integer"},"nix.nixPath":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":["nixpkgs=/nix/var/nix/profiles/per-user/root/channels/nixos/nixpkgs","nixos-config=/etc/nixos/configuration.nix","/nix/var/nix/profiles/per-user/root/channels"],"description":"The default Nix expression search path, used by the Nix\nevaluator to look up paths enclosed in angle brackets\n(e.g. <literal>&lt;nixpkgs&gt;</literal>).\n","readOnly":false,"type":"list of strings"},"nix.nrBuildUsers":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"description":"Number of <literal>nixbld</literal> user accounts created to\nperform secure concurrent builds.  If you receive an error\nmessage saying that “all build users are currently in use”,\nyou should increase this value.\n","readOnly":false,"type":"integer"},"nix.optimise.automatic":{"declarations":["nixos/modules/services/misc/nix-optimise.nix"],"default":false,"description":"Automatically run the nix store optimiser at a specific time.","readOnly":false,"type":"boolean"},"nix.optimise.dates":{"declarations":["nixos/modules/services/misc/nix-optimise.nix"],"default":["03:45"],"description":"Specification (in the format described by\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>) of the time at\nwhich the optimiser will run.\n","readOnly":false,"type":"list of strings"},"nix.package":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":"pkgs.nix","description":"This option specifies the Nix package instance to use throughout the system.\n","readOnly":false,"type":"package"},"nix.proxy":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>networking.proxy.default</option>.","readOnly":false,"type":"unspecified"},"nix.readOnlyStore":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":true,"description":"If set, NixOS will enforce the immutability of the Nix store\nby making <filename>/nix/store</filename> a read-only bind\nmount.  Nix will automatically make the store writable when\nneeded.\n","readOnly":false,"type":"boolean"},"nix.requireSignedBinaryCaches":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":true,"description":"If enabled (the default), Nix will only download binaries from binary caches if\nthey are cryptographically signed with any of the keys listed in\n<option>nix.binaryCachePublicKeys</option>. If disabled, signatures are neither\nrequired nor checked, so it's strongly recommended that you use only\ntrustworthy caches and https to prevent man-in-the-middle attacks.\n","readOnly":false,"type":"boolean"},"nix.sandboxPaths":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":[],"description":"Directories from the host filesystem to be included\nin the sandbox.\n","example":["/dev","/proc"],"readOnly":false,"type":"list of strings"},"nix.sshServe.enable":{"declarations":["nixos/modules/services/misc/nix-ssh-serve.nix"],"default":false,"description":"Whether to enable serving the Nix store as a binary cache via SSH.","readOnly":false,"type":"boolean"},"nix.sshServe.keys":{"declarations":["nixos/modules/services/misc/nix-ssh-serve.nix"],"default":[],"description":"A list of SSH public keys allowed to access the binary cache via SSH.","example":["ssh-dss AAAAB3NzaC1k... alice@example.org"],"readOnly":false,"type":"list of strings"},"nix.trustedBinaryCaches":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":[],"description":"List of binary cache URLs that non-root users can use (in\naddition to those specified using\n<option>nix.binaryCaches</option>) by passing\n<literal>--option binary-caches</literal> to Nix commands.\n","example":["http://hydra.nixos.org/"],"readOnly":false,"type":"list of strings"},"nix.trustedUsers":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":["root"],"description":"A list of names of users that have additional rights when\nconnecting to the Nix daemon, such as the ability to specify\nadditional binary caches, or to import unsigned NARs. You\ncan also specify groups by prefixing them with\n<literal>@</literal>; for instance,\n<literal>@wheel</literal> means all users in the wheel\ngroup.\n","example":["root","alice","@wheel"],"readOnly":false,"type":"list of strings"},"nix.useChroot":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>nix.useSandbox</option>.","readOnly":false,"type":"unspecified"},"nix.useSandbox":{"declarations":["nixos/modules/services/misc/nix-daemon.nix"],"default":false,"description":"\n          If set, Nix will perform builds in a sandboxed environment that it\n          will set up automatically for each build.  This prevents\n          impurities in builds by disallowing access to dependencies\n          outside of the Nix store.\n        ","readOnly":false,"type":"boolean or one of \"relaxed\""},"nixpkgs.config":{"declarations":["nixos/modules/misc/nixpkgs.nix"],"default":{},"description":"The configuration of the Nix Packages collection.  (For\ndetails, see the Nixpkgs documentation.)  It allows you to set\npackage configuration options, and to override packages\nglobally through the <varname>packageOverrides</varname>\noption.  The latter is a function that takes as an argument\nthe <emphasis>original</emphasis> Nixpkgs, and must evaluate\nto a set of new or overridden packages.\n","example":{"_type":"literalExample","text":"{ firefox.enableGeckoMediaPlayer = true;\n  packageOverrides = pkgs: {\n    firefox60Pkgs = pkgs.firefox60Pkgs.override {\n      enableOfficialBranding = true;\n    };\n  };\n}\n"},"readOnly":false,"type":"nixpkgs config"},"nixpkgs.system":{"declarations":["nixos/modules/misc/nixpkgs.nix"],"description":"Specifies the Nix platform type for which NixOS should be built.\nIf unset, it defaults to the platform type of your host system.\nSpecifying this option is useful when doing distributed\nmulti-platform deployment, or when building virtual machines.\n","example":"i686-linux","readOnly":false,"type":"string"},"power.ups.enable":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":false,"description":"Enables support for Power Devices, such as Uninterruptible Power\nSupplies, Power Distribution Units and Solar Controllers.\n","readOnly":false,"type":"boolean"},"power.ups.maxStartDelay":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":45,"description":"This can be set as a global variable above your first UPS\ndefinition and it can also be set in a UPS section.  This value\ncontrols how long upsdrvctl will wait for the driver to finish\nstarting.  This keeps your system from getting stuck due to a\nbroken driver or UPS.\n","readOnly":false,"type":"integer"},"power.ups.mode":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":"standalone","description":"The MODE determines which part of the NUT is to be started, and\nwhich configuration files must be modified.\n\nThe values of MODE can be:\n\n- none: NUT is not configured, or use the Integrated Power\n  Management, or use some external system to startup NUT\n  components. So nothing is to be started.\n\n- standalone: This mode address a local only configuration, with 1\n  UPS protecting the local system. This implies to start the 3 NUT\n  layers (driver, upsd and upsmon) and the matching configuration\n  files. This mode can also address UPS redundancy.\n\n- netserver: same as for the standalone configuration, but also\n  need some more ACLs and possibly a specific LISTEN directive in\n  upsd.conf.  Since this MODE is opened to the network, a special\n  care should be applied to security concerns.\n\n- netclient: this mode only requires upsmon.\n","readOnly":false,"type":"string"},"power.ups.schedulerRules":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"description":"File which contains the rules to handle UPS events.\n","example":"/etc/nixos/upssched.conf","readOnly":false,"type":"string"},"power.ups.ups":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":{},"description":"This is where you configure all the UPSes that this system will be\nmonitoring directly.  These are usually attached to serial ports,\nbut USB devices are also supported.\n","readOnly":false,"type":"attribute set of submodules"},"power.ups.ups.<name>.description":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":"","description":"Description of the UPS.\n","readOnly":false,"type":"string"},"power.ups.ups.<name>.directives":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":[],"description":"List of configuration directives for this UPS.\n","readOnly":false,"type":"list of strings"},"power.ups.ups.<name>.driver":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"description":"Specify the program to run to talk to this UPS.  apcsmart,\nbestups, and sec are some examples.\n","readOnly":false,"type":"string"},"power.ups.ups.<name>.maxStartDelay":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":null,"description":"This can be set as a global variable above your first UPS\ndefinition and it can also be set in a UPS section.  This value\ncontrols how long upsdrvctl will wait for the driver to finish\nstarting.  This keeps your system from getting stuck due to a\nbroken driver or UPS.\n","readOnly":false,"type":"null or integer"},"power.ups.ups.<name>.port":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"description":"The serial port to which your UPS is connected.  /dev/ttyS0 is\nusually the first port on Linux boxes, for example.\n","readOnly":false,"type":"string"},"power.ups.ups.<name>.shutdownOrder":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":0,"description":"When you have multiple UPSes on your system, you usually need to\nturn them off in a certain order.  upsdrvctl shuts down all the\n0s, then the 1s, 2s, and so on.  To exclude a UPS from the\nshutdown sequence, set this to -1.\n","readOnly":false,"type":"integer"},"power.ups.ups.<name>.summary":{"declarations":["nixos/modules/services/monitoring/ups.nix"],"default":"","description":"Lines which would be added inside ups.conf for handling this UPS.\n","readOnly":false,"type":"string"},"powerManagement.cpuFreqGovernor":{"declarations":["nixos/modules/tasks/cpu-freq.nix"],"default":null,"description":"Configure the governor used to regulate the frequence of the\navailable CPUs. By default, the kernel configures the\nperformance governor.\n","example":"ondemand","readOnly":false,"type":"null or string"},"powerManagement.enable":{"declarations":["nixos/modules/config/power-management.nix"],"default":true,"description":"Whether to enable power management.  This includes support\nfor suspend-to-RAM and powersave features on laptops.\n","readOnly":false,"type":"boolean"},"powerManagement.powerDownCommands":{"declarations":["nixos/modules/config/power-management.nix"],"default":"","description":"Commands executed when the machine powers down.  That is,\nthey're executed both when the system shuts down and when\nit goes to suspend or hibernation.\n","example":{"_type":"literalExample","text":"\"${pkgs.hdparm}/sbin/hdparm -B 255 /dev/sda\"\n"},"readOnly":false,"type":"string"},"powerManagement.powerUpCommands":{"declarations":["nixos/modules/config/power-management.nix"],"default":"","description":"Commands executed when the machine powers up.  That is,\nthey're executed both when the system first boots and when\nit resumes from suspend or hibernation.\n","example":{"_type":"literalExample","text":"\"${pkgs.hdparm}/sbin/hdparm -B 255 /dev/sda\"\n"},"readOnly":false,"type":"string"},"powerManagement.resumeCommands":{"declarations":["nixos/modules/config/power-management.nix"],"default":"","description":"Commands executed after the system resumes from suspend-to-RAM.","readOnly":false,"type":"string"},"powerManagement.scsiLinkPolicy":{"declarations":["nixos/modules/tasks/scsi-link-power-management.nix"],"default":null,"description":"SCSI link power management policy. The kernel default is\n\"max_performance\".\n","readOnly":false,"type":"null or one of \"min_power\", \"max_performance\", \"medium_power\""},"programs.adb.enable":{"declarations":["nixos/modules/programs/adb.nix"],"default":false,"description":"Whether to configure system to use Android Debug Bridge (adb).\nTo grant access to a user, it must be part of adbusers group:\n<code>users.extraUsers.alice.extraGroups = [\"adbusers\"];</code>\n","example":true,"readOnly":false,"type":"boolean"},"programs.atop.settings":{"declarations":["nixos/modules/programs/atop.nix"],"default":{},"description":"Parameters to be written to <filename>/etc/atoprc</filename>.\n","example":{"flags":"a1f","interval":5},"readOnly":false,"type":"attribute set"},"programs.bash.enableCompletion":{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":false,"description":"Enable Bash completion for all interactive bash shells.\n","readOnly":false,"type":"boolean"},"programs.bash.interactiveShellInit":{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"","description":"Shell script code called during interactive bash shell initialisation.\n","readOnly":false,"type":"string"},"programs.bash.loginShellInit":{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"","description":"Shell script code called during login bash shell initialisation.\n","readOnly":false,"type":"string"},"programs.bash.promptInit":{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"# Provide a nice prompt if the terminal supports it.\nif [ \"$TERM\" != \"dumb\" -o -n \"$INSIDE_EMACS\" ]; then\n  PROMPT_COLOR=\"1;31m\"\n  let $UID && PROMPT_COLOR=\"1;32m\"\n  PS1=\"\\n\\[\\033[$PROMPT_COLOR\\][\\u@\\h:\\w]\\\\$\\[\\033[0m\\] \"\n  if test \"$TERM\" = \"xterm\"; then\n    PS1=\"\\[\\033]2;\\h:\\u:\\w\\007\\]$PS1\"\n  fi\nfi\n","description":"Shell script code used to initialise the bash prompt.\n","readOnly":false,"type":"string"},"programs.bash.shellAliases":{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":{"l":"ls -alh","ll":"ls -l","ls":"ls --color=tty"},"description":"Set of aliases for bash shell. See <option>environment.shellAliases</option>\nfor an option format description.\n","readOnly":false,"type":"attribute set"},"programs.bash.shellInit":{"declarations":["nixos/modules/programs/bash/bash.nix"],"default":"","description":"Shell script code called during bash shell initialisation.\n","readOnly":false,"type":"string"},"programs.cdemu.enable":{"declarations":["nixos/modules/programs/cdemu.nix"],"default":false,"description":"<command>cdemu</command> for members of\n<option>programs.cdemu.group</option>.\n","readOnly":false,"type":"unspecified"},"programs.cdemu.group":{"declarations":["nixos/modules/programs/cdemu.nix"],"default":"cdrom","description":"Group that users must be in to use <command>cdemu</command>.\n","readOnly":false,"type":"unspecified"},"programs.cdemu.gui":{"declarations":["nixos/modules/programs/cdemu.nix"],"default":true,"description":"Whether to install the <command>cdemu</command> GUI (gCDEmu).\n","readOnly":false,"type":"unspecified"},"programs.cdemu.image-analyzer":{"declarations":["nixos/modules/programs/cdemu.nix"],"default":true,"description":"Whether to install the image analyzer.\n","readOnly":false,"type":"unspecified"},"programs.fish.enable":{"declarations":["nixos/modules/programs/fish.nix"],"default":false,"description":"Whether to configure fish as an interactive shell.\n","readOnly":false,"type":"boolean"},"programs.fish.interactiveShellInit":{"declarations":["nixos/modules/programs/fish.nix"],"default":"","description":"Shell script code called during interactive fish shell initialisation.\n","readOnly":false,"type":"string"},"programs.fish.loginShellInit":{"declarations":["nixos/modules/programs/fish.nix"],"default":"","description":"Shell script code called during fish login shell initialisation.\n","readOnly":false,"type":"string"},"programs.fish.promptInit":{"declarations":["nixos/modules/programs/fish.nix"],"default":"","description":"Shell script code used to initialise fish prompt.\n","readOnly":false,"type":"string"},"programs.fish.shellAliases":{"declarations":["nixos/modules/programs/fish.nix"],"default":{"l":"ls -alh","ll":"ls -l","ls":"ls --color=tty"},"description":"Set of aliases for fish shell. See <option>environment.shellAliases</option>\nfor an option format description.\n","readOnly":false,"type":"attribute set"},"programs.fish.shellInit":{"declarations":["nixos/modules/programs/fish.nix"],"default":"","description":"Shell script code called during fish shell initialisation.\n","readOnly":false,"type":"string"},"programs.ibus.plugins":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>i18n.inputMethod.ibus.engines</option>.","readOnly":false,"type":"unspecified"},"programs.info.enable":{"declarations":["nixos/modules/programs/info.nix"],"default":true,"description":"Whether to enable info pages and the <command>info</command> command.\n","readOnly":false,"type":"boolean"},"programs.java.enable":{"declarations":["nixos/modules/programs/java.nix"],"default":false,"description":"Install and setup the Java development kit.\n<note>\n<para>This adds JAVA_HOME to the global environment, by sourcing the\n  jdk's setup-hook on shell init. It is equivalent to starting a shell\n  through 'nix-shell -p jdk', or roughly the following system-wide\n  configuration:\n</para>\n<programlisting>\n  environment.variables.JAVA_HOME = ${pkgs.jdk.home}/lib/openjdk;\n  environment.systemPackages = [ pkgs.jdk ];\n</programlisting>\n</note>\n","example":true,"readOnly":false,"type":"boolean"},"programs.java.package":{"declarations":["nixos/modules/programs/java.nix"],"default":"pkgs.jdk","description":"Java package to install. Typical values are pkgs.jdk or pkgs.jre.\n","readOnly":false,"type":"package"},"programs.kbdlight.enable":{"declarations":["nixos/modules/programs/kbdlight.nix"],"default":false,"description":"Whether to enable kbdlight.","example":true,"readOnly":false,"type":"boolean"},"programs.light.enable":{"declarations":["nixos/modules/programs/light.nix"],"default":false,"description":"Whether to install Light backlight control with setuid wrapper.\n","readOnly":false,"type":"boolean"},"programs.man.enable":{"declarations":["nixos/modules/programs/man.nix"],"default":true,"description":"Whether to enable manual pages and the <command>man</command> command.\n","readOnly":false,"type":"boolean"},"programs.mosh.enable":{"declarations":["nixos/modules/programs/mosh.nix"],"default":false,"description":"\t  Whether to enable mosh. Note, this will open ports in your firewall!\n\t","example":true,"readOnly":false,"type":"boolean"},"programs.nano.nanorc":{"declarations":["nixos/modules/programs/nano.nix"],"default":"","description":"The system-wide nano configuration.\nSee <citerefentry><refentrytitle>nanorc</refentrytitle><manvolnum>5</manvolnum></citerefentry>.\n","example":"set nowrap\nset tabstospaces\nset tabsize 4\n","readOnly":false,"type":"string"},"programs.oblogout.bgcolor":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"black","description":"","readOnly":false,"type":"string"},"programs.oblogout.buttons":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"cancel, logout, restart, shutdown, suspend, hibernate","description":"","readOnly":false,"type":"string"},"programs.oblogout.buttontheme":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"simplistic","description":"","readOnly":false,"type":"string"},"programs.oblogout.cancel":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"Escape","description":"","readOnly":false,"type":"string"},"programs.oblogout.clock":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"","description":"","readOnly":false,"type":"string"},"programs.oblogout.clogout":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"openbox --exit","description":"","readOnly":false,"type":"string"},"programs.oblogout.cswitchuser":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"","description":"","readOnly":false,"type":"string"},"programs.oblogout.enable":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":false,"description":"Whether to install OBLogout and create <filename>/etc/oblogout.conf</filename>.\nSee <filename>${pkgs.oblogout}/share/doc/README</filename>.\n","readOnly":false,"type":"boolean"},"programs.oblogout.hibernate":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"H","description":"","readOnly":false,"type":"string"},"programs.oblogout.lock":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"K","description":"","readOnly":false,"type":"string"},"programs.oblogout.logout":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"L","description":"","readOnly":false,"type":"string"},"programs.oblogout.opacity":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":70,"description":"","readOnly":false,"type":"integer"},"programs.oblogout.restart":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"R","description":"","readOnly":false,"type":"string"},"programs.oblogout.shutdown":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"S","description":"","readOnly":false,"type":"string"},"programs.oblogout.suspend":{"declarations":["nixos/modules/programs/oblogout.nix"],"default":"U","description":"","readOnly":false,"type":"string"},"programs.screen.screenrc":{"declarations":["nixos/modules/programs/screen.nix"],"default":"","description":"The contents of /etc/screenrc file.\n","readOnly":false,"type":"string"},"programs.spacefm.enable":{"declarations":["nixos/modules/programs/spacefm.nix"],"default":false,"description":"Whether to install SpaceFM and create <filename>/etc/spacefm/spacefm.conf</filename>.\n","readOnly":false,"type":"boolean"},"programs.spacefm.settings":{"declarations":["nixos/modules/programs/spacefm.nix"],"default":{"graphical_su":"${pkgs.gksu}/bin/gksu","terminal_su":"${pkgs.sudo}/bin/sudo","tmp_dir":"/tmp"},"description":"The system-wide spacefm configuration.\nParameters to be written to <filename>/etc/spacefm/spacefm.conf</filename>.\nRefer to the <link xlink:href=\"https://ignorantguru.github.io/spacefm/spacefm-manual-en.html#programfiles-etc\">relevant entry</link> in the SpaceFM manual.\n","example":{"_type":"literalExample","text":"{\n          tmp_dir = \"/tmp\";\n          terminal_su = \"${pkgs.sudo}/bin/sudo\";\n          graphical_su = \"${pkgs.gksu}/bin/gksu\";\n        }"},"readOnly":false,"type":"attribute set"},"programs.ssh.agentTimeout":{"declarations":["nixos/modules/programs/ssh.nix"],"default":null,"description":"How long to keep the private keys in memory. Use null to keep them forever.\n","example":"1h","readOnly":false,"type":"null or string"},"programs.ssh.askPassword":{"declarations":["nixos/modules/programs/ssh.nix"],"default":"${pkgs.x11_ssh_askpass}/libexec/x11-ssh-askpass","description":"Program used by SSH to ask for passwords.","readOnly":false,"type":"string"},"programs.ssh.extraConfig":{"declarations":["nixos/modules/programs/ssh.nix"],"default":"","description":"Extra configuration text appended to <filename>ssh_config</filename>.\nSee <citerefentry><refentrytitle>ssh_config</refentrytitle><manvolnum>5</manvolnum></citerefentry>\nfor help.\n","readOnly":false,"type":"string"},"programs.ssh.forwardX11":{"declarations":["nixos/modules/programs/ssh.nix"],"default":false,"description":"Whether to request X11 forwarding on outgoing connections by default.\nThis is useful for running graphical programs on the remote machine and have them display to your local X11 server.\nHistorically, this value has depended on the value used by the local sshd daemon, but there really isn't a relation between the two.\nNote: there are some security risks to forwarding an X11 connection.\nNixOS's X server is built with the SECURITY extension, which prevents some obvious attacks.\nTo enable or disable forwarding on a per-connection basis, see the -X and -x options to ssh.\nThe -Y option to ssh enables trusted forwarding, which bypasses the SECURITY extension.\n","readOnly":false,"type":"boolean"},"programs.ssh.knownHosts":{"declarations":["nixos/modules/programs/ssh.nix"],"default":{},"description":"The set of system-wide known SSH hosts.\n","example":{"_type":"literalExample","text":"[\n  {\n    hostNames = [ \"myhost\" \"myhost.mydomain.com\" \"10.10.1.4\" ];\n    publicKeyFile = \"./pubkeys/myhost_ssh_host_dsa_key.pub\";\n  }\n  {\n    hostNames = [ \"myhost2\" ];\n    publicKeyFile = \"./pubkeys/myhost2_ssh_host_dsa_key.pub\";\n  }\n]\n"},"readOnly":false,"type":"list or attribute set of submodules"},"programs.ssh.knownHosts.<name?>.hostNames":{"declarations":["nixos/modules/programs/ssh.nix"],"default":[],"description":"A list of host names and/or IP numbers used for accessing\nthe host's ssh service.\n","readOnly":false,"type":"list of strings"},"programs.ssh.knownHosts.<name?>.publicKey":{"declarations":["nixos/modules/programs/ssh.nix"],"default":null,"description":"The public key data for the host. You can fetch a public key\nfrom a running SSH server with the <command>ssh-keyscan</command>\ncommand. The public key should not include any host names, only\nthe key type and the key itself.\n","example":"ecdsa-sha2-nistp521 AAAAE2VjZHN...UEPg==","readOnly":false,"type":"null or string"},"programs.ssh.knownHosts.<name?>.publicKeyFile":{"declarations":["nixos/modules/programs/ssh.nix"],"default":null,"description":"The path to the public key file for the host. The public\nkey file is read at build time and saved in the Nix store.\nYou can fetch a public key file from a running SSH server\nwith the <command>ssh-keyscan</command> command. The content\nof the file should follow the same format as described for\nthe <literal>publicKey</literal> option.\n","readOnly":false,"type":"null or path"},"programs.ssh.package":{"declarations":["nixos/modules/programs/ssh.nix"],"default":"pkgs.openssh","description":"The package used for the openssh client and daemon.\n","readOnly":false,"type":"package"},"programs.ssh.setXAuthLocation":{"declarations":["nixos/modules/programs/ssh.nix"],"description":"Whether to set the path to <command>xauth</command> for X11-forwarded connections.\nThis causes a dependency on X11 packages.\n","readOnly":false,"type":"boolean"},"programs.ssh.startAgent":{"declarations":["nixos/modules/programs/ssh.nix"],"default":true,"description":"Whether to start the OpenSSH agent when you log in.  The OpenSSH agent\nremembers private keys for you so that you don't have to type in\npassphrases every time you make an SSH connection.  Use\n<command>ssh-add</command> to add a key to the agent.\n","readOnly":false,"type":"boolean"},"programs.tmux.aggressiveResize":{"declarations":["nixos/modules/programs/tmux.nix"],"default":false,"description":"Resize the window to the size of the smallest session for which it is the current window.\n","example":true,"readOnly":false,"type":"boolean"},"programs.tmux.baseIndex":{"declarations":["nixos/modules/programs/tmux.nix"],"default":0,"description":"Base index for windows and panes.","example":1,"readOnly":false,"type":"integer"},"programs.tmux.clock24":{"declarations":["nixos/modules/programs/tmux.nix"],"default":false,"description":"Use 24 hour clock.","example":true,"readOnly":false,"type":"boolean"},"programs.tmux.customPaneNavigationAndResize":{"declarations":["nixos/modules/programs/tmux.nix"],"default":false,"description":"Override the hjkl and HJKL bindings for pane navigation and resizing in VI mode.","example":true,"readOnly":false,"type":"boolean"},"programs.tmux.enable":{"declarations":["nixos/modules/programs/tmux.nix"],"default":false,"description":"Whether to enable <command>tmux</command> - a <command>screen</command> replacement..","example":true,"readOnly":false,"type":"boolean"},"programs.tmux.escapeTime":{"declarations":["nixos/modules/programs/tmux.nix"],"default":500,"description":"Time in milliseconds for which tmux waits after an escape is input.","example":0,"readOnly":false,"type":"integer"},"programs.tmux.extraTmuxConf":{"declarations":["nixos/modules/programs/tmux.nix"],"default":"","description":"Additional contents of /etc/tmux.conf\n","readOnly":false,"type":"string"},"programs.tmux.historyLimit":{"declarations":["nixos/modules/programs/tmux.nix"],"default":2000,"description":"Maximum number of lines held in window history.","example":5000,"readOnly":false,"type":"integer"},"programs.tmux.keyMode":{"declarations":["nixos/modules/programs/tmux.nix"],"default":"emacs","description":"VI or Emacs style shortcuts.","example":"vi","readOnly":false,"type":"one of \"emacs\", \"vi\""},"programs.tmux.newSession":{"declarations":["nixos/modules/programs/tmux.nix"],"default":false,"description":"Automatically spawn a session if trying to attach and none are running.","example":true,"readOnly":false,"type":"boolean"},"programs.tmux.resizeAmount":{"declarations":["nixos/modules/programs/tmux.nix"],"default":5,"description":"Number of lines/columns when resizing.","example":10,"readOnly":false,"type":"integer"},"programs.tmux.reverseSplit":{"declarations":["nixos/modules/programs/tmux.nix"],"default":false,"description":"Reverse the window split shortcuts.","example":true,"readOnly":false,"type":"boolean"},"programs.tmux.shortcut":{"declarations":["nixos/modules/programs/tmux.nix"],"default":"b","description":"Ctrl following by this key is used as the main shortcut.","example":"a","readOnly":false,"type":"string"},"programs.tmux.terminal":{"declarations":["nixos/modules/programs/tmux.nix"],"default":"screen","description":"Set the $TERM variable.","example":"screen-256color","readOnly":false,"type":"string"},"programs.unity3d.enable":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>security.chromiumSuidSandbox.enable</option>.","readOnly":false,"type":"unspecified"},"programs.vim.defaultEditor":{"declarations":["nixos/modules/programs/vim.nix"],"default":false,"description":"When enabled, installs vim and configures vim to be the default editor\nusing the EDITOR environment variable.\n","example":true,"readOnly":false,"type":"boolean"},"programs.virtualbox.addNetworkInterface":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>virtualisation.virtualbox.host.addNetworkInterface</option>.","readOnly":false,"type":"unspecified"},"programs.virtualbox.enable":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>virtualisation.virtualbox.host.enable</option>.","readOnly":false,"type":"unspecified"},"programs.virtualbox.enableHardening":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>virtualisation.virtualbox.host.enableHardening</option>.","readOnly":false,"type":"unspecified"},"programs.xfs_quota.projects":{"declarations":["nixos/modules/programs/xfs_quota.nix"],"default":{},"description":"Setup of xfs_quota projects. Make sure the filesystem is mounted with the pquota option.","example":{"projname":{"id":50,"path":"/xfsprojects/projname","sizeHardLimit":"50g"}},"readOnly":false,"type":"attribute set of submodules"},"programs.xfs_quota.projects.<name>.fileSystem":{"declarations":["nixos/modules/programs/xfs_quota.nix"],"default":"/","description":"XFS filesystem hosting the xfs_quota project.","readOnly":false,"type":"string"},"programs.xfs_quota.projects.<name>.id":{"declarations":["nixos/modules/programs/xfs_quota.nix"],"description":"Project ID.","readOnly":false,"type":"integer"},"programs.xfs_quota.projects.<name>.path":{"declarations":["nixos/modules/programs/xfs_quota.nix"],"description":"Project directory.","readOnly":false,"type":"string"},"programs.xfs_quota.projects.<name>.sizeHardLimit":{"declarations":["nixos/modules/programs/xfs_quota.nix"],"default":null,"description":"Hard limit of the project size.","example":"50g","readOnly":false,"type":"null or string"},"programs.xfs_quota.projects.<name>.sizeSoftLimit":{"declarations":["nixos/modules/programs/xfs_quota.nix"],"default":null,"description":"Soft limit of the project size","example":"30g","readOnly":false,"type":"null or string"},"programs.xonsh.config":{"declarations":["nixos/modules/programs/xonsh.nix"],"default":"","description":"Control file to customize your shell behavior.","readOnly":false,"type":"string"},"programs.xonsh.enable":{"declarations":["nixos/modules/programs/xonsh.nix"],"default":false,"description":"Whether to configure xnosh as an interactive shell.\n","readOnly":false,"type":"boolean"},"programs.xonsh.package":{"declarations":["nixos/modules/programs/xonsh.nix"],"description":"xonsh package to use.\n","example":{"_type":"literalExample","text":"pkgs.xonsh.override { configFile = \"/path/to/xonshrc\"; }"},"readOnly":false,"type":"package"},"programs.zsh.enable":{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":false,"description":"Whether to configure zsh as an interactive shell. To enable zsh for\na particular user, use the <option>users.users.&lt;name?&gt;.shell</option>\noption for that user. To enable zsh system-wide use the\n<option>users.defaultUserShell</option> option.\n","readOnly":false,"type":"boolean"},"programs.zsh.enableCompletion":{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":true,"description":"Enable zsh completion for all interactive zsh shells.\n","readOnly":false,"type":"boolean"},"programs.zsh.enableSyntaxHighlighting":{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":false,"description":"Enable zsh-syntax-highlighting\n","readOnly":false,"type":"boolean"},"programs.zsh.interactiveShellInit":{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"","description":"Shell script code called during interactive zsh shell initialisation.\n","readOnly":false,"type":"string"},"programs.zsh.loginShellInit":{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"","description":"Shell script code called during zsh login shell initialisation.\n","readOnly":false,"type":"string"},"programs.zsh.promptInit":{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"autoload -U promptinit && promptinit && prompt walters\n","description":"Shell script code used to initialise the zsh prompt.\n","readOnly":false,"type":"string"},"programs.zsh.shellAliases":{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":{"l":"ls -alh","ll":"ls -l","ls":"ls --color=tty"},"description":"Set of aliases for zsh shell. See <option>environment.shellAliases</option>\nfor an option format description.\n","readOnly":false,"type":"attribute set"},"programs.zsh.shellInit":{"declarations":["nixos/modules/programs/zsh/zsh.nix"],"default":"","description":"Shell script code called during zsh shell initialisation.\n","readOnly":false,"type":"string"},"security.acme.certs":{"declarations":["nixos/modules/security/acme.nix"],"default":{},"description":"Attribute set of certificates to get signed and renewed.\n","example":{"bar.example.com":{"email":"bar@example.com","webroot":"/var/www/challenges/"},"example.com":{"email":"foo@example.com","extraDomains":{"foo.example.com":"/var/www/foo/","www.example.com":null},"webroot":"/var/www/challenges/"}},"readOnly":false,"type":"list or attribute set of submodules"},"security.acme.certs.<name?>.allowKeysForGroup":{"declarations":["nixos/modules/security/acme.nix"],"default":false,"description":"Give read permissions to the specified group to read SSL private certificates.","readOnly":false,"type":"boolean"},"security.acme.certs.<name?>.email":{"declarations":["nixos/modules/security/acme.nix"],"default":null,"description":"Contact email address for the CA to be able to reach you.","readOnly":false,"type":"null or string"},"security.acme.certs.<name?>.extraDomains":{"declarations":["nixos/modules/security/acme.nix"],"default":{},"description":"Extra domain names for which certificates are to be issued, with their\nown server roots if needed.\n","example":{"example.org":"/srv/http/nginx","mydomain.org":null},"readOnly":false,"type":"attribute set of null or strings"},"security.acme.certs.<name?>.group":{"declarations":["nixos/modules/security/acme.nix"],"default":"root","description":"Group running the ACME client.","readOnly":false,"type":"string"},"security.acme.certs.<name?>.plugins":{"declarations":["nixos/modules/security/acme.nix"],"default":["fullchain.pem","key.pem","account_key.json"],"description":"Plugins to enable. With default settings simp_le will\nstore public certificate bundle in <filename>fullchain.pem</filename>\nand private key in <filename>key.pem</filename> in its state directory.\n","readOnly":false,"type":"list of one of \"cert.der\", \"cert.pem\", \"chain.pem\", \"external.sh\", \"fullchain.pem\", \"full.pem\", \"key.der\", \"key.pem\", \"account_key.json\"s"},"security.acme.certs.<name?>.postRun":{"declarations":["nixos/modules/security/acme.nix"],"default":"","description":"Commands to run after certificates are re-issued. Typically\nthe web server and other servers using certificates need to\nbe reloaded.\n","example":"systemctl reload nginx.service","readOnly":false,"type":"string"},"security.acme.certs.<name?>.user":{"declarations":["nixos/modules/security/acme.nix"],"default":"root","description":"User running the ACME client.","readOnly":false,"type":"string"},"security.acme.certs.<name?>.webroot":{"declarations":["nixos/modules/security/acme.nix"],"description":"Where the webroot of the HTTP vhost is located.\n<filename>.well-known/acme-challenge/</filename> directory\nwill be created automatically if it doesn't exist.\n<literal>http://example.org/.well-known/acme-challenge/</literal> must also\nbe available (notice unencrypted HTTP).\n","readOnly":false,"type":"string"},"security.acme.directory":{"declarations":["nixos/modules/security/acme.nix"],"default":"/var/lib/acme","description":"Directory where certs and other state will be stored by default.\n","readOnly":false,"type":"string"},"security.acme.preliminarySelfsigned":{"declarations":["nixos/modules/security/acme.nix"],"default":true,"description":"Whether a preliminary self-signed certificate should be generated before\ndoing ACME requests. This can be useful when certificates are required in\na webserver, but ACME needs the webserver to make its requests.\n\nWith preliminary self-signed certificate the webserver can be started and\ncan later reload the correct ACME certificates.\n","readOnly":false,"type":"boolean"},"security.acme.renewInterval":{"declarations":["nixos/modules/security/acme.nix"],"default":"weekly","description":"Systemd calendar expression when to check for renewal. See\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.\n","readOnly":false,"type":"string"},"security.acme.validMin":{"declarations":["nixos/modules/security/acme.nix"],"default":2592000,"description":"Minimum remaining validity before renewal in seconds.","readOnly":false,"type":"integer"},"security.apparmor.confineSUIDApplications":{"declarations":["nixos/modules/security/apparmor-suid.nix"],"default":true,"description":"Install AppArmor profiles for commonly-used SUID application\nto mitigate potential privilege escalation attacks due to bugs\nin such applications.\n\nCurrently available profiles: ping\n","readOnly":false,"type":"unspecified"},"security.apparmor.enable":{"declarations":["nixos/modules/security/apparmor.nix"],"default":false,"description":"Enable the AppArmor Mandatory Access Control system.","readOnly":false,"type":"boolean"},"security.apparmor.profiles":{"declarations":["nixos/modules/security/apparmor.nix"],"default":[],"description":"List of files containing AppArmor profiles.","readOnly":false,"type":"list of paths"},"security.audit.backlogLimit":{"declarations":["nixos/modules/security/audit.nix"],"default":64,"description":"The maximum number of outstanding audit buffers allowed; exceeding this is\nconsidered a failure and handled in a manner specified by failureMode.\n","readOnly":false,"type":"integer"},"security.audit.enable":{"declarations":["nixos/modules/security/audit.nix"],"default":false,"description":"Whether to enable the Linux audit system. The special `lock' value can be used to\nenable auditing and prevent disabling it until a restart. Be careful about locking\nthis, as it will prevent you from changing your audit configuration until you\nrestart. If possible, test your configuration using build-vm beforehand.\n","readOnly":false,"type":"one of <bool>, <bool>, \"lock\""},"security.audit.failureMode":{"declarations":["nixos/modules/security/audit.nix"],"default":"printk","description":"How to handle critical errors in the auditing system","readOnly":false,"type":"one of \"silent\", \"printk\", \"panic\""},"security.audit.rateLimit":{"declarations":["nixos/modules/security/audit.nix"],"default":0,"description":"The maximum messages per second permitted before triggering a failure as\nspecified by failureMode. Setting it to zero disables the limit.\n","readOnly":false,"type":"integer"},"security.audit.rules":{"declarations":["nixos/modules/security/audit.nix"],"default":[],"description":"The ordered audit rules, with each string appearing as one line of the audit.rules file.\n","example":["-a exit,always -F arch=b64 -S execve"],"readOnly":false,"type":"list of strings"},"security.chromiumSuidSandbox.enable":{"declarations":["nixos/modules/security/chromium-suid-sandbox.nix"],"default":false,"description":"Whether to install the Chromium SUID sandbox which is an executable that\nChromium may use in order to achieve sandboxing.\n\nIf you get the error \"The SUID sandbox helper binary was found, but is not\nconfigured correctly.\", turning this on might help.\n\nAlso, if the URL chrome://sandbox tells you that \"You are not adequately\nsandboxed!\", turning this on might resolve the issue.\n\nFinally, if you have <option>security.grsecurity</option> enabled and you\nuse Chromium, you probably need this.\n","readOnly":false,"type":"boolean"},"security.duosec.acceptEnvFactor":{"declarations":["nixos/modules/security/duosec.nix"],"default":false,"description":"Look for factor selection or passcode in the\n<literal>$DUO_PASSCODE</literal> environment variable before\nprompting the user for input.\n\nWhen $DUO_PASSCODE is non-empty, it will override\nautopush. The SSH client will need SendEnv DUO_PASSCODE in\nits configuration, and the SSH server will similarly need\nAcceptEnv DUO_PASSCODE.\n","readOnly":false,"type":"boolean"},"security.duosec.allowTcpForwarding":{"declarations":["nixos/modules/security/duosec.nix"],"default":false,"description":"By default, when SSH forwarding, enabling Duo Security will\ndisable TCP forwarding. By enabling this, you potentially\nundermine some of the SSH based login security. Note this is\nnot needed if you use PAM.\n","readOnly":false,"type":"boolean"},"security.duosec.autopush":{"declarations":["nixos/modules/security/duosec.nix"],"default":false,"description":"If <literal>true</literal>, Duo Unix will automatically send\na push login request to the user’s phone, falling back on a\nphone call if push is unavailable. If\n<literal>false</literal>, the user will be prompted to\nchoose an authentication method. When configured with\n<literal>autopush = yes</literal>, we recommend setting\n<literal>prompts = 1</literal>.\n","readOnly":false,"type":"boolean"},"security.duosec.failmode":{"declarations":["nixos/modules/security/duosec.nix"],"default":"safe","description":"On service or configuration errors that prevent Duo\nauthentication, fail \"safe\" (allow access) or \"secure\" (deny\naccess). The default is \"safe\".\n","readOnly":false,"type":"one of \"safe\", \"enum\""},"security.duosec.fallbackLocalIP":{"declarations":["nixos/modules/security/duosec.nix"],"default":false,"description":"Duo Unix reports the IP address of the authorizing user, for\nthe purposes of authorization and whitelisting. If Duo Unix\ncannot detect the IP address of the client, setting\n<literal>fallbackLocalIP = yes</literal> will cause Duo Unix\nto send the IP address of the server it is running on.\n\nIf you are using IP whitelisting, enabling this option could\ncause unauthorized logins if the local IP is listed in the\nwhitelist.\n","readOnly":false,"type":"boolean"},"security.duosec.group":{"declarations":["nixos/modules/security/duosec.nix"],"default":"","description":"Use Duo authentication for users only in this group.","readOnly":false,"type":"string"},"security.duosec.host":{"declarations":["nixos/modules/security/duosec.nix"],"description":"Duo API hostname.","readOnly":false,"type":"string"},"security.duosec.ikey":{"declarations":["nixos/modules/security/duosec.nix"],"description":"Integration key.","readOnly":false,"type":"string"},"security.duosec.motd":{"declarations":["nixos/modules/security/duosec.nix"],"default":false,"description":"Print the contents of <literal>/etc/motd</literal> to screen\nafter a successful login.\n","readOnly":false,"type":"boolean"},"security.duosec.pam.enable":{"declarations":["nixos/modules/security/duosec.nix"],"default":false,"description":"If enabled, protect logins with Duo Security using PAM support.","readOnly":false,"type":"boolean"},"security.duosec.prompts":{"declarations":["nixos/modules/security/duosec.nix"],"default":3,"description":"If a user fails to authenticate with a second factor, Duo\nUnix will prompt the user to authenticate again. This option\nsets the maximum number of prompts that Duo Unix will\ndisplay before denying access. Must be 1, 2, or 3. Default\nis 3.\n\nFor example, when <literal>prompts = 1</literal>, the user\nwill have to successfully authenticate on the first prompt,\nwhereas if <literal>prompts = 2</literal>, if the user\nenters incorrect information at the initial prompt, he/she\nwill be prompted to authenticate again.\n\nWhen configured with <literal>autopush = true</literal>, we\nrecommend setting <literal>prompts = 1</literal>.\n","readOnly":false,"type":"one of 1, 2, 3"},"security.duosec.pushinfo":{"declarations":["nixos/modules/security/duosec.nix"],"default":false,"description":"Include information such as the command to be executed in\nthe Duo Push message.\n","readOnly":false,"type":"boolean"},"security.duosec.skey":{"declarations":["nixos/modules/security/duosec.nix"],"description":"Secret key.","readOnly":false,"type":"string"},"security.duosec.ssh.enable":{"declarations":["nixos/modules/security/duosec.nix"],"default":false,"description":"If enabled, protect SSH logins with Duo Security.","readOnly":false,"type":"boolean"},"security.extraSetuidPrograms":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>security.setuidPrograms</option>.","readOnly":false,"type":"unspecified"},"security.grsecurity.disableEfiRuntimeServices":{"declarations":["nixos/modules/security/grsecurity.nix"],"default":true,"description":"Whether to disable access to EFI runtime services.  Enabling EFI runtime\nservices creates a venue for code injection attacks on the kernel and\nshould be disabled if at all possible.  Changing this option enters into\neffect upon reboot.\n","example":false,"readOnly":false,"type":"boolean"},"security.grsecurity.enable":{"declarations":["nixos/modules/security/grsecurity.nix"],"default":false,"description":"Enable grsecurity/PaX.\n","example":true,"readOnly":false,"type":"boolean"},"security.grsecurity.lockTunables":{"declarations":["nixos/modules/security/grsecurity.nix"],"default":true,"description":"Whether to automatically lock grsecurity tunables\n(<option>boot.kernel.sysctl.\"kernel.grsecurity.*\"</option>).  Disable\nthis to allow runtime configuration of grsecurity features.  Activate\nthe <literal>grsec-lock</literal> service unit to prevent further\nconfiguration until the next reboot.\n","example":false,"readOnly":false,"type":"boolean"},"security.hideProcessInformation":{"declarations":["nixos/modules/security/hidepid.nix"],"default":false,"description":"Restrict process information to the owning user.\n","readOnly":false,"type":"boolean"},"security.pam.enableEcryptfs":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Enable eCryptfs PAM module (mounting ecryptfs home directory on login).\n","readOnly":false,"type":"unspecified"},"security.pam.enableOTPW":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Enable the OTPW (one-time password) PAM module.\n","readOnly":false,"type":"unspecified"},"security.pam.enableSSHAgentAuth":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Enable sudo logins if the user's SSH agent provides a key\npresent in <filename>~/.ssh/authorized_keys</filename>.\nThis allows machines to exclusively use SSH keys instead of\npasswords.\n","readOnly":false,"type":"unspecified"},"security.pam.enableU2F":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Enable the U2F PAM module.\n","readOnly":false,"type":"unspecified"},"security.pam.loginLimits":{"declarations":["nixos/modules/security/pam.nix"],"default":[],"description":"Define resource limits that should apply to users or groups.\n         Each item in the list should be an attribute set with a\n         <varname>domain</varname>, <varname>type</varname>,\n         <varname>item</varname>, and <varname>value</varname>\n         attribute.  The syntax and semantics of these attributes\n         must be that described in the limits.conf(5) man page.\n","example":[{"domain":"ftp","item":"nproc","type":"hard","value":"0"},{"domain":"@student","item":"maxlogins","type":"-","value":"4"}],"readOnly":false,"type":"unspecified"},"security.pam.mount.enable":{"declarations":["nixos/modules/security/pam_mount.nix"],"default":false,"description":"Enable PAM mount system to mount fileystems on user login.\n","readOnly":false,"type":"boolean"},"security.pam.mount.extraVolumes":{"declarations":["nixos/modules/security/pam_mount.nix"],"default":[],"description":"List of volume definitions for pam_mount.\nFor more information, visit <link\nxlink:href=\"http://pam-mount.sourceforge.net/pam_mount.conf.5.html\" />.\n","readOnly":false,"type":"list of strings"},"security.pam.oath.digits":{"declarations":["nixos/modules/security/oath.nix"],"default":6,"description":"Specify the length of the one-time password in number of\ndigits.\n","readOnly":false,"type":"one of 6, 7, 8"},"security.pam.oath.enable":{"declarations":["nixos/modules/security/oath.nix"],"default":false,"description":"Enable the OATH (one-time password) PAM module.\n","readOnly":false,"type":"boolean"},"security.pam.oath.usersFile":{"declarations":["nixos/modules/security/oath.nix"],"default":"/etc/users.oath","description":"Set the path to file where the user's credentials are\nstored. This file must not be world readable!\n","readOnly":false,"type":"path"},"security.pam.oath.window":{"declarations":["nixos/modules/security/oath.nix"],"default":5,"description":"Specify the number of one-time passwords to check in order\nto accommodate for situations where the system and the\nclient are slightly out of sync (iteration for HOTP or time\nsteps for TOTP).\n","readOnly":false,"type":"integer"},"security.pam.services":{"declarations":["nixos/modules/security/pam.nix"],"default":[],"description":"This option defines the PAM services.  A service typically\ncorresponds to a program that uses PAM,\ne.g. <command>login</command> or <command>passwd</command>.\nEach attribute of this set defines a PAM service, with the attribute name\ndefining the name of the service.\n","readOnly":false,"type":"list or attribute set of submodules"},"security.pam.services.<name?>.allowNullPassword":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Whether to allow logging into accounts that have no password\nset (i.e., have an empty password field in\n<filename>/etc/passwd</filename> or\n<filename>/etc/group</filename>).  This does not enable\nlogging into disabled accounts (i.e., that have the password\nfield set to <literal>!</literal>).  Note that regardless of\nwhat the pam_unix documentation says, accounts with hashed\nempty passwords are always allowed to log in.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.enableAppArmor":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Enable support for attaching AppArmor profiles at the\nuser/group level, e.g., as part of a role based access\ncontrol scheme.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.forwardXAuth":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Whether X authentication keys should be passed from the\ncalling user to the target user (e.g. for\n<command>su</command>)\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.fprintAuth":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"If set, fingerprint reader will be used (if exists and\nyour fingerprints are enrolled).\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.limits":{"declarations":["nixos/modules/security/pam.nix"],"description":"Attribute set describing resource limits.  Defaults to the\nvalue of <option>security.pam.loginLimits</option>.\n","readOnly":false,"type":"unspecified"},"security.pam.services.<name?>.logFailures":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Whether to log authentication failures in <filename>/var/log/faillog</filename>.","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.makeHomeDir":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Whether to try to create home directories for users\nwith <literal>$HOME</literal>s pointing to nonexistent\nlocations on session login.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.name":{"declarations":["nixos/modules/security/pam.nix"],"description":"Name of the PAM service.","example":"sshd","readOnly":false,"type":"string"},"security.pam.services.<name?>.oathAuth":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"If set, the OATH Toolkit will be used.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.otpwAuth":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"If set, the OTPW system will be used (if\n<filename>~/.otpw</filename> exists).\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.pamMount":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Enable PAM mount (pam_mount) system to mount fileystems on user login.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.requireWheel":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Whether to permit root access only to members of group wheel.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.rootOK":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"If set, root doesn't need to authenticate (e.g. for the\n<command>useradd</command> service).\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.setEnvironment":{"declarations":["nixos/modules/security/pam.nix"],"default":true,"description":"Whether the service should set the environment variables\nlisted in <option>environment.sessionVariables</option>\nusing <literal>pam_env.so</literal>.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.setLoginUid":{"declarations":["nixos/modules/security/pam.nix"],"description":"Set the login uid of the process\n(<filename>/proc/self/loginuid</filename>) for auditing\npurposes.  The login uid is only set by ‘entry points’ like\n<command>login</command> and <command>sshd</command>, not by\ncommands like <command>sudo</command>.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.showMotd":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Whether to show the message of the day.","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.sshAgentAuth":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"If set, the calling user's SSH agent is used to authenticate\nagainst the keys in the calling user's\n<filename>~/.ssh/authorized_keys</filename>.  This is useful\nfor <command>sudo</command> on password-less remote systems.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.startSession":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"If set, the service will register a new session with\nsystemd's login manager.  For local sessions, this will give\nthe user access to audio devices, CD-ROM drives.  In the\ndefault PolicyKit configuration, it also allows the user to\nreboot the system.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.text":{"declarations":["nixos/modules/security/pam.nix"],"description":"Contents of the PAM service file.","readOnly":false,"type":"null or string"},"security.pam.services.<name?>.u2fAuth":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"If set, users listed in\n<filename>~/.yubico/u2f_keys</filename> are able to log in\nwith the associated U2F key.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.unixAuth":{"declarations":["nixos/modules/security/pam.nix"],"default":true,"description":"Whether users can log in with passwords defined in\n<filename>/etc/shadow</filename>.\n","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.updateWtmp":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"Whether to update <filename>/var/log/wtmp</filename>.","readOnly":false,"type":"boolean"},"security.pam.services.<name?>.usbAuth":{"declarations":["nixos/modules/security/pam.nix"],"default":false,"description":"If set, users listed in\n<filename>/etc/pamusb.conf</filename> are able to log in\nwith the associated USB key.\n","readOnly":false,"type":"boolean"},"security.pam.usb.enable":{"declarations":["nixos/modules/security/pam_usb.nix"],"default":false,"description":"Enable USB login for all login systems that support it.  For\nmore information, visit <link\nxlink:href=\"http://pamusb.org/doc/quickstart#setting_up\" />.\n","readOnly":false,"type":"boolean"},"security.pki.caCertificateBlacklist":{"declarations":["nixos/modules/security/ca.nix"],"default":[],"description":"A list of blacklisted CA certificate names that won't be imported from\nthe Mozilla Trust Store into\n<filename>/etc/ssl/certs/ca-certificates.crt</filename>. Use the\nnames from that file.\n","example":["WoSign","WoSign China","CA WoSign ECC Root","Certification Authority of WoSign G2"],"readOnly":false,"type":"list of strings"},"security.pki.certificateFiles":{"declarations":["nixos/modules/security/ca.nix"],"default":[],"description":"A list of files containing trusted root certificates in PEM\nformat. These are concatenated to form\n<filename>/etc/ssl/certs/ca-certificates.crt</filename>, which is\nused by many programs that use OpenSSL, such as\n<command>curl</command> and <command>git</command>.\n","example":{"_type":"literalExample","text":"[ \"${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt\" ]"},"readOnly":false,"type":"list of paths"},"security.pki.certificates":{"declarations":["nixos/modules/security/ca.nix"],"default":[],"description":"A list of trusted root certificates in PEM format.\n","example":{"_type":"literalExample","text":"[ ''\n    NixOS.org\n    =========\n    -----BEGIN CERTIFICATE-----\n    MIIGUDCCBTigAwIBAgIDD8KWMA0GCSqGSIb3DQEBBQUAMIGMMQswCQYDVQQGEwJJ\n    TDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0\n    ...\n    -----END CERTIFICATE-----\n  ''\n]\n"},"readOnly":false,"type":"list of strings"},"security.polkit.adminIdentities":{"declarations":["nixos/modules/security/polkit.nix"],"default":["unix-user:0","unix-group:wheel"],"description":"Specifies which users are considered “administrators”, for those\nactions that require the user to authenticate as an\nadministrator (i.e. have an <literal>auth_admin</literal>\nvalue).  By default, this is the <literal>root</literal>\nuser and all users in the <literal>wheel</literal> group.\n","example":["unix-user:alice","unix-group:admin"],"readOnly":false,"type":"list of strings"},"security.polkit.enable":{"declarations":["nixos/modules/security/polkit.nix"],"default":true,"description":"Whether to enable PolKit.","readOnly":false,"type":"boolean"},"security.polkit.extraConfig":{"declarations":["nixos/modules/security/polkit.nix"],"default":"","description":"Any polkit rules to be added to config (in JavaScript ;-). See:\nhttp://www.freedesktop.org/software/polkit/docs/latest/polkit.8.html#polkit-rules\n","example":"/* Log authorization checks. */\npolkit.addRule(function(action, subject) {\n  polkit.log(\"user \" +  subject.user + \" is attempting action \" + action.id + \" from PID \" + subject.pid);\n});\n\n/* Allow any local user to do anything (dangerous!). */\npolkit.addRule(function(action, subject) {\n  if (subject.local) return \"yes\";\n});\n","readOnly":false,"type":"string"},"security.rngd.enable":{"declarations":["nixos/modules/security/rngd.nix"],"default":true,"description":"Whether to enable the rng daemon, which adds entropy from\nhardware sources of randomness to the kernel entropy pool when\navailable.\n","readOnly":false,"type":"boolean"},"security.rtkit.enable":{"declarations":["nixos/modules/security/rtkit.nix"],"default":false,"description":"Whether to enable the RealtimeKit system service, which hands\nout realtime scheduling priority to user processes on\ndemand. For example, the PulseAudio server uses this to\nacquire realtime priority.\n","readOnly":false,"type":"boolean"},"security.setuidOwners":{"declarations":["nixos/modules/security/setuid-wrappers.nix"],"default":[],"description":"This option allows the ownership and permissions on the setuid\nwrappers for specific programs to be overridden from the\ndefault (setuid root, but not setgid root).\n","example":[{"group":"postdrop","owner":"nobody","permissions":"u+rx,g+x,o+x","program":"sendmail","setgid":true,"setuid":false}],"readOnly":false,"type":"list of attribute sets"},"security.setuidPrograms":{"declarations":["nixos/modules/security/setuid-wrappers.nix"],"default":[],"description":"The Nix store cannot contain setuid/setgid programs directly.\nFor this reason, NixOS can automatically generate wrapper\nprograms that have the necessary privileges.  This option\nlists the names of programs in the system environment for\nwhich setuid root wrappers should be created.\n","example":["passwd"],"readOnly":false,"type":"list of strings"},"security.sudo.configFile":{"declarations":["nixos/modules/security/sudo.nix"],"description":"This string contains the contents of the\n<filename>sudoers</filename> file.\n","readOnly":false,"type":"string"},"security.sudo.enable":{"declarations":["nixos/modules/security/sudo.nix"],"default":true,"description":"Whether to enable the <command>sudo</command> command, which\nallows non-root users to execute commands as root.\n","readOnly":false,"type":"boolean"},"security.sudo.extraConfig":{"declarations":["nixos/modules/security/sudo.nix"],"default":"","description":"Extra configuration text appended to <filename>sudoers</filename>.\n","readOnly":false,"type":"string"},"security.sudo.wheelNeedsPassword":{"declarations":["nixos/modules/security/sudo.nix"],"default":true,"description":"Whether users of the <code>wheel</code> group can execute\ncommands as super user without entering a password.\n","readOnly":false,"type":"boolean"},"services.accounts-daemon.enable":{"declarations":["nixos/modules/services/desktops/accountsservice.nix"],"default":false,"description":"Whether to enable AccountsService, a DBus service for accessing\nthe list of user accounts and information attached to those accounts.\n","readOnly":false,"type":"boolean"},"services.acpid.acEventCommands":{"declarations":["nixos/modules/services/hardware/acpid.nix"],"default":"","description":"Shell commands to execute on an ac_adapter.* event.","readOnly":false,"type":"string"},"services.acpid.enable":{"declarations":["nixos/modules/services/hardware/acpid.nix"],"default":false,"description":"Whether to enable the ACPI daemon.","readOnly":false,"type":"boolean"},"services.acpid.handlers":{"declarations":["nixos/modules/services/hardware/acpid.nix"],"default":{},"description":"Event handlers.","example":{"mute":{"action":"amixer set Master toggle","event":"button/mute.*"}},"readOnly":false,"type":"attribute set of submodules"},"services.acpid.handlers.<name>.action":{"declarations":["nixos/modules/services/hardware/acpid.nix"],"description":"Shell commands to execute when the event is triggered.","readOnly":false,"type":"string"},"services.acpid.handlers.<name>.event":{"declarations":["nixos/modules/services/hardware/acpid.nix"],"description":"Event type.","example":["button/power.*","button/lid.*","ac_adapter.*","button/mute.*","button/volumedown.*","cd/play.*","cd/next.*"],"readOnly":false,"type":"string"},"services.acpid.lidEventCommands":{"declarations":["nixos/modules/services/hardware/acpid.nix"],"default":"","description":"Shell commands to execute on a button/lid.* event.","readOnly":false,"type":"string"},"services.acpid.powerEventCommands":{"declarations":["nixos/modules/services/hardware/acpid.nix"],"default":"","description":"Shell commands to execute on a button/power.* event.","readOnly":false,"type":"string"},"services.activemq.baseDir":{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"/var/activemq","description":"The base directory where ActiveMQ stores its persistent data and logs.\nThis will be overridden if you set \"activemq.base\" and \"activemq.data\"\nin the <literal>javaProperties</literal> option. You can also override\nthis in activemq.xml.\n","readOnly":false,"type":"string"},"services.activemq.configurationDir":{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"${pkgs.activemq}/conf","description":"The base directory for ActiveMQ's configuration.\nBy default, this directory is searched for a file named activemq.xml,\nwhich should contain the configuration for the broker service.\n","readOnly":false,"type":"unspecified"},"services.activemq.configurationURI":{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"xbean:activemq.xml","description":"The URI that is passed along to the BrokerFactory to\nset up the configuration of the ActiveMQ broker service.\nYou should not need to change this. For custom configuration,\nset the <literal>configurationDir</literal> instead, and create\nan activemq.xml configuration file in it.\n","readOnly":false,"type":"string"},"services.activemq.enable":{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":false,"description":"Enable the Apache ActiveMQ message broker service.\n","readOnly":false,"type":"boolean"},"services.activemq.extraJavaOptions":{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":"","description":"Add extra options here that you want to be sent to the\nJava runtime when the broker service is started.\n","example":"-Xmx2G -Xms2G -XX:MaxPermSize=512M","readOnly":false,"type":"string"},"services.activemq.javaProperties":{"declarations":["nixos/modules/services/amqp/activemq/default.nix"],"default":{},"description":"Specifies Java properties that are sent to the ActiveMQ\nbroker service with the \"-D\" option. You can set properties\nhere to change the behaviour and configuration of the broker.\nAll essential properties that are not set here are automatically\ngiven reasonable defaults.\n","example":{"java.net.preferIPv4Stack":"true"},"readOnly":false,"type":"attribute set"},"services.actkbd.bindings":{"declarations":["nixos/modules/services/hardware/actkbd.nix"],"default":[],"description":"Key bindings for <command>actkbd</command>.\n\nSee <command>actkbd</command> <filename>README</filename> for documentation.\n\nThe example shows a piece of what <option>sound.enableMediaKeys</option> does when enabled.\n","example":{"_type":"literalExample","text":"[ { keys = [ 113 ]; events = [ \"key\" ]; command = \"${pkgs.alsaUtils}/bin/amixer -q set Master toggle\"; }\n]\n"},"readOnly":false,"type":"list of submodules"},"services.actkbd.bindings.*.attributes":{"declarations":["nixos/modules/services/hardware/actkbd.nix"],"default":["exec"],"description":"List of attributes.","readOnly":false,"type":"list of strings"},"services.actkbd.bindings.*.command":{"declarations":["nixos/modules/services/hardware/actkbd.nix"],"default":"","description":"What to run.","readOnly":false,"type":"string"},"services.actkbd.bindings.*.events":{"declarations":["nixos/modules/services/hardware/actkbd.nix"],"default":["key"],"description":"List of events to match.","readOnly":false,"type":"list of one of \"key\", \"rep\", \"rel\"s"},"services.actkbd.bindings.*.keys":{"declarations":["nixos/modules/services/hardware/actkbd.nix"],"description":"List of keycodes to match.","readOnly":false,"type":"list of integers"},"services.actkbd.enable":{"declarations":["nixos/modules/services/hardware/actkbd.nix"],"default":false,"description":"Whether to enable the <command>actkbd</command> key mapping daemon.\n\nTurning this on will start an <command>actkbd</command>\ninstance for every evdev input that has at least one key\n(which is okay even for systems with tiny memory footprint,\nsince actkbd normally uses &lt;100 bytes of memory per\ninstance).\n\nThis allows binding keys globally without the need for e.g.\nX11.\n","readOnly":false,"type":"boolean"},"services.actkbd.extraConfig":{"declarations":["nixos/modules/services/hardware/actkbd.nix"],"default":"","description":"Literal contents to append to the end of actkbd configuration file.\n","readOnly":false,"type":"string"},"services.aiccu.automatic":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":true,"description":"Automatic Login and Tunnel activation","example":false,"readOnly":false,"type":"boolean"},"services.aiccu.behindNAT":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":false,"description":"Notify the user that a NAT-kind network is detected","example":true,"readOnly":false,"type":"boolean"},"services.aiccu.defaultRoute":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":true,"description":"Add a default route","example":false,"readOnly":false,"type":"boolean"},"services.aiccu.enable":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":false,"description":"Enable aiccu IPv6 over IPv4 SiXXs tunnel","example":true,"readOnly":false,"type":"boolean"},"services.aiccu.interfaceName":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":"aiccu","description":"The name of the interface that will be used as a tunnel interface.\nOn *BSD the ipv6_interface should be set to gifX (eg gif0) for proto-41 tunnels\nor tunX (eg tun0) for AYIYA tunnels.\n","example":"sixxs","readOnly":false,"type":"string"},"services.aiccu.localIPv4Override":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":false,"description":"Overrides the IPv4 parameter received from TIC\nThis allows one to configure a NAT into \"DMZ\" mode and then\nforwarding the proto-41 packets to an internal host.\n\nThis is only needed for static proto-41 tunnels!\nAYIYA and heartbeat tunnels don't require this.\n","example":true,"readOnly":false,"type":"boolean"},"services.aiccu.makeHeartBeats":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":true,"description":"In general you don't want to turn this off\nOf course only applies to AYIYA and heartbeat tunnels not to static ones\n","example":false,"readOnly":false,"type":"boolean"},"services.aiccu.noConfigure":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":false,"description":"Don't configure anything","example":true,"readOnly":false,"type":"boolean"},"services.aiccu.password":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":null,"description":"Login credential","example":"TmAkRbBEr0","readOnly":false,"type":"null or string"},"services.aiccu.pidFile":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":"/run/aiccu.pid","description":"Location of PID File","example":"/var/lib/aiccu/aiccu.pid","readOnly":false,"type":"path"},"services.aiccu.protocol":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":"tic","description":"Protocol to use for setting up the tunnel","example":"tic|tsp|l2tp","readOnly":false,"type":"string"},"services.aiccu.requireTLS":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":false,"description":"When set to true, if TLS is not supported on the server\nthe TIC transaction will fail.\nWhen set to false, it will try a starttls, when that is\nnot supported it will continue.\nIn any case if AICCU is build with TLS support it will\ntry to do a 'starttls' to the TIC server to see if that\nis supported.\n","example":true,"readOnly":false,"type":"boolean"},"services.aiccu.server":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":"tic.sixxs.net","description":"Server to use for setting up the tunnel","example":"enabled.ipv6server.net","readOnly":false,"type":"string"},"services.aiccu.setupScript":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":null,"description":"Script to run after setting up the interfaces","example":"/var/lib/aiccu/fix-subnets.sh","readOnly":false,"type":"null or path"},"services.aiccu.tunnelID":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":null,"description":"The tunnel id to use, only required when there are multiple tunnels in the list","example":"T12345","readOnly":false,"type":"null or string"},"services.aiccu.username":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":null,"description":"Login credential","example":"FAB5-SIXXS","readOnly":false,"type":"null or string"},"services.aiccu.verbose":{"declarations":["nixos/modules/services/networking/aiccu.nix"],"default":false,"description":"Be verbose?","example":true,"readOnly":false,"type":"boolean"},"services.almir.director_address":{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"127.0.0.1","description":"IP/Hostname for Director to connect with bconsole.\n","readOnly":false,"type":"unspecified"},"services.almir.director_name":{"declarations":["nixos/modules/services/backup/almir.nix"],"description":"Name of the Director to connect with bconsole.\n","readOnly":false,"type":"unspecified"},"services.almir.director_password":{"declarations":["nixos/modules/services/backup/almir.nix"],"description":"Password for Director to connect with bconsole.\n","readOnly":false,"type":"unspecified"},"services.almir.director_port":{"declarations":["nixos/modules/services/backup/almir.nix"],"default":9101,"description":"Port for Director to connect with bconsole.\n","readOnly":false,"type":"integer"},"services.almir.enable":{"declarations":["nixos/modules/services/backup/almir.nix"],"default":false,"description":"Enable Almir web server. Also configures postgresql database and installs bacula.\n","readOnly":false,"type":"boolean"},"services.almir.port":{"declarations":["nixos/modules/services/backup/almir.nix"],"default":35000,"description":"Port for Almir web server to listen on.\n","readOnly":false,"type":"integer"},"services.almir.sqlalchemy_engine_url":{"declarations":["nixos/modules/services/backup/almir.nix"],"default":"postgresql:///bacula","description":"Define SQL database connection to bacula catalog as specified in http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls\n","example":"postgresql://bacula:bacula@localhost:5432/bacula\nmysql+mysqlconnector://<user>:<password>@<hostname>/<database>'\nsqlite:////var/lib/bacula/bacula.db'\n","readOnly":false,"type":"unspecified"},"services.almir.timezone":{"declarations":["nixos/modules/services/backup/almir.nix"],"description":"Timezone as specified in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n","example":"Europe/Ljubljana","readOnly":false,"type":"unspecified"},"services.amule.dataDir":{"declarations":["nixos/modules/services/networking/amuled.nix"],"default":"/home/amule/","description":"The directory holding configuration, incoming and temporary files.\n","readOnly":false,"type":"unspecified"},"services.amule.enable":{"declarations":["nixos/modules/services/networking/amuled.nix"],"default":false,"description":"Whether to run the AMule daemon. You need to manually run \"amuled --ec-config\" to configure the service for the first time.\n","readOnly":false,"type":"unspecified"},"services.amule.user":{"declarations":["nixos/modules/services/networking/amuled.nix"],"default":null,"description":"The user the AMule daemon should run as.\n","readOnly":false,"type":"unspecified"},"services.apache-kafka.brokerId":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":0,"description":"Broker ID.","readOnly":false,"type":"integer"},"services.apache-kafka.enable":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":false,"description":"Whether to enable Apache Kafka.","readOnly":false,"type":"boolean"},"services.apache-kafka.extraProperties":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":null,"description":"Extra properties for server.properties.","readOnly":false,"type":"null or string"},"services.apache-kafka.hostname":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":"localhost","description":"Hostname the broker should bind to.","readOnly":false,"type":"string"},"services.apache-kafka.jvmOptions":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":["-server","-Xmx1G","-Xms1G","-XX:+UseCompressedOops","-XX:+UseParNewGC","-XX:+UseConcMarkSweepGC","-XX:+CMSClassUnloadingEnabled","-XX:+CMSScavengeBeforeRemark","-XX:+DisableExplicitGC","-Djava.awt.headless=true","-Djava.net.preferIPv4Stack=true"],"description":"Extra command line options for the JVM running Kafka.","example":["-Djava.net.preferIPv4Stack=true","-Dcom.sun.management.jmxremote","-Dcom.sun.management.jmxremote.local.only=true"],"readOnly":false,"type":"list of strings"},"services.apache-kafka.log4jProperties":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":"log4j.rootLogger=INFO, stdout \n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n\n","description":"Kafka log4j property configuration.","readOnly":false,"type":"string"},"services.apache-kafka.logDirs":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":["/tmp/kafka-logs"],"description":"Log file directories","readOnly":false,"type":"list of paths"},"services.apache-kafka.package":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":"pkgs.apacheKafka","description":"The kafka package to use","readOnly":false,"type":"package"},"services.apache-kafka.port":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":9092,"description":"Port number the broker should listen on.","readOnly":false,"type":"integer"},"services.apache-kafka.serverProperties":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":null,"description":"Complete server.properties content. Other server.properties config\noptions will be ignored if this option is used.\n","readOnly":false,"type":"null or string"},"services.apache-kafka.zookeeper":{"declarations":["nixos/modules/services/misc/apache-kafka.nix"],"default":"localhost:2181","description":"Zookeeper connection string","readOnly":false,"type":"string"},"services.apcupsd.configText":{"declarations":["nixos/modules/services/monitoring/apcupsd.nix"],"default":"UPSTYPE usb\nNISIP 127.0.0.1\nBATTERYLEVEL 50\nMINUTES 5\n","description":"Contents of the runtime configuration file, apcupsd.conf. The default\nsettings makes apcupsd autodetect USB UPSes, limit network access to\nlocalhost and shutdown the system when the battery level is below 50\npercent, or when the UPS has calculated that it has 5 minutes or less\nof remaining power-on time. See man apcupsd.conf for details.\n","readOnly":false,"type":"string"},"services.apcupsd.enable":{"declarations":["nixos/modules/services/monitoring/apcupsd.nix"],"default":false,"description":"Whether to enable the APC UPS daemon. apcupsd monitors your UPS and\npermits orderly shutdown of your computer in the event of a power\nfailure. User manual: http://www.apcupsd.com/manual/manual.html.\nNote that apcupsd runs as root (to allow shutdown of computer).\nYou can check the status of your UPS with the \"apcaccess\" command.\n","readOnly":false,"type":"boolean"},"services.apcupsd.hooks":{"declarations":["nixos/modules/services/monitoring/apcupsd.nix"],"default":{},"description":"Each attribute in this option names an apcupsd event and the string\nvalue it contains will be executed in a shell, in response to that\nevent (prior to the default action). See \"man apccontrol\" for the\nlist of events and what they represent.\n\nA hook script can stop apccontrol from doing its default action by\nexiting with value 99. Do not do this unless you know what you're\ndoing.\n","example":{"doshutdown":"# shell commands to notify that the computer is shutting down"},"readOnly":false,"type":"attribute set of strings"},"services.asterisk.confFiles":{"declarations":["nixos/modules/services/networking/asterisk.nix"],"default":{},"description":"Sets the content of config files (typically ending with\n<literal>.conf</literal>) in the Asterisk configuration directory.\n\nNote that if you want to change <literal>asterisk.conf</literal>, it\nis preferable to use the <option>services.asterisk.extraConfig</option>\noption over this option. If <literal>\"asterisk.conf\"</literal> is\nspecified with the <option>confFiles</option> option (not recommended),\nyou must be prepared to set your own <literal>astetcdir</literal>\npath.\n\nSee\n<link xlink:href=\"http://www.asterisk.org/community/documentation\"/>\nfor more examples of what is possible here.\n","example":{"_type":"literalExample","text":"{\n  \"extensions.conf\" = ''\n    [tests]\n    ; Dial 100 for \"hello, world\"\n    exten => 100,1,Answer()\n    same  =>     n,Wait(1)\n    same  =>     n,Playback(hello-world)\n    same  =>     n,Hangup()\n\n    [softphones]\n    include => tests\n\n    [unauthorized]\n  '';\n  \"sip.conf\" = ''\n    [general]\n    allowguest=no              ; Require authentication\n    context=unauthorized       ; Send unauthorized users to /dev/null\n    srvlookup=no               ; Don't do DNS lookup\n    udpbindaddr=0.0.0.0        ; Listen on all interfaces\n    nat=force_rport,comedia    ; Assume device is behind NAT\n\n    [softphone](!)\n    type=friend                ; Match on username first, IP second\n    context=softphones         ; Send to softphones context in\n                               ; extensions.conf file\n    host=dynamic               ; Device will register with asterisk\n    disallow=all               ; Manually specify codecs to allow\n    allow=g722\n    allow=ulaw\n    allow=alaw\n\n    [myphone](softphone)\n    secret=GhoshevFew          ; Change this password!\n  '';\n  \"logger.conf\" = ''\n    [general]\n\n    [logfiles]\n    ; Add debug output to log\n    syslog.local0 => notice,warning,error,debug\n  '';\n}\n"},"readOnly":false,"type":"attribute set of strings"},"services.asterisk.enable":{"declarations":["nixos/modules/services/networking/asterisk.nix"],"default":false,"description":"Whether to enable the Asterisk PBX server.\n","readOnly":false,"type":"boolean"},"services.asterisk.extraArguments":{"declarations":["nixos/modules/services/networking/asterisk.nix"],"default":[],"description":"Additional command line arguments to pass to Asterisk.\n","example":["-vvvddd","-e","1024"],"readOnly":false,"type":"list of strings"},"services.asterisk.extraConfig":{"declarations":["nixos/modules/services/networking/asterisk.nix"],"default":"","description":"Extra configuration options appended to the default\n<literal>asterisk.conf</literal> file.\n","example":"[options]\nverbose=3\ndebug=3\n","readOnly":false,"type":"string"},"services.atd.allowEveryone":{"declarations":["nixos/modules/services/scheduling/atd.nix"],"default":false,"description":"Whether to make <filename>/var/spool/at{jobs,spool}</filename>\nwriteable by everyone (and sticky).  This is normally not\nneeded since the <command>at</command> commands are\nsetuid/setgid <literal>atd</literal>.\n","readOnly":false,"type":"boolean"},"services.atd.enable":{"declarations":["nixos/modules/services/scheduling/atd.nix"],"default":false,"description":"Whether to enable the <command>at</command> daemon, a command scheduler.\n","readOnly":false,"type":"boolean"},"services.atftpd.enable":{"declarations":["nixos/modules/services/networking/atftpd.nix"],"default":false,"description":"Whether to enable the atftpd TFTP server. By default, the server\nbinds to address 0.0.0.0.\n","readOnly":false,"type":"boolean"},"services.atftpd.extraOptions":{"declarations":["nixos/modules/services/networking/atftpd.nix"],"default":[],"description":"Extra command line arguments to pass to atftp.\n","example":{"_type":"literalExample","text":"[ \"--bind-address 192.168.9.1\"\n  \"--verbose=7\"\n]\n"},"readOnly":false,"type":"list of strings"},"services.atftpd.root":{"declarations":["nixos/modules/services/networking/atftpd.nix"],"default":"/srv/tftp","description":"Document root directory for the atftpd.\n","readOnly":false,"type":"path"},"services.autofs.autoMaster":{"declarations":["nixos/modules/services/misc/autofs.nix"],"description":"\n          file contents of /etc/auto.master. See man auto.master\n          See man 5 auto.master and man 5 autofs.\n        ","example":{"_type":"literalExample","text":"let\n  mapConf = pkgs.writeText \"auto\" ''\n   kernel    -ro,soft,intr       ftp.kernel.org:/pub/linux\n   boot      -fstype=ext2        :/dev/hda1\n   windoze   -fstype=smbfs       ://windoze/c\n   removable -fstype=ext2        :/dev/hdd\n   cd        -fstype=iso9660,ro  :/dev/hdc\n   floppy    -fstype=auto        :/dev/fd0\n   server    -rw,hard,intr       / -ro myserver.me.org:/ \\\n                                 /usr myserver.me.org:/usr \\\n                                 /home myserver.me.org:/home\n  '';\nin ''\n  /auto file:${mapConf}\n''\n"},"readOnly":false,"type":"string"},"services.autofs.debug":{"declarations":["nixos/modules/services/misc/autofs.nix"],"default":false,"description":"\n        pass -d and -7 to automount and write log to /var/log/autofs\n        ","readOnly":false,"type":"unspecified"},"services.autofs.enable":{"declarations":["nixos/modules/services/misc/autofs.nix"],"default":false,"description":"\n          Mount filesystems on demand. Unmount them automatically.\n          You may also be interested in afuse.\n        ","readOnly":false,"type":"unspecified"},"services.autofs.timeout":{"declarations":["nixos/modules/services/misc/autofs.nix"],"default":600,"description":"Set the global minimum timeout, in seconds, until directories are unmounted","readOnly":false,"type":"unspecified"},"services.autossh.sessions":{"declarations":["nixos/modules/services/networking/autossh.nix"],"default":[],"description":"List of AutoSSH sessions to start as systemd services. Each service is\nnamed 'autossh-{session.name}'.\n","example":[{"extraArguments":"-N -D4343 billremote@socks.host.net","monitoringPort":20000,"name":"socks-peer","user":"bill"}],"readOnly":false,"type":"list of submodules"},"services.autossh.sessions.*.extraArguments":{"declarations":["nixos/modules/services/networking/autossh.nix"],"description":"Arguments to be passed to AutoSSH and retransmitted to SSH\nprocess. Some meaningful options include -N (don't run remote\ncommand), -D (open SOCKS proxy on local port), -R (forward\nremote port), -L (forward local port), -v (Enable debug). Check\nssh manual for the complete list.\n","example":"-N -D4343 bill@socks.example.net","readOnly":false,"type":"string"},"services.autossh.sessions.*.monitoringPort":{"declarations":["nixos/modules/services/networking/autossh.nix"],"default":0,"description":"Port to be used by AutoSSH for peer monitoring. Note, that\nAutoSSH also uses mport+1. Value of 0 disables the keep-alive\nstyle monitoring\n","example":20000,"readOnly":false,"type":"integer"},"services.autossh.sessions.*.name":{"declarations":["nixos/modules/services/networking/autossh.nix"],"description":"Name of the local AutoSSH session","example":"socks-peer","readOnly":false,"type":"string"},"services.autossh.sessions.*.user":{"declarations":["nixos/modules/services/networking/autossh.nix"],"description":"Name of the user the AutoSSH session should run as","example":"bill","readOnly":false,"type":"string"},"services.avahi.browseDomains":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":[],"description":"List of non-local DNS domains to be browsed.\n","example":["0pointer.de","zeroconf.org"],"readOnly":false,"type":"unspecified"},"services.avahi.domainName":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":"local","description":"Domain name for all advertisements.\n","readOnly":false,"type":"string"},"services.avahi.enable":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":false,"description":"Whether to run the Avahi daemon, which allows Avahi clients\nto use Avahi's service discovery facilities and also allows\nthe local machine to advertise its presence and services\n(through the mDNS responder implemented by `avahi-daemon').\n","readOnly":false,"type":"unspecified"},"services.avahi.hostName":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"description":"Host name advertised on the LAN. If not set, avahi will use the value\nof config.networking.hostName.\n","readOnly":false,"type":"string"},"services.avahi.interfaces":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":null,"description":"List of network interfaces that should be used by the <command>avahi-daemon</command>.\nOther interfaces will be ignored. If <literal>null</literal> all local interfaces\nexcept loopback and point-to-point will be used.\n","readOnly":false,"type":"null or list of strings"},"services.avahi.ipv4":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":true,"description":"Whether to use IPv4","readOnly":false,"type":"unspecified"},"services.avahi.ipv6":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":false,"description":"Whether to use IPv6","readOnly":false,"type":"unspecified"},"services.avahi.nssmdns":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":false,"description":"Whether to enable the mDNS NSS (Name Service Switch) plug-in.\nEnabling it allows applications to resolve names in the `.local'\ndomain by transparently querying the Avahi daemon.\n","readOnly":false,"type":"unspecified"},"services.avahi.publish.addresses":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":false,"description":"Whether to register mDNS address records for all local IP addresses.","readOnly":false,"type":"unspecified"},"services.avahi.publish.domain":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":false,"description":"Whether to announce the locally used domain name for browsing by other hosts.","readOnly":false,"type":"unspecified"},"services.avahi.publish.enable":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":false,"description":"Whether to allow publishing in general.","readOnly":false,"type":"unspecified"},"services.avahi.publish.hinfo":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":false,"description":"Whether to register an mDNS HINFO record which contains information about the\nlocal operating system and CPU.\n","readOnly":false,"type":"unspecified"},"services.avahi.publish.userServices":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":false,"description":"Whether to publish user services. Will set <literal>addresses=true</literal>.","readOnly":false,"type":"unspecified"},"services.avahi.publish.workstation":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":false,"description":"Whether to register a service of type \"_workstation._tcp\" on the local LAN.","readOnly":false,"type":"unspecified"},"services.avahi.wideArea":{"declarations":["nixos/modules/services/networking/avahi-daemon.nix"],"default":true,"description":"Whether to enable wide-area service discovery.","readOnly":false,"type":"unspecified"},"services.awstats.enable":{"declarations":["nixos/modules/services/logging/awstats.nix"],"default":false,"description":"Enable the awstats program (but not service).\nCurrently only simple httpd (Apache) configs are supported,\nand awstats plugins may not work correctly.\n","readOnly":false,"type":"boolean"},"services.awstats.extraConfig":{"declarations":["nixos/modules/services/logging/awstats.nix"],"default":"","description":"Extra configuration to be appendend to awstats.conf.","readOnly":false,"type":"string"},"services.awstats.service.enable":{"declarations":["nixos/modules/services/logging/awstats.nix"],"default":false,"description":"Enable the awstats web service. This switches on httpd.","readOnly":false,"type":"boolean"},"services.awstats.service.urlPrefix":{"declarations":["nixos/modules/services/logging/awstats.nix"],"default":"/awstats","description":"The URL prefix under which the awstats service appears.","readOnly":false,"type":"string"},"services.awstats.updateAt":{"declarations":["nixos/modules/services/logging/awstats.nix"],"default":null,"description":"Specification of the time at which awstats will get updated.\n(in the format described by <citerefentry>\n  <refentrytitle>systemd.time</refentrytitle>\n  <manvolnum>5</manvolnum></citerefentry>)\n","example":"hourly","readOnly":false,"type":"null or string"},"services.awstats.vardir":{"declarations":["nixos/modules/services/logging/awstats.nix"],"default":"/var/lib/awstats","description":"The directory where variable awstats data will be stored.","readOnly":false,"type":"path"},"services.bacula-dir.enable":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":false,"description":"Whether to enable Bacula Director Daemon.\n","readOnly":false,"type":"boolean"},"services.bacula-dir.extraConfig":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration for Bacula Director Daemon.\n","example":"TODO\n","readOnly":false,"type":"string"},"services.bacula-dir.extraDirectorConfig":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Director directive.\n","example":"Maximum Concurrent Jobs = 20;\nHeartbeat Interval = 30;\n","readOnly":false,"type":"unspecified"},"services.bacula-dir.extraMessagesConfig":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Messages directive.\n","example":"console = all\n","readOnly":false,"type":"unspecified"},"services.bacula-dir.name":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"nixos-dir","description":"The director name used by the system administrator. This directive is required.\n","readOnly":false,"type":"unspecified"},"services.bacula-dir.password":{"declarations":["nixos/modules/services/backup/bacula.nix"],"description":"Specifies the password that must be supplied for a Director.\n","readOnly":false,"type":"unspecified"},"services.bacula-dir.port":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":9101,"description":"Specify the port (a positive integer) on which the Director daemon will listen for Bacula Console connections. This same port number must be specified in the Director resource of the Console configuration file. The default is 9101, so normally this directive need not be specified. This directive should not be used if you specify DirAddresses (N.B plural) directive.\n","readOnly":false,"type":"integer"},"services.bacula-fd.director":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":{},"description":"This option defines director resources in Bacula File Daemon.\n","readOnly":false,"type":"attribute set of submodules"},"services.bacula-fd.director.<name>.monitor":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"no","description":"If Monitor is set to no (default), this director will have full \n","example":"yes","readOnly":false,"type":"unspecified"},"services.bacula-fd.director.<name>.password":{"declarations":["nixos/modules/services/backup/bacula.nix"],"description":"Specifies the password that must be supplied for a Director to b\n","readOnly":false,"type":"unspecified"},"services.bacula-fd.enable":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":false,"description":"Whether to enable the Bacula File Daemon.\n","readOnly":false,"type":"boolean"},"services.bacula-fd.extraClientConfig":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Client directive.\n","example":"Maximum Concurrent Jobs = 20;\nHeartbeat Interval = 30;\n","readOnly":false,"type":"unspecified"},"services.bacula-fd.extraMessagesConfig":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Messages directive.\n","example":"console = all\n","readOnly":false,"type":"unspecified"},"services.bacula-fd.name":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"nixos-fd","description":"The client name that must be used by the Director when connecting.\nGenerally, it is a good idea to use a name related to the machine\nso that error messages can be easily identified if you have multiple\nClients. This directive is required.\n","readOnly":false,"type":"unspecified"},"services.bacula-fd.port":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":9102,"description":"This specifies the port number on which the Client listens for\nDirector connections. It must agree with the FDPort specified in\nthe Client resource of the Director's configuration file.\n","readOnly":false,"type":"integer"},"services.bacula-sd.device":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":{},"description":"This option defines Device resources in Bacula Storage Daemon.\n","readOnly":false,"type":"attribute set of submodules"},"services.bacula-sd.device.<name>.archiveDevice":{"declarations":["nixos/modules/services/backup/bacula.nix"],"description":"The specified name-string gives the system file name of the storage device managed by this storage daemon. This will usually be the device file name of a removable storage device (tape drive), for example \" /dev/nst0\" or \"/dev/rmt/0mbn\". For a DVD-writer, it will be for example /dev/hdc. It may also be a directory name if you are archiving to disk storage.\n","readOnly":false,"type":"unspecified"},"services.bacula-sd.device.<name>.extraDeviceConfig":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Device directive.\n","example":"LabelMedia = yes\nRandom Access = no\nAutomaticMount = no\nRemovableMedia = no\nMaximumOpenWait = 60\nAlwaysOpen = no\n","readOnly":false,"type":"unspecified"},"services.bacula-sd.device.<name>.mediaType":{"declarations":["nixos/modules/services/backup/bacula.nix"],"description":"The specified name-string names the type of media supported by this device, for example, \"DLT7000\". Media type names are arbitrary in that you set them to anything you want, but they must be known to the volume database to keep track of which storage daemons can read which volumes. In general, each different storage type should have a unique Media Type associated with it. The same name-string must appear in the appropriate Storage resource definition in the Director's configuration file.\n","readOnly":false,"type":"unspecified"},"services.bacula-sd.director":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":{},"description":"This option defines Director resources in Bacula Storage Daemon.\n","readOnly":false,"type":"attribute set of submodules"},"services.bacula-sd.director.<name>.monitor":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"no","description":"If Monitor is set to no (default), this director will have full \n","example":"yes","readOnly":false,"type":"unspecified"},"services.bacula-sd.director.<name>.password":{"declarations":["nixos/modules/services/backup/bacula.nix"],"description":"Specifies the password that must be supplied for a Director to b\n","readOnly":false,"type":"unspecified"},"services.bacula-sd.enable":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":false,"description":"Whether to enable Bacula Storage Daemon.\n","readOnly":false,"type":"boolean"},"services.bacula-sd.extraMessagesConfig":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Messages directive.\n","example":"console = all\n","readOnly":false,"type":"unspecified"},"services.bacula-sd.extraStorageConfig":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"","description":"Extra configuration to be passed in Storage directive.\n","example":"Maximum Concurrent Jobs = 20;\nHeartbeat Interval = 30;\n","readOnly":false,"type":"unspecified"},"services.bacula-sd.name":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":"nixos-sd","description":"Specifies the Name of the Storage daemon.\n","readOnly":false,"type":"unspecified"},"services.bacula-sd.port":{"declarations":["nixos/modules/services/backup/bacula.nix"],"default":9103,"description":"Specifies port number on which the Storage daemon listens for Director connections. The default is 9103.\n","readOnly":false,"type":"integer"},"services.bepasty.enable":{"declarations":["nixos/modules/services/misc/bepasty.nix"],"default":false,"description":"Whether to enable Bepasty servers.","example":true,"readOnly":false,"type":"boolean"},"services.bepasty.servers":{"declarations":["nixos/modules/services/misc/bepasty.nix"],"default":{},"description":"configure a number of bepasty servers which will be started with\ngunicorn.\n","readOnly":false,"type":"attribute set of submodules"},"services.bepasty.servers.<name>.bind":{"declarations":["nixos/modules/services/misc/bepasty.nix"],"default":"127.0.0.1:8000","description":"Bind address to be used for this server.\n","example":"0.0.0.0:8000","readOnly":false,"type":"string"},"services.bepasty.servers.<name>.dataDir":{"declarations":["nixos/modules/services/misc/bepasty.nix"],"default":"/var/lib/bepasty/data","description":"Path to the directory where the pastes will be saved to\n","readOnly":false,"type":"string"},"services.bepasty.servers.<name>.defaultPermissions":{"declarations":["nixos/modules/services/misc/bepasty.nix"],"default":"read","description":"default permissions for all unauthenticated accesses.\n","example":"read,create,delete","readOnly":false,"type":"string"},"services.bepasty.servers.<name>.extraConfig":{"declarations":["nixos/modules/services/misc/bepasty.nix"],"default":"","description":"Extra configuration for bepasty server to be appended on the\nconfiguration.\nsee https://bepasty-server.readthedocs.org/en/latest/quickstart.html#configuring-bepasty\nfor all options.\n","example":"PERMISSIONS = {\n  'myadminsecret': 'admin,list,create,read,delete',\n}\nMAX_ALLOWED_FILE_SIZE = 5 * 1000 * 1000\n","readOnly":false,"type":"string"},"services.bepasty.servers.<name>.secretKey":{"declarations":["nixos/modules/services/misc/bepasty.nix"],"default":"","description":"server secret for safe session cookies, must be set.\n","readOnly":false,"type":"string"},"services.bepasty.servers.<name>.workDir":{"declarations":["nixos/modules/services/misc/bepasty.nix"],"default":"/var/lib/bepasty","description":"Path to the working directory (used for config and pidfile).\nDefaults to the users home directory.\n","readOnly":false,"type":"string"},"services.bind.blockedNetworks":{"declarations":["nixos/modules/services/networking/bind.nix"],"default":[],"description":"\n          What networks are just blocked.\n        ","readOnly":false,"type":"unspecified"},"services.bind.cacheNetworks":{"declarations":["nixos/modules/services/networking/bind.nix"],"default":["127.0.0.0/24"],"description":"\n          What networks are allowed to use us as a resolver.\n        ","readOnly":false,"type":"unspecified"},"services.bind.configFile":{"declarations":["nixos/modules/services/networking/bind.nix"],"default":"confFile","description":"\n          Overridable config file to use for named. By default, that\n          generated by nixos.\n        ","readOnly":false,"type":"path"},"services.bind.enable":{"declarations":["nixos/modules/services/networking/bind.nix"],"default":false,"description":"\n          Whether to enable BIND domain name server.\n        ","readOnly":false,"type":"unspecified"},"services.bind.extraConfig":{"declarations":["nixos/modules/services/networking/bind.nix"],"default":"","description":"\n          Extra lines to be added verbatim to the generated named configuration file.\n        ","readOnly":false,"type":"string"},"services.bind.forwarders":{"declarations":["nixos/modules/services/networking/bind.nix"],"default":[],"description":"\n          List of servers we should forward requests to.\n        ","readOnly":false,"type":"unspecified"},"services.bind.ipv4Only":{"declarations":["nixos/modules/services/networking/bind.nix"],"default":false,"description":"\n          Only use ipv4, even if the host supports ipv6.\n        ","readOnly":false,"type":"unspecified"},"services.bind.zones":{"declarations":["nixos/modules/services/networking/bind.nix"],"default":[],"description":"\n          List of zones we claim authority over.\n            master=false means slave server; slaves means addresses\n           who may request zone transfer.\n        ","example":[{"file":"/var/dns/example.com","master":false,"masters":["192.168.0.1"],"name":"example.com","slaves":[]}],"readOnly":false,"type":"unspecified"},"services.bird.config":{"declarations":["nixos/modules/services/networking/bird.nix"],"description":"BIRD Internet Routing Daemon configuration file.\n<link xlink:href='http://bird.network.cz/'/>\n","readOnly":false,"type":"string"},"services.bird.enable":{"declarations":["nixos/modules/services/networking/bird.nix"],"default":false,"description":"Whether to enable BIRD Internet Routing Daemon.","example":true,"readOnly":false,"type":"boolean"},"services.bird.group":{"declarations":["nixos/modules/services/networking/bird.nix"],"default":"bird","description":"BIRD Internet Routing Daemon group.\n","readOnly":false,"type":"string"},"services.bird.user":{"declarations":["nixos/modules/services/networking/bird.nix"],"default":"bird","description":"BIRD Internet Routing Daemon user.\n","readOnly":false,"type":"string"},"services.bitlbee.authMode":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"Open","description":"The following authentication modes are available:\n  Open -- Accept connections from anyone, use NickServ for user authentication.\n  Closed -- Require authorization (using the PASS command during login) before allowing the user to connect at all.\n  Registered -- Only allow registered users to use this server; this disables the register- and the account command until the user identifies himself.\n","readOnly":false,"type":"one of \"Open\", \"Closed\", \"Registered\""},"services.bitlbee.configDir":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"/var/lib/bitlbee","description":"Specify an alternative directory to store all the per-user configuration\nfiles.\n","readOnly":false,"type":"path"},"services.bitlbee.enable":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":false,"description":"Whether to run the BitlBee IRC to other chat network gateway.\nRunning it allows you to access the MSN, Jabber, Yahoo! and ICQ chat\nnetworks via an IRC client.\n","readOnly":false,"type":"unspecified"},"services.bitlbee.extraDefaults":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"Will be inserted in the Default section of the config file.\n","readOnly":false,"type":"unspecified"},"services.bitlbee.extraSettings":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"Will be inserted in the Settings section of the config file.\n","readOnly":false,"type":"unspecified"},"services.bitlbee.hostName":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"Normally, BitlBee gets a hostname using getsockname(). If you have a nicer\nalias for your BitlBee daemon, you can set it here and BitlBee will identify\nitself with that name instead.\n","readOnly":false,"type":"string"},"services.bitlbee.interface":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"127.0.0.1","description":"The interface the BitlBee deamon will be listening to.  If `127.0.0.1',\nonly clients on the local host can connect to it; if `0.0.0.0', clients\ncan access it from any network interface.\n","readOnly":false,"type":"unspecified"},"services.bitlbee.plugins":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":[],"description":"The list of bitlbee plugins to install.\n","example":{"_type":"literalExample","text":"[ pkgs.bitlbee-facebook ]"},"readOnly":false,"type":"list of packages"},"services.bitlbee.portNumber":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":6667,"description":"Number of the port BitlBee will be listening to.\n","readOnly":false,"type":"unspecified"},"services.bitlbee.protocols":{"declarations":["nixos/modules/services/networking/bitlbee.nix"],"default":"","description":"This option allows to remove the support of protocol, even if compiled\nin. If nothing is given, there are no restrictions.\n","readOnly":false,"type":"string"},"services.boinc.allowRemoteGuiRpc":{"declarations":["nixos/modules/services/computing/boinc/client.nix"],"default":false,"description":"If set to true, any remote host can connect to and control this BOINC\nclient (subject to password authentication). If instead set to false,\nonly the hosts listed in <varname>dataDir</varname>/remote_hosts.cfg will be allowed to\nconnect.\n\nSee also: <link xlink:href=\"http://boinc.berkeley.edu/wiki/Controlling_BOINC_remotely#Remote_access\"/>\n","example":true,"readOnly":false,"type":"boolean"},"services.boinc.dataDir":{"declarations":["nixos/modules/services/computing/boinc/client.nix"],"default":"/var/lib/boinc","description":"The directory in which to store BOINC's configuration and data files.\n","readOnly":false,"type":"path"},"services.boinc.enable":{"declarations":["nixos/modules/services/computing/boinc/client.nix"],"default":false,"description":"Whether to enable the BOINC distributed computing client. If this\noption is set to true, the boinc_client daemon will be run as a\nbackground service. The boinccmd command can be used to control the\ndaemon.\n","example":true,"readOnly":false,"type":"boolean"},"services.boinc.package":{"declarations":["nixos/modules/services/computing/boinc/client.nix"],"default":"pkgs.boinc","description":"Which BOINC package to use.\n","readOnly":false,"type":"package"},"services.bosun.checkFrequency":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":"5m","description":"Bosun's check frequency\n","readOnly":false,"type":"string"},"services.bosun.enable":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":false,"description":"Whether to run bosun.\n","readOnly":false,"type":"boolean"},"services.bosun.extraConfig":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":"","description":"Extra configuration options for Bosun. You should describe your\ndesired templates, alerts, macros, etc through this configuration\noption.\n\nA detailed description of the supported syntax can be found at-spi2-atk\nhttp://bosun.org/configuration.html\n","readOnly":false,"type":"string"},"services.bosun.group":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":"bosun","description":"Group account under which bosun runs.\n","readOnly":false,"type":"string"},"services.bosun.influxHost":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":null,"description":"Host and port of the influxdb database.\n","example":"localhost:8086","readOnly":false,"type":"null or string"},"services.bosun.ledisDir":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":"/var/lib/bosun/ledis_data","description":"Path to bosun's ledis data dir\n","readOnly":false,"type":"path"},"services.bosun.listenAddress":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":":8070","description":"The host address and port that bosun's web interface will listen on.\n","readOnly":false,"type":"string"},"services.bosun.opentsdbHost":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":"localhost:4242","description":"Host and port of the OpenTSDB database that stores bosun data.\nTo disable opentsdb you can pass null as parameter.\n","readOnly":false,"type":"null or string"},"services.bosun.package":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":"pkgs.bosun","description":"bosun binary to use.\n","example":{"_type":"literalExample","text":"pkgs.bosun"},"readOnly":false,"type":"package"},"services.bosun.stateFile":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":"/var/lib/bosun/bosun.state","description":"Path to bosun's state file.\n","readOnly":false,"type":"path"},"services.bosun.user":{"declarations":["nixos/modules/services/monitoring/bosun.nix"],"default":"bosun","description":"User account under which bosun runs.\n","readOnly":false,"type":"string"},"services.brltty.enable":{"declarations":["nixos/modules/services/hardware/brltty.nix"],"default":false,"description":"Whether to enable the BRLTTY daemon.","readOnly":false,"type":"boolean"},"services.btsync.apiKey":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"API key, which enables the developer API.","readOnly":false,"type":"string"},"services.btsync.checkForUpdates":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":true,"description":"Determines whether to check for updates and alert the user\nabout them in the UI.\n","readOnly":false,"type":"boolean"},"services.btsync.deviceName":{"declarations":["nixos/modules/services/networking/btsync.nix"],"description":"Name of the Bittorrent Sync device.\n","example":"Voltron","readOnly":false,"type":"string"},"services.btsync.directoryRoot":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"Default directory to add folders in the web UI.","example":"/media","readOnly":false,"type":"string"},"services.btsync.downloadLimit":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":0,"description":"Download speed limit. 0 is unlimited (default).\n","example":1024,"readOnly":false,"type":"integer"},"services.btsync.enable":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":false,"description":"If enabled, start the Bittorrent Sync daemon. Once enabled, you can\ninteract with the service through the Web UI, or configure it in your\nNixOS configuration. Enabling the <literal>btsync</literal> service\nalso installs a systemd user unit which can be used to start\nuser-specific copies of the daemon. Once installed, you can use\n<literal>systemctl --user start btsync</literal> as your user to start\nthe daemon using the configuration file located at\n<literal>$HOME/.config/btsync.conf</literal>.\n","readOnly":false,"type":"boolean"},"services.btsync.enableWebUI":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":false,"description":"Enable Web UI for administration. Bound to the specified\n<literal>httpListenAddress</literal> and\n<literal>httpListenPort</literal>.\n","readOnly":false,"type":"boolean"},"services.btsync.encryptLAN":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":true,"description":"Encrypt LAN data.","readOnly":false,"type":"boolean"},"services.btsync.httpListenAddr":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"0.0.0.0","description":"HTTP address to bind to.\n","example":"1.2.3.4","readOnly":false,"type":"string"},"services.btsync.httpListenPort":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":9000,"description":"HTTP port to bind on.\n","readOnly":false,"type":"integer"},"services.btsync.httpLogin":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"HTTP web login username.\n","example":"allyourbase","readOnly":false,"type":"string"},"services.btsync.httpPass":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"","description":"HTTP web login password.\n","example":"arebelongtous","readOnly":false,"type":"string"},"services.btsync.listeningPort":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":0,"description":"Listening port. Defaults to 0 which randomizes the port.\n","example":44444,"readOnly":false,"type":"integer"},"services.btsync.package":{"declarations":["nixos/modules/services/networking/btsync.nix"],"description":"Branch of bittorrent sync to use.\n","example":{"_type":"literalExample","text":"pkgs.bittorrentSync20"},"readOnly":false,"type":"package"},"services.btsync.sharedFolders":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":[],"description":"Shared folder list. If enabled, web UI must be\ndisabled. Secrets can be generated using <literal>btsync\n--generate-secret</literal>. Note that this secret will be\nput inside the Nix store, so it is realistically not very\nsecret.\n\nIf you would like to be able to modify the contents of this\ndirectories, it is recommended that you make your user a\nmember of the <literal>btsync</literal> group.\n\nDirectories in this list should be in the\n<literal>btsync</literal> group, and that group must have\nwrite access to the directory. It is also recommended that\n<literal>chmod g+s</literal> is applied to the directory\nso that any sub directories created will also belong to\nthe <literal>btsync</literal> group. Also,\n<literal>setfacl -d -m group:btsync:rwx</literal> and\n<literal>setfacl -m group:btsync:rwx</literal> should also\nbe applied so that the sub directories are writable by\nthe group.\n","example":[{"directory":"/home/user/sync_test","knownHosts":["192.168.1.2:4444","192.168.1.3:4444"],"searchLAN":true,"secret":"AHMYFPCQAHBM7LQPFXQ7WV6Y42IGUXJ5Y","useDHT":false,"useRelayServer":true,"useSyncTrash":true,"useTracker":true}],"readOnly":false,"type":"unspecified"},"services.btsync.storagePath":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":"/var/lib/btsync/","description":"Where BitTorrent Sync will store it's database files (containing\nthings like username info and licenses). Generally, you should not\nneed to ever change this.\n","example":"/var/lib/btsync/","readOnly":false,"type":"path"},"services.btsync.uploadLimit":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":0,"description":"Upload speed limit. 0 is unlimited (default).\n","example":1024,"readOnly":false,"type":"integer"},"services.btsync.useUpnp":{"declarations":["nixos/modules/services/networking/btsync.nix"],"default":true,"description":"Use Universal Plug-n-Play (UPnP)\n","readOnly":false,"type":"boolean"},"services.buildkite-agent.enable":{"declarations":["nixos/modules/services/continuous-integration/buildkite-agent.nix"],"default":false,"description":"Whether to enable buildkite-agent.","example":true,"readOnly":false,"type":"boolean"},"services.buildkite-agent.meta-data":{"declarations":["nixos/modules/services/continuous-integration/buildkite-agent.nix"],"default":"","description":"Meta data for the agent.\n","readOnly":false,"type":"string"},"services.buildkite-agent.name":{"declarations":["nixos/modules/services/continuous-integration/buildkite-agent.nix"],"description":"The name of the agent.\n","readOnly":false,"type":"string"},"services.buildkite-agent.openssh.privateKey":{"declarations":["nixos/modules/services/continuous-integration/buildkite-agent.nix"],"description":"Private agent key.\n","readOnly":false,"type":"string"},"services.buildkite-agent.openssh.publicKey":{"declarations":["nixos/modules/services/continuous-integration/buildkite-agent.nix"],"description":"Public agent key.\n","readOnly":false,"type":"string"},"services.buildkite-agent.token":{"declarations":["nixos/modules/services/continuous-integration/buildkite-agent.nix"],"description":"The token from your Buildkite \"Agents\" page.\n","readOnly":false,"type":"string"},"services.cachefilesd.cacheDir":{"declarations":["nixos/modules/services/network-filesystems/cachefilesd.nix"],"default":"/var/cache/fscache","description":"Directory to contain filesystem cache.","readOnly":false,"type":"string"},"services.cachefilesd.enable":{"declarations":["nixos/modules/services/network-filesystems/cachefilesd.nix"],"default":false,"description":"Whether to enable cachefilesd network filesystems caching daemon.","readOnly":false,"type":"boolean"},"services.cachefilesd.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/cachefilesd.nix"],"default":"","description":"Additional configuration file entries. See cachefilesd.conf(5) for more information.","example":"brun 10%","readOnly":false,"type":"string"},"services.caddy.agree":{"declarations":["nixos/modules/services/web-servers/caddy.nix"],"default":false,"description":"Agree to Let's Encrypt Subscriber Agreement","example":true,"readOnly":false,"type":"boolean"},"services.caddy.ca":{"declarations":["nixos/modules/services/web-servers/caddy.nix"],"default":"https://acme-v01.api.letsencrypt.org/directory","description":"Certificate authority ACME server. The default (Let's Encrypt production server) should be fine for most people.","example":"https://acme-staging.api.letsencrypt.org/directory","readOnly":false,"type":"string"},"services.caddy.config":{"declarations":["nixos/modules/services/web-servers/caddy.nix"],"description":"Verbatim Caddyfile to use","readOnly":false,"type":"unspecified"},"services.caddy.dataDir":{"declarations":["nixos/modules/services/web-servers/caddy.nix"],"default":"/var/lib/caddy","description":"The data directory, for storing certificates.","readOnly":false,"type":"path"},"services.caddy.email":{"declarations":["nixos/modules/services/web-servers/caddy.nix"],"default":"","description":"Email address (for Let's Encrypt certificate)","readOnly":false,"type":"string"},"services.caddy.enable":{"declarations":["nixos/modules/services/web-servers/caddy.nix"],"default":false,"description":"Whether to enable Caddy web server.","example":true,"readOnly":false,"type":"boolean"},"services.cadvisor.enable":{"declarations":["nixos/modules/services/monitoring/cadvisor.nix"],"default":false,"description":"Whether to enable cadvisor service.","readOnly":false,"type":"boolean"},"services.cadvisor.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.cadvisor.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.cadvisor.listenAddress":{"declarations":["nixos/modules/services/monitoring/cadvisor.nix"],"default":"127.0.0.1","description":"Cadvisor listening host","readOnly":false,"type":"string"},"services.cadvisor.port":{"declarations":["nixos/modules/services/monitoring/cadvisor.nix"],"default":8080,"description":"Cadvisor listening port","readOnly":false,"type":"integer"},"services.cadvisor.storageDriver":{"declarations":["nixos/modules/services/monitoring/cadvisor.nix"],"default":null,"description":"Cadvisor storage driver.","example":"influxdb","readOnly":false,"type":"null or string"},"services.cadvisor.storageDriverDb":{"declarations":["nixos/modules/services/monitoring/cadvisor.nix"],"default":"root","description":"Cadvisord storage driver database name.","readOnly":false,"type":"string"},"services.cadvisor.storageDriverHost":{"declarations":["nixos/modules/services/monitoring/cadvisor.nix"],"default":"localhost:8086","description":"Cadvisor storage driver host.","readOnly":false,"type":"string"},"services.cadvisor.storageDriverPassword":{"declarations":["nixos/modules/services/monitoring/cadvisor.nix"],"default":"root","description":"Cadvisor storage driver password.","readOnly":false,"type":"string"},"services.cadvisor.storageDriverSecure":{"declarations":["nixos/modules/services/monitoring/cadvisor.nix"],"default":false,"description":"Cadvisor storage driver, enable secure communication.","readOnly":false,"type":"boolean"},"services.cadvisor.storageDriverUser":{"declarations":["nixos/modules/services/monitoring/cadvisor.nix"],"default":"root","description":"Cadvisor storage driver username.","readOnly":false,"type":"string"},"services.calibre-server.enable":{"declarations":["nixos/modules/services/misc/calibre-server.nix"],"default":false,"description":"Whether to enable calibre-server.","example":true,"readOnly":false,"type":"boolean"},"services.calibre-server.libraryDir":{"declarations":["nixos/modules/services/misc/calibre-server.nix"],"description":"The directory where the Calibre library to serve is.\n","readOnly":false,"type":"path"},"services.canto-daemon.enable":{"declarations":["nixos/modules/services/misc/canto-daemon.nix"],"default":false,"description":"Whether to enable the canto RSS daemon.","readOnly":false,"type":"boolean"},"services.cfdyndns.apikey":{"declarations":["nixos/modules/services/misc/cfdyndns.nix"],"description":"The API Key to use to authenticate to CloudFlare.\n","readOnly":false,"type":"string"},"services.cfdyndns.email":{"declarations":["nixos/modules/services/misc/cfdyndns.nix"],"description":"The email address to use to authenticate to CloudFlare.\n","readOnly":false,"type":"string"},"services.cfdyndns.enable":{"declarations":["nixos/modules/services/misc/cfdyndns.nix"],"default":false,"description":"Whether to enable Cloudflare Dynamic DNS Client.","example":true,"readOnly":false,"type":"boolean"},"services.cfdyndns.records":{"declarations":["nixos/modules/services/misc/cfdyndns.nix"],"default":[],"description":"The records to update in CloudFlare.\n","example":["host.tld"],"readOnly":false,"type":"list of strings"},"services.cgmanager.enable":{"declarations":["nixos/modules/services/system/cgmanager.nix"],"default":false,"description":"Whether to enable cgmanager.","example":true,"readOnly":false,"type":"boolean"},"services.cgminer.config":{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":{},"description":"Additional config","example":{"auto-fan":true,"auto-gpu":true,"expiry":120,"failover-only":true,"gpu-threads":2,"log":5,"queue":1,"scan-time":60,"temp-histeresys":3},"readOnly":false,"type":"unspecified"},"services.cgminer.enable":{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":false,"description":"Whether to enable cgminer, an ASIC/FPGA/GPU miner for bitcoin and\nlitecoin.\n","readOnly":false,"type":"unspecified"},"services.cgminer.hardware":{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":[],"description":"List of config options for every GPU","example":[{"gpu-engine":"0-985","gpu-fan":"0-85","gpu-memclock":860,"gpu-powertune":20,"intensity":9,"temp-cutoff":95,"temp-overheat":85,"temp-target":75},{"gpu-engine":"0-950","gpu-fan":"0-85","gpu-memclock":825,"gpu-powertune":20,"intensity":9,"temp-cutoff":95,"temp-overheat":85,"temp-target":75}],"readOnly":false,"type":"unspecified"},"services.cgminer.package":{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":"pkgs.cgminer","description":"Which cgminer derivation to use.","readOnly":false,"type":"package"},"services.cgminer.pools":{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":[],"description":"List of pools where to mine","example":[{"password":"X","url":"http://p2pool.org:9332","username":"17EUZxTvs9uRmPsjPZSYUU3zCz9iwstudk"}],"readOnly":false,"type":"unspecified"},"services.cgminer.user":{"declarations":["nixos/modules/services/misc/cgminer.nix"],"default":"cgminer","description":"User account under which cgminer runs","readOnly":false,"type":"unspecified"},"services.charybdis.config":{"declarations":["nixos/modules/services/networking/charybdis.nix"],"description":"Charybdis IRC daemon configuration file.\n","readOnly":false,"type":"string"},"services.charybdis.enable":{"declarations":["nixos/modules/services/networking/charybdis.nix"],"default":false,"description":"Whether to enable Charybdis IRC daemon.","example":true,"readOnly":false,"type":"boolean"},"services.charybdis.group":{"declarations":["nixos/modules/services/networking/charybdis.nix"],"default":"ircd","description":"Charybdis IRC daemon group.\n","readOnly":false,"type":"string"},"services.charybdis.statedir":{"declarations":["nixos/modules/services/networking/charybdis.nix"],"default":"/var/lib/charybdis","description":"Location of the state directory of charybdis.\n","readOnly":false,"type":"string"},"services.charybdis.user":{"declarations":["nixos/modules/services/networking/charybdis.nix"],"default":"ircd","description":"Charybdis IRC daemon user.\n","readOnly":false,"type":"string"},"services.chronos.enable":{"declarations":["nixos/modules/services/scheduling/chronos.nix"],"default":false,"description":"Whether to enable graphite web frontend.","readOnly":false,"type":"boolean"},"services.chronos.httpPort":{"declarations":["nixos/modules/services/scheduling/chronos.nix"],"default":4400,"description":"Chronos listening port","readOnly":false,"type":"integer"},"services.chronos.master":{"declarations":["nixos/modules/services/scheduling/chronos.nix"],"default":"zk://localhost:2181/mesos","description":"Chronos mesos master zookeeper address","readOnly":false,"type":"string"},"services.chronos.zookeeperHosts":{"declarations":["nixos/modules/services/scheduling/chronos.nix"],"default":["localhost:2181"],"description":"Chronos mesos zookepper addresses","readOnly":false,"type":"list of strings"},"services.chrony.enable":{"declarations":["nixos/modules/services/networking/chrony.nix"],"default":false,"description":"Whether to synchronise your machine's time using chrony.\nMake sure you disable NTP if you enable this service.\n","readOnly":false,"type":"unspecified"},"services.chrony.extraConfig":{"declarations":["nixos/modules/services/networking/chrony.nix"],"default":"","description":"Extra configuration directives that should be added to\n<literal>chrony.conf</literal>\n","readOnly":false,"type":"string"},"services.chrony.initstepslew":{"declarations":["nixos/modules/services/networking/chrony.nix"],"default":{"enabled":true,"servers":["0.nixos.pool.ntp.org","1.nixos.pool.ntp.org","2.nixos.pool.ntp.org","3.nixos.pool.ntp.org"],"threshold":1000},"description":"Allow chronyd to make a rapid measurement of the system clock error at\nboot time, and to correct the system clock by stepping before normal\noperation begins.\n","readOnly":false,"type":"unspecified"},"services.chrony.servers":{"declarations":["nixos/modules/services/networking/chrony.nix"],"default":["0.nixos.pool.ntp.org","1.nixos.pool.ntp.org","2.nixos.pool.ntp.org","3.nixos.pool.ntp.org"],"description":"The set of NTP servers from which to synchronise.\n","readOnly":false,"type":"unspecified"},"services.cjdns.ETHInterface.beacon":{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":2,"description":"Auto-connect to other cjdns nodes on the same network.\nOptions:\n  0: Disabled.\n  1: Accept beacons, this will cause cjdns to accept incoming\n     beacon messages and try connecting to the sender.\n  2: Accept and send beacons, this will cause cjdns to broadcast\n     messages on the local network which contain a randomly\n     generated per-session password, other nodes which have this\n     set to 1 or 2 will hear the beacon messages and connect\n     automatically.\n","readOnly":false,"type":"integer"},"services.cjdns.ETHInterface.bind":{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":"","description":"Bind to this device for native ethernet operation.\n<literal>all</literal> is a pseudo-name which will try to connect to all devices.\n","example":"eth0","readOnly":false,"type":"string"},"services.cjdns.ETHInterface.connectTo":{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":{},"description":"Credentials for connecting look similar to UDP credientials\nexcept they begin with the mac address.\n","example":{"01:02:03:04:05:06":{"password":"5kG15EfpdcKNX3f2GSQ0H1HC7yIfxoCoImnO5FHM","publicKey":"371zpkgs8ss387tmr81q04mp0hg1skb51hw34vk1cq644mjqhup0.k","user":"foobar"}},"readOnly":false,"type":"attribute set of attribute set of stringss"},"services.cjdns.UDPInterface.bind":{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":"","description":"Address and port to bind UDP tunnels to.\n","example":"192.168.1.32:43211","readOnly":false,"type":"string"},"services.cjdns.UDPInterface.connectTo":{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":{},"description":"Credentials for making UDP tunnels.\n","example":{"192.168.1.1:27313":{"password":"5kG15EfpdcKNX3f2GSQ0H1HC7yIfxoCoImnO5FHM","publicKey":"371zpkgs8ss387tmr81q04mp0hg1skb51hw34vk1cq644mjqhup0.k","user":"foobar"}},"readOnly":false,"type":"attribute set of attribute set of stringss"},"services.cjdns.admin.bind":{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":"127.0.0.1:11234","description":"Bind the administration port to this address and port.\n","readOnly":false,"type":"string"},"services.cjdns.authorizedPasswords":{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":[],"description":"Any remote cjdns nodes that offer these passwords on\nconnection will be allowed to route through this node.\n","example":["snyrfgkqsc98qh1y4s5hbu0j57xw5s0","z9md3t4p45mfrjzdjurxn4wuj0d8swv","49275fut6tmzu354pq70sr5b95qq0vj"],"readOnly":false,"type":"list of strings"},"services.cjdns.confFile":{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":null,"description":"Ignore all other cjdns options and load configuration from this file.\n","example":"/etc/cjdroute.conf","readOnly":false,"type":"null or path"},"services.cjdns.enable":{"declarations":["nixos/modules/services/networking/cjdns.nix"],"default":false,"description":"Whether to enable the cjdns network encryption\nand routing engine. A file at /etc/cjdns.keys will\nbe created if it does not exist to contain a random\nsecret key that your IPv6 address will be derived from.\n","readOnly":false,"type":"boolean"},"services.clamav.daemon.enable":{"declarations":["nixos/modules/services/security/clamav.nix"],"default":false,"description":"Whether to enable ClamAV clamd daemon.","example":true,"readOnly":false,"type":"boolean"},"services.clamav.daemon.extraConfig":{"declarations":["nixos/modules/services/security/clamav.nix"],"default":"","description":"Extra configuration for clamd. Contents will be added verbatim to the\nconfiguration file.\n","readOnly":false,"type":"string"},"services.clamav.updater.config":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.clamav.updater.extraConfig</option>.","readOnly":false,"type":"unspecified"},"services.clamav.updater.enable":{"declarations":["nixos/modules/services/security/clamav.nix"],"default":false,"description":"Whether to enable ClamAV freshclam updater.","example":true,"readOnly":false,"type":"boolean"},"services.clamav.updater.extraConfig":{"declarations":["nixos/modules/services/security/clamav.nix"],"default":"","description":"Extra configuration for freshclam. Contents will be added verbatim to the\nconfiguration file.\n","readOnly":false,"type":"string"},"services.clamav.updater.frequency":{"declarations":["nixos/modules/services/security/clamav.nix"],"default":12,"description":"Number of database checks per day.\n","readOnly":false,"type":"integer"},"services.clamav.updater.interval":{"declarations":["nixos/modules/services/security/clamav.nix"],"default":"hourly","description":"How often freshclam is invoked. See systemd.time(7) for more\ninformation about the format.\n","readOnly":false,"type":"string"},"services.cloud-init.enable":{"declarations":["nixos/modules/services/system/cloud-init.nix"],"default":false,"description":"Enable the cloud-init service. This services reads\nconfiguration metadata in a cloud environment and configures\nthe machine according to this metadata.\n\nThis configuration is not completely compatible with the\nNixOS way of doing configuration, as configuration done by\ncloud-init might be overriden by a subsequent nixos-rebuild\ncall. However, some parts of cloud-init fall outside of\nNixOS's responsibility, like filesystem resizing and ssh\npublic key provisioning, and cloud-init is useful for that\nparts. Thus, be wary that using cloud-init in NixOS might\ncome as some cost.\n","readOnly":false,"type":"boolean"},"services.cntlm.domain":{"declarations":["nixos/modules/services/networking/cntlm.nix"],"description":"Proxy account domain/workgroup name.","readOnly":false,"type":"unspecified"},"services.cntlm.enable":{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":false,"description":"Whether to enable the cntlm, which start a local proxy.\n","readOnly":false,"type":"unspecified"},"services.cntlm.extraConfig":{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"","description":"Verbatim contents of <filename>cntlm.conf</filename>.","readOnly":false,"type":"string"},"services.cntlm.netbios_hostname":{"declarations":["nixos/modules/services/networking/cntlm.nix"],"description":"The hostname of your machine.\n","readOnly":false,"type":"string"},"services.cntlm.password":{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":"/etc/cntlm.password","description":"Proxy account password. Note: use chmod 0600 on /etc/cntlm.password for security.","readOnly":false,"type":"string"},"services.cntlm.port":{"declarations":["nixos/modules/services/networking/cntlm.nix"],"default":[3128],"description":"Specifies on which ports the cntlm daemon listens.","readOnly":false,"type":"unspecified"},"services.cntlm.proxy":{"declarations":["nixos/modules/services/networking/cntlm.nix"],"description":"A list of NTLM/NTLMv2 authenticating HTTP proxies.\n\nParent proxy, which requires authentication. The same as proxy on the command-line, can be used more than  once  to  specify  unlimited\nnumber  of  proxies.  Should  one proxy fail, cntlm automatically moves on to the next one. The connect request fails only if the whole\nlist of proxies is scanned and (for each request) and found to be invalid. Command-line takes precedence over the configuration file.\n","readOnly":false,"type":"unspecified"},"services.cntlm.username":{"declarations":["nixos/modules/services/networking/cntlm.nix"],"description":"Proxy account name, without the possibility to include domain name ('at' sign is interpreted literally).\n","readOnly":false,"type":"unspecified"},"services.collectd.autoLoadPlugin":{"declarations":["nixos/modules/services/monitoring/collectd.nix"],"default":false,"description":"Enable plugin autoloading.\n","readOnly":false,"type":"boolean"},"services.collectd.dataDir":{"declarations":["nixos/modules/services/monitoring/collectd.nix"],"default":"/var/lib/collectd","description":"Data directory for collectd agent.\n","readOnly":false,"type":"path"},"services.collectd.enable":{"declarations":["nixos/modules/services/monitoring/collectd.nix"],"default":false,"description":"Whether to enable collectd agent.\n","readOnly":false,"type":"boolean"},"services.collectd.extraConfig":{"declarations":["nixos/modules/services/monitoring/collectd.nix"],"default":"","description":"Extra configuration for collectd.\n","readOnly":false,"type":"string"},"services.collectd.include":{"declarations":["nixos/modules/services/monitoring/collectd.nix"],"default":[],"description":"Additional paths to load config from.\n","readOnly":false,"type":"list of strings"},"services.collectd.package":{"declarations":["nixos/modules/services/monitoring/collectd.nix"],"default":"pkgs.collectd","description":"Which collectd package to use.\n","readOnly":false,"type":"package"},"services.collectd.pidFile":{"declarations":["nixos/modules/services/monitoring/collectd.nix"],"default":"/var/run/collectd.pid","description":"Location of collectd pid file.\n","readOnly":false,"type":"path"},"services.collectd.user":{"declarations":["nixos/modules/services/monitoring/collectd.nix"],"default":"collectd","description":"User under which to run collectd.\n","readOnly":false,"type":"null or string"},"services.colord.enable":{"declarations":["nixos/modules/services/x11/colord.nix"],"default":false,"description":"Whether to enable colord, the color management daemon.","example":true,"readOnly":false,"type":"boolean"},"services.compton.activeOpacity":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":"1.0","description":"Opacity of active windows.\n","example":"0.8","readOnly":false,"type":"string"},"services.compton.backend":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":"glx","description":"Backend to use: <literal>glx</literal> or <literal>xrender</literal>.\n","readOnly":false,"type":"string"},"services.compton.enable":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":false,"description":"Whether of not to enable Compton as the X.org composite manager.\n","example":true,"readOnly":false,"type":"boolean"},"services.compton.extraOptions":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":"","description":"Additional Compton configuration.\n","example":"unredir-if-possible = true;\ndbe = true;\n","readOnly":false,"type":"string"},"services.compton.fade":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":false,"description":"Fade windows in and out.\n","example":true,"readOnly":false,"type":"boolean"},"services.compton.fadeDelta":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":10,"description":"Time between fade animation step (in ms).\n","example":5,"readOnly":false,"type":"integer"},"services.compton.fadeExclude":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":[],"description":"List of condition of windows that should have no shadow.\nSee <literal>compton(1)</literal> man page for more examples.\n","example":["window_type *= 'menu'","name ~= 'Firefox$'","focused = 1"],"readOnly":false,"type":"list of strings"},"services.compton.fadeSteps":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":["0.028","0.03"],"description":"Opacity change between fade steps (in and out).\n","example":["0.04","0.04"],"readOnly":false,"type":"list of strings"},"services.compton.inactiveOpacity":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":"1.0","description":"Opacity of inactive windows.\n","example":"0.8","readOnly":false,"type":"string"},"services.compton.menuOpacity":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":"1.0","description":"Opacity of dropdown and popup menu.\n","example":"0.8","readOnly":false,"type":"string"},"services.compton.package":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":"pkgs.compton","description":"Compton derivation to use.\n","example":{"_type":"literalExample","text":"pkgs.compton"},"readOnly":false,"type":"package"},"services.compton.refreshRate":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":0,"description":"Screen refresh rate (0 = automatically detect).\n","example":60,"readOnly":false,"type":"integer"},"services.compton.shadow":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":false,"description":"Draw window shadows.\n","example":true,"readOnly":false,"type":"boolean"},"services.compton.shadowExclude":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":[],"description":"List of condition of windows that should have no shadow.\nSee <literal>compton(1)</literal> man page for more examples.\n","example":["window_type *= 'menu'","name ~= 'Firefox$'","focused = 1"],"readOnly":false,"type":"list of strings"},"services.compton.shadowOffsets":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":[-15,-15],"description":"Left and right offset for shadows (in pixels).\n","example":[-10,-15],"readOnly":false,"type":"list of integers"},"services.compton.shadowOpacity":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":"0.75","description":"Window shadows opacity (number in range 0 - 1).\n","example":"0.8","readOnly":false,"type":"string"},"services.compton.vSync":{"declarations":["nixos/modules/services/x11/compton.nix"],"default":"none","description":"Enable vertical synchronization using the specified method.\nSee <literal>compton(1)</literal> man page available methods.\n","example":"opengl-swc","readOnly":false,"type":"string"},"services.confd.backend":{"declarations":["nixos/modules/services/misc/confd.nix"],"default":"etcd","description":"Confd config storage backend to use.","readOnly":false,"type":"one of \"etcd\", \"consul\", \"redis\", \"zookeeper\""},"services.confd.confDir":{"declarations":["nixos/modules/services/misc/confd.nix"],"default":"/etc/confd","description":"The path to the confd configs.","readOnly":false,"type":"path"},"services.confd.enable":{"declarations":["nixos/modules/services/misc/confd.nix"],"default":false,"description":"Whether to enable confd service.","example":true,"readOnly":false,"type":"boolean"},"services.confd.interval":{"declarations":["nixos/modules/services/misc/confd.nix"],"default":10,"description":"Confd check interval.","readOnly":false,"type":"integer"},"services.confd.logLevel":{"declarations":["nixos/modules/services/misc/confd.nix"],"default":"info","description":"Confd log level.","readOnly":false,"type":"one of \"info\", \"debug\""},"services.confd.nodes":{"declarations":["nixos/modules/services/misc/confd.nix"],"default":["http://127.0.0.1:2379"],"description":"Confd list of nodes to connect to.","readOnly":false,"type":"list of strings"},"services.confd.package":{"declarations":["nixos/modules/services/misc/confd.nix"],"default":"pkgs.confd","description":"Confd package to use.","readOnly":false,"type":"package"},"services.confd.prefix":{"declarations":["nixos/modules/services/misc/confd.nix"],"default":"/","description":"The string to prefix to keys.","readOnly":false,"type":"path"},"services.confd.watch":{"declarations":["nixos/modules/services/misc/confd.nix"],"default":true,"description":"Confd, whether to watch etcd config for changes.","readOnly":false,"type":"boolean"},"services.confluence.catalinaOptions":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":[],"description":"Java options to pass to catalina/tomcat.","example":["-Xms1024m","-Xmx2048m","-Dconfluence.disable.peopledirectory.all=true"],"readOnly":false,"type":"list of strings"},"services.confluence.enable":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":false,"description":"Whether to enable Atlassian Confluence service.","example":true,"readOnly":false,"type":"boolean"},"services.confluence.group":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":"confluence","description":"Group which runs confluence.","readOnly":false,"type":"string"},"services.confluence.home":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":"/var/lib/confluence","description":"Home directory of the confluence instance.","readOnly":false,"type":"string"},"services.confluence.jrePackage":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":"pkgs.openjdk8.jre","description":"Java Runtime to use for Confluence. Note that Atlassian recommends the Oracle JRE.","example":{"_type":"literalExample","text":"pkgs.openjdk8.jre"},"readOnly":false,"type":"package"},"services.confluence.listenAddress":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":"127.0.0.1","description":"Address to listen on.","readOnly":false,"type":"string"},"services.confluence.listenPort":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":8090,"description":"Port to listen on.","readOnly":false,"type":"integer"},"services.confluence.proxy.enable":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":false,"description":"Whether to enable proxy support.","example":true,"readOnly":false,"type":"boolean"},"services.confluence.proxy.name":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"description":"Virtual hostname at the proxy","example":"confluence.example.com","readOnly":false,"type":"string"},"services.confluence.proxy.port":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":443,"description":"Port used at the proxy","example":80,"readOnly":false,"type":"integer"},"services.confluence.proxy.scheme":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":"https","description":"Protocol used at the proxy.","example":"http","readOnly":false,"type":"string"},"services.confluence.user":{"declarations":["nixos/modules/services/web-apps/atlassian/confluence.nix"],"default":"confluence","description":"User which runs confluence.","readOnly":false,"type":"string"},"services.consul.alerts.consulAddr":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":"localhost:8500","description":"Consul api listening adddress","readOnly":false,"type":"string"},"services.consul.alerts.enable":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":false,"description":"Whether to enable consul-alerts.","example":true,"readOnly":false,"type":"boolean"},"services.consul.alerts.listenAddr":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":"localhost:9000","description":"Api listening address.","readOnly":false,"type":"string"},"services.consul.alerts.package":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":"pkgs.consul-alerts","description":"Package to use for consul-alerts.","readOnly":false,"type":"package"},"services.consul.alerts.watchChecks":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":true,"description":"Whether to enable check watcher.","readOnly":false,"type":"boolean"},"services.consul.alerts.watchEvents":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":true,"description":"Whether to enable event watcher.","readOnly":false,"type":"boolean"},"services.consul.dropPrivileges":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":true,"description":"Whether the consul agent should be run as a non-root consul user.\n","readOnly":false,"type":"boolean"},"services.consul.enable":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":false,"description":"Enables the consul daemon.\n","readOnly":false,"type":"boolean"},"services.consul.extraConfig":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":{},"description":"Extra configuration options which are serialized to json and added\nto the config.json file.\n","readOnly":false,"type":"unspecified"},"services.consul.extraConfigFiles":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":[],"description":"Additional configuration files to pass to consul\nNOTE: These will not trigger the service to be restarted when altered.\n","readOnly":false,"type":"list of strings"},"services.consul.forceIpv4":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":false,"description":"Whether we should force the interfaces to only pull ipv4 addresses.\n","readOnly":false,"type":"boolean"},"services.consul.interface.advertise":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":null,"description":"The name of the interface to pull the advertise_addr from.\n","readOnly":false,"type":"null or string"},"services.consul.interface.bind":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":null,"description":"The name of the interface to pull the bind_addr from.\n","readOnly":false,"type":"null or string"},"services.consul.leaveOnStop":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":false,"description":"If enabled, causes a leave action to be sent when closing consul.\nThis allows a clean termination of the node, but permanently removes\nit from the cluster. You probably don't want this option unless you\nare running a node which going offline in a permanent / semi-permanent\nfashion.\n","readOnly":false,"type":"boolean"},"services.consul.package":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":"pkgs.consul","description":"The package used for the Consul agent and CLI.\n","readOnly":false,"type":"package"},"services.consul.webUi":{"declarations":["nixos/modules/services/networking/consul.nix"],"default":false,"description":"Enables the web interface on the consul http port.\n","readOnly":false,"type":"boolean"},"services.coturn.alt-listening-port":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":"listening-port + 1","description":"Alternative listening port for UDP and TCP listeners;\ndefault (or zero) value means \"listening port plus one\".\nThis is needed for RFC 5780 support\n(STUN extension specs, NAT behavior discovery). The TURN Server\nsupports RFC 5780 only if it is started with more than one\nlistening IP address of the same family (IPv4 or IPv6).\nRFC 5780 is supported only by UDP protocol, other protocols\nare listening to that endpoint only for \"symmetry\".\n","readOnly":false,"type":"integer"},"services.coturn.alt-tls-listening-port":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":"tls-listening-port + 1","description":"Alternative listening port for TLS and DTLS protocols.\n","readOnly":false,"type":"integer"},"services.coturn.cert":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":null,"description":"Certificate file in PEM format.\n","example":"/var/lib/acme/example.com/fullchain.pem","readOnly":false,"type":"null or string"},"services.coturn.cli-ip":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":"127.0.0.1","description":"Local system IP address to be used for CLI server endpoint.\n","readOnly":false,"type":"string"},"services.coturn.cli-password":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":null,"description":"CLI access password.\nFor the security reasons, it is recommended to use the encrypted\nfor of the password (see the -P command in the turnadmin utility).\n","readOnly":false,"type":"null or string"},"services.coturn.cli-port":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":5766,"description":"CLI server port.\n","readOnly":false,"type":"integer"},"services.coturn.dh-file":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":null,"description":"Use custom DH TLS key, stored in PEM format in the file.\n","readOnly":false,"type":"null or string"},"services.coturn.enable":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Whether to enable coturn TURN server.","example":true,"readOnly":false,"type":"boolean"},"services.coturn.extraConfig":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":"","description":"Additional configuration options","readOnly":false,"type":"string"},"services.coturn.listening-ips":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":[],"description":"Listener IP addresses of relay server.\nIf no IP(s) specified in the config file or in the command line options,\nthen all IPv4 and IPv6 system IPs will be used for listening.\n","example":["203.0.113.42","2001:DB8::42"],"readOnly":false,"type":"list of strings"},"services.coturn.listening-port":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":3478,"description":"TURN listener port for UDP and TCP.\nNote: actually, TLS and DTLS sessions can connect to the\n\"plain\" TCP and UDP port(s), too - if allowed by configuration.\n","readOnly":false,"type":"integer"},"services.coturn.lt-cred-mech":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Use long-term credential mechanism.\n","readOnly":false,"type":"boolean"},"services.coturn.max-port":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":65535,"description":"Upper bound of UDP relay endpoints\n","readOnly":false,"type":"integer"},"services.coturn.min-port":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":49152,"description":"Lower bound of UDP relay endpoints\n","readOnly":false,"type":"integer"},"services.coturn.no-auth":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"This option is opposite to lt-cred-mech.\n(TURN Server with no-auth option allows anonymous access).\nIf neither option is defined, and no users are defined,\nthen no-auth is default. If at least one user is defined,\nin this file or in command line or in usersdb file, then\nlt-cred-mech is default.\n","readOnly":false,"type":"boolean"},"services.coturn.no-cli":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Turn OFF the CLI support.\n","readOnly":false,"type":"boolean"},"services.coturn.no-dtls":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Disable DTLS client listener","readOnly":false,"type":"boolean"},"services.coturn.no-tcp":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Disable TCP client listener","readOnly":false,"type":"boolean"},"services.coturn.no-tcp-relay":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Disable TCP relay endpoints","readOnly":false,"type":"boolean"},"services.coturn.no-tls":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Disable TLS client listener","readOnly":false,"type":"boolean"},"services.coturn.no-udp":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Disable UDP client listener","readOnly":false,"type":"boolean"},"services.coturn.no-udp-relay":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Disable UDP relay endpoints","readOnly":false,"type":"boolean"},"services.coturn.pkey":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":null,"description":"Private key file in PEM format.\n","example":"/var/lib/acme/example.com/key.pem","readOnly":false,"type":"null or string"},"services.coturn.realm":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":"nixos","description":"The default realm to be used for the users when no explicit\norigin/realm relationship was found in the database, or if the TURN\nserver is not using any database (just the commands-line settings\nand the userdb file). Must be used with long-term credentials\nmechanism or with TURN REST API.\n","example":"example.com","readOnly":false,"type":"string"},"services.coturn.relay-ips":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":[],"description":"Relay address (the local IP address that will be used to relay the\npackets to the peer).\nMultiple relay addresses may be used.\nThe same IP(s) can be used as both listening IP(s) and relay IP(s).\n\nIf no relay IP(s) specified, then the turnserver will apply the default\npolicy: it will decide itself which relay addresses to be used, and it\nwill always be using the client socket IP address as the relay IP address\nof the TURN session (if the requested relay address family is the same\nas the family of the client socket).\n","example":["203.0.113.42","2001:DB8::42"],"readOnly":false,"type":"list of strings"},"services.coturn.secure-stun":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"Require authentication of the STUN Binding request.\nBy default, the clients are allowed anonymous access to the STUN Binding functionality.\n","readOnly":false,"type":"boolean"},"services.coturn.static-auth-secret":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":null,"description":"'Static' authentication secret value (a string) for TURN REST API only.\nIf not set, then the turn server\nwill try to use the 'dynamic' value in turn_secret table\nin user database (if present). The database-stored  value can be changed on-the-fly\nby a separate program, so this is why that other mode is 'dynamic'.\n","readOnly":false,"type":"null or string"},"services.coturn.tls-listening-port":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":5349,"description":"TURN listener port for TLS.\nNote: actually, \"plain\" TCP and UDP sessions can connect to the TLS and\nDTLS port(s), too - if allowed by configuration. The TURN server\n\"automatically\" recognizes the type of traffic. Actually, two listening\nendpoints (the \"plain\" one and the \"tls\" one) are equivalent in terms of\nfunctionality; but we keep both endpoints to satisfy the RFC 5766 specs.\nFor secure TCP connections, we currently support SSL version 3 and\nTLS version 1.0, 1.1 and 1.2.\nFor secure UDP connections, we support DTLS version 1.\n","readOnly":false,"type":"integer"},"services.coturn.use-auth-secret":{"declarations":["nixos/modules/services/networking/coturn.nix"],"default":false,"description":"TURN REST API flag.\nFlag that sets a special authorization option that is based upon authentication secret.\nThis feature can be used with the long-term authentication mechanism, only.\nThis feature purpose is to support \"TURN Server REST API\", see\n\"TURN REST API\" link in the project's page\nhttps://github.com/coturn/coturn/\n\nThis option is used with timestamp:\n\nusercombo -> \"timestamp:userid\"\nturn user -> usercombo\nturn password -> base64(hmac(secret key, usercombo))\n\nThis allows TURN credentials to be accounted for a specific user id.\nIf you don't have a suitable id, the timestamp alone can be used.\nThis option is just turning on secret-based authentication.\nThe actual value of the secret is defined either by option static-auth-secret,\nor can be found in the turn_secret table in the database.\n","readOnly":false,"type":"boolean"},"services.couchdb.bindAddress":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"127.0.0.1","description":"Defines the IP address by which CouchDB will be accessible.\n","readOnly":false,"type":"string"},"services.couchdb.configFile":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"/var/lib/couchdb/couchdb.ini","description":"Configuration file for persisting runtime changes. File\nneeds to be readable and writable from couchdb user/group.\n","readOnly":false,"type":"string"},"services.couchdb.databaseDir":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"/var/lib/couchdb","description":"Specifies location of CouchDB database files (*.couch named). This\nlocation should be writable and readable for the user the CouchDB\nservice runs as (couchdb by default).\n","readOnly":false,"type":"path"},"services.couchdb.enable":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":false,"description":"Whether to run CouchDB Server.\n","readOnly":false,"type":"boolean"},"services.couchdb.extraConfig":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"","description":"Extra configuration. Overrides any other cofiguration.\n","readOnly":false,"type":"string"},"services.couchdb.group":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"couchdb","description":"Group account under which couchdb runs.\n","readOnly":false,"type":"string"},"services.couchdb.logFile":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"/var/log/couchdb.log","description":"Specifies the location of file for logging output.\n","readOnly":false,"type":"path"},"services.couchdb.package":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"pkgs.couchdb","description":"CouchDB package to use.\n","example":{"_type":"literalExample","text":"pkgs.couchdb"},"readOnly":false,"type":"package"},"services.couchdb.port":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":5984,"description":"Defined the port number to listen.\n","readOnly":false,"type":"integer"},"services.couchdb.uriFile":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"/var/run/couchdb/couchdb.uri","description":"This file contains the full URI that can be used to access this\ninstance of CouchDB. It is used to help discover the port CouchDB is\nrunning on (if it was set to 0 (e.g. automatically assigned any free\none). This file should be writable and readable for the user that\nruns the CouchDB service (couchdb by default).\n","readOnly":false,"type":"path"},"services.couchdb.user":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"couchdb","description":"User account under which couchdb runs.\n","readOnly":false,"type":"string"},"services.couchdb.viewIndexDir":{"declarations":["nixos/modules/services/databases/couchdb.nix"],"default":"/var/lib/couchdb","description":"Specifies location of CouchDB view index files. This location should\nbe writable and readable for the user that runs the CouchDB service\n(couchdb by default).\n","readOnly":false,"type":"path"},"services.cpuminer-cryptonight.enable":{"declarations":["nixos/modules/services/misc/cpuminer-cryptonight.nix"],"default":false,"description":"Whether to enable the cpuminer cryptonight miner.\n","readOnly":false,"type":"boolean"},"services.cpuminer-cryptonight.pass":{"declarations":["nixos/modules/services/misc/cpuminer-cryptonight.nix"],"default":"x","description":"Password for mining server","readOnly":false,"type":"string"},"services.cpuminer-cryptonight.threads":{"declarations":["nixos/modules/services/misc/cpuminer-cryptonight.nix"],"default":0,"description":"Number of miner threads, defaults to available processors","readOnly":false,"type":"integer"},"services.cpuminer-cryptonight.url":{"declarations":["nixos/modules/services/misc/cpuminer-cryptonight.nix"],"description":"URL of mining server","readOnly":false,"type":"string"},"services.cpuminer-cryptonight.user":{"declarations":["nixos/modules/services/misc/cpuminer-cryptonight.nix"],"description":"Username for mining server","readOnly":false,"type":"string"},"services.crashplan.enable":{"declarations":["nixos/modules/services/backup/crashplan.nix"],"default":false,"description":"Starts crashplan background service.\n","readOnly":false,"type":"boolean"},"services.cron.cronFiles":{"declarations":["nixos/modules/services/scheduling/cron.nix"],"default":[],"description":"A list of extra crontab files that will be read and appended to the main\ncrontab file when the cron service starts.\n","readOnly":false,"type":"list of paths"},"services.cron.enable":{"declarations":["nixos/modules/services/scheduling/cron.nix"],"description":"Whether to enable the Vixie cron daemon.","example":true,"readOnly":false,"type":"boolean"},"services.cron.mailto":{"declarations":["nixos/modules/services/scheduling/cron.nix"],"default":null,"description":"Email address to which job output will be mailed.","readOnly":false,"type":"null or string"},"services.cron.systemCronJobs":{"declarations":["nixos/modules/services/scheduling/cron.nix"],"default":[],"description":"A list of Cron jobs to be appended to the system-wide\ncrontab.  See the manual page for crontab for the expected\nformat. If you want to get the results mailed you must setuid\nsendmail. See <option>security.setuidOwners</option>\n\nIf neither /var/cron/cron.deny nor /var/cron/cron.allow exist only root\nwill is allowed to have its own crontab file. The /var/cron/cron.deny file\nis created automatically for you. So every user can use a crontab.\n\nMany nixos modules set systemCronJobs, so if you decide to disable vixie cron\nand enable another cron daemon, you may want it to get its system crontab\nbased on systemCronJobs.\n","example":{"_type":"literalExample","text":"[ \"* * * * *  test   ls -l / > /tmp/cronout 2>&1\"\n  \"* * * * *  eelco  echo Hello World > /home/eelco/cronout\"\n]\n"},"readOnly":false,"type":"list of strings"},"services.crowd.catalinaOptions":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":[],"description":"Java options to pass to catalina/tomcat.","example":["-Xms1024m","-Xmx2048m"],"readOnly":false,"type":"list of strings"},"services.crowd.enable":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":false,"description":"Whether to enable Atlassian Crowd service.","example":true,"readOnly":false,"type":"boolean"},"services.crowd.group":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":"crowd","description":"Group which runs Crowd.","readOnly":false,"type":"string"},"services.crowd.home":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":"/var/lib/crowd","description":"Home directory of the Crowd instance.","readOnly":false,"type":"string"},"services.crowd.jrePackage":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":"pkgs.openjdk8.jre","description":"Java Runtime to use for Crowd. Note that Atlassian recommends the Oracle JRE.","example":{"_type":"literalExample","text":"pkgs.openjdk8.jre"},"readOnly":false,"type":"package"},"services.crowd.listenAddress":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":"127.0.0.1","description":"Address to listen on.","readOnly":false,"type":"string"},"services.crowd.listenPort":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":8092,"description":"Port to listen on.","readOnly":false,"type":"integer"},"services.crowd.proxy.enable":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":false,"description":"Whether to enable reverse proxy support.","example":true,"readOnly":false,"type":"boolean"},"services.crowd.proxy.name":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"description":"Virtual hostname at the proxy","example":"crowd.example.com","readOnly":false,"type":"string"},"services.crowd.proxy.port":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":443,"description":"Port used at the proxy","example":80,"readOnly":false,"type":"integer"},"services.crowd.proxy.scheme":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":"https","description":"Protocol used at the proxy.","example":"http","readOnly":false,"type":"string"},"services.crowd.proxy.secure":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":true,"description":"Whether the connections to the proxy should be considered secure.","example":false,"readOnly":false,"type":"boolean"},"services.crowd.user":{"declarations":["nixos/modules/services/web-apps/atlassian/crowd.nix"],"default":"crowd","description":"User which runs Crowd.","readOnly":false,"type":"string"},"services.dante.config":{"declarations":["nixos/modules/services/networking/dante.nix"],"default":null,"description":"Contents of Dante's configuration file\nNOTE: user.privileged/user.unprivileged are set by the service\n","readOnly":false,"type":"null or string"},"services.dante.enable":{"declarations":["nixos/modules/services/networking/dante.nix"],"default":false,"description":"Whether to enable Dante SOCKS proxy.","example":true,"readOnly":false,"type":"boolean"},"services.das_watchdog.enable":{"declarations":["nixos/modules/services/monitoring/das_watchdog.nix"],"default":false,"description":"Whether to enable realtime watchdog.","example":true,"readOnly":false,"type":"boolean"},"services.dbus.packages":{"declarations":["nixos/modules/services/system/dbus.nix"],"default":[],"description":"Packages whose D-Bus configuration files should be included in\nthe configuration of the D-Bus system-wide or session-wide\nmessage bus.  Specifically, files in the following directories\nwill be included into their respective DBus configuration paths:\n<filename><replaceable>pkg</replaceable>/etc/dbus-1/system.d</filename>\n<filename><replaceable>pkg</replaceable>/share/dbus-1/system-services</filename>\n<filename><replaceable>pkg</replaceable>/etc/dbus-1/session.d</filename>\n<filename><replaceable>pkg</replaceable>/share/dbus-1/services</filename>\n","readOnly":false,"type":"list of paths"},"services.dbus.socketActivated":{"declarations":["nixos/modules/services/system/dbus.nix"],"default":false,"description":"Make the user instance socket activated.\n","readOnly":false,"type":"boolean"},"services.dd-agent.api_key":{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"description":"The Datadog API key to associate the agent with your account","example":"ae0aa6a8f08efa988ba0a17578f009ab","readOnly":false,"type":"string"},"services.dd-agent.enable":{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":false,"description":"Whether to enable the dd-agent montioring service","readOnly":false,"type":"boolean"},"services.dd-agent.hostname":{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":null,"description":"The hostname to show in the Datadog dashboard (optional)","example":"mymachine.mydomain","readOnly":false,"type":"null or string"},"services.dd-agent.jmxConfig":{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":null,"description":"JMX integration configuration","readOnly":false,"type":"null or string"},"services.dd-agent.mongoConfig":{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":null,"description":"MongoDB integration configuration","readOnly":false,"type":"null or string"},"services.dd-agent.nginxConfig":{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":null,"description":"Datadog nginx integration configuration","readOnly":false,"type":"null or string"},"services.dd-agent.postgresqlConfig":{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":null,"description":"Datadog PostgreSQL integration configuration","readOnly":false,"type":"null or string"},"services.dd-agent.tags":{"declarations":["nixos/modules/services/monitoring/dd-agent.nix"],"default":null,"description":"The tags to mark this Datadog agent","example":["test","service"],"readOnly":false,"type":"null or list of strings"},"services.ddclient.configFile":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"/etc/ddclient.conf","description":"Path to configuration file.\nWhen set to the default '/etc/ddclient.conf' it will be populated with the various other options in this module. When it is changed (for example: '/root/nixos/secrets/ddclient.conf') the file read directly to configure ddclient. This is a source of impurity.\nThe purpose of this is to avoid placing secrets into the store.\n","example":"/root/nixos/secrets/ddclient.conf","readOnly":false,"type":"path"},"services.ddclient.domain":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Domain name to synchronize.\n","readOnly":false,"type":"string"},"services.ddclient.enable":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":false,"description":"Whether to synchronise your machine's IP address with a dynamic DNS provider (e.g. dyndns.org).\n","readOnly":false,"type":"boolean"},"services.ddclient.extraConfig":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the configuration file.\n","readOnly":false,"type":"string"},"services.ddclient.password":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Password. WARNING: The password becomes world readable in the Nix store.\n","readOnly":false,"type":"string"},"services.ddclient.protocol":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"dyndns2","description":"Protocol to use with dynamic DNS provider (see http://sourceforge.net/apps/trac/ddclient/wiki/Protocols).\n","readOnly":false,"type":"string"},"services.ddclient.server":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Server address.\n","readOnly":false,"type":"string"},"services.ddclient.ssl":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":true,"description":"Whether to use to use SSL/TLS to connect to dynamic DNS provider.\n","readOnly":false,"type":"boolean"},"services.ddclient.use":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"web, web=checkip.dyndns.com/, web-skip='Current IP Address: '","description":"Method to determine the IP address to send to the dynamic DNS provider.\n","readOnly":false,"type":"string"},"services.ddclient.username":{"declarations":["nixos/modules/services/networking/ddclient.nix"],"default":"","description":"Username.\n","readOnly":false,"type":"string"},"services.deluge.enable":{"declarations":["nixos/modules/services/torrent/deluge.nix"],"default":false,"description":"Start the Deluge daemon","example":true,"readOnly":false,"type":"unspecified"},"services.deluge.openFilesLimit":{"declarations":["nixos/modules/services/torrent/deluge.nix"],"default":4096,"description":"Number of files to allow deluged to open.\n","example":8192,"readOnly":false,"type":"unspecified"},"services.deluge.web.enable":{"declarations":["nixos/modules/services/torrent/deluge.nix"],"default":false,"description":"Start Deluge Web daemon.\n","example":true,"readOnly":false,"type":"unspecified"},"services.devmon.enable":{"declarations":["nixos/modules/services/misc/devmon.nix"],"default":false,"description":"Whether to enable devmon, an automatic device mounting daemon.\n","readOnly":false,"type":"unspecified"},"services.dhcpd.configFile":{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":null,"description":"\n          The path of the DHCP server configuration file.  If no file\n          is specified, a file is generated using the other options.\n        ","readOnly":false,"type":"unspecified"},"services.dhcpd.enable":{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":false,"description":"\n          Whether to enable the DHCP server.\n        ","readOnly":false,"type":"unspecified"},"services.dhcpd.extraConfig":{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":"","description":"\n          Extra text to be appended to the DHCP server configuration\n          file.  Currently, you almost certainly need to specify\n          something here, such as the options specifying the subnet\n          mask, DNS servers, etc.\n        ","example":"option subnet-mask 255.255.255.0;\noption broadcast-address 192.168.1.255;\noption routers 192.168.1.5;\noption domain-name-servers 130.161.158.4, 130.161.33.17, 130.161.180.1;\noption domain-name \"example.org\";\nsubnet 192.168.1.0 netmask 255.255.255.0 {\n  range 192.168.1.100 192.168.1.200;\n}\n","readOnly":false,"type":"string"},"services.dhcpd.extraFlags":{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":"","description":"\n          Additional command line flags to be passed to the dhcpd daemon.\n        ","example":"-6","readOnly":false,"type":"unspecified"},"services.dhcpd.interfaces":{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":["eth0"],"description":"\n          The interfaces on which the DHCP server should listen.\n        ","readOnly":false,"type":"unspecified"},"services.dhcpd.machines":{"declarations":["nixos/modules/services/networking/dhcpd.nix"],"default":[],"description":"\n          A list mapping ethernet addresses to IP addresses for the\n          DHCP server.\n        ","example":[{"ethernetAddress":"00:16:76:9a:32:1d","hostName":"foo","ipAddress":"192.168.1.10"},{"ethernetAddress":"00:19:d1:1d:c4:9a","hostName":"bar","ipAddress":"192.168.1.11"}],"readOnly":false,"type":"unspecified"},"services.dictd.DBs":{"declarations":["nixos/modules/services/misc/dictd.nix"],"default":"with pkgs.dictdDBs; [ wiktionary wordnet ]","description":"List of databases to make available.","example":{"_type":"literalExample","text":"[ pkgs.dictdDBs.nld2eng ]"},"readOnly":false,"type":"list of packages"},"services.dictd.enable":{"declarations":["nixos/modules/services/misc/dictd.nix"],"default":false,"description":"Whether to enable the DICT.org dictionary server.\n","readOnly":false,"type":"boolean"},"services.diod.allsquash":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":true,"description":"Remap all users to \"nobody\". The attaching user need not be present in the\npassword file.\n","readOnly":false,"type":"boolean"},"services.diod.authRequired":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":false,"description":"Allow clients to connect without authentication, i.e. without a valid MUNGE credential.\n","readOnly":false,"type":"boolean"},"services.diod.enable":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":false,"description":"Whether to enable the diod 9P file server.","readOnly":false,"type":"boolean"},"services.diod.exportall":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":true,"description":"Export all file systems listed in /proc/mounts. If new file systems are mounted\nafter diod has started, they will become immediately mountable. If there is a\nduplicate entry for a file system in the exports list, any options listed in\nthe exports entry will apply.\n","readOnly":false,"type":"boolean"},"services.diod.exportopts":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":[],"description":"Establish a default set of export options. These are overridden, not appended\nto, by opts attributes in an \"exports\" entry.\n","readOnly":false,"type":"list of strings"},"services.diod.exports":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":[],"description":"List the file systems that clients will be allowed to mount. All paths should\nbe fully qualified. The exports table can include two types of element:\na string element (as above),\nor an alternate table element form { path=\"/path\", opts=\"ro\" }.\nIn the alternate form, the (optional) opts attribute is a comma-separated list\nof export options. The two table element forms can be mixed in the exports\ntable. Note that although diod will not traverse file system boundaries for a\ngiven mount due to inode uniqueness constraints, subdirectories of a file\nsystem can be separately exported.\n","readOnly":false,"type":"list of strings"},"services.diod.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":"","description":"Extra configuration options for diod.conf.","readOnly":false,"type":"string"},"services.diod.listen":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":["0.0.0.0:564"],"description":"[ \"IP:PORT\" [,\"IP:PORT\",...] ]\nList the interfaces and ports that diod should listen on.\n","readOnly":false,"type":"list of strings"},"services.diod.logdest":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":"syslog:daemon:err","description":"Set the destination for logging.\nThe value has the form of \"syslog:facility:level\" or \"filename\".\n","readOnly":false,"type":"string"},"services.diod.nwthreads":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":16,"description":"Sets the (fixed) number of worker threads created to handle 9P\nrequests for a unique aname.\n","readOnly":false,"type":"integer"},"services.diod.squashuser":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":"nobody","description":"Change the squash user. The squash user must be present in the password file.\n","readOnly":false,"type":"string"},"services.diod.statfsPassthru":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":false,"description":"This option configures statfs to return the host file system's type\nrather than V9FS_MAGIC.\n","readOnly":false,"type":"boolean"},"services.diod.userdb":{"declarations":["nixos/modules/services/network-filesystems/diod.nix"],"default":false,"description":"This option disables password/group lookups. It allows any uid to attach and\nassumes gid=uid, and supplementary groups contain only the primary gid.\n","readOnly":false,"type":"boolean"},"services.disnix.enable":{"declarations":["nixos/modules/services/misc/disnix.nix"],"default":false,"description":"Whether to enable Disnix","readOnly":false,"type":"unspecified"},"services.disnix.package":{"declarations":["nixos/modules/services/misc/disnix.nix"],"default":"pkgs.disnix","description":"The Disnix package","readOnly":false,"type":"path"},"services.disnix.useWebServiceInterface":{"declarations":["nixos/modules/services/misc/disnix.nix"],"default":false,"description":"Whether to enable the DisnixWebService interface running on Apache Tomcat","readOnly":false,"type":"unspecified"},"services.dnschain.enable":{"declarations":["nixos/modules/services/networking/dnschain.nix"],"default":false,"description":"Whether to run dnschain. That implies running\nnamecoind as well, so make sure to configure\nit appropriately.\n","readOnly":false,"type":"boolean"},"services.dnscrypt-proxy.customResolver":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"default":null,"description":"Use an unlisted resolver (e.g., a private DNSCrypt provider). For\nadvanced users only. If specified, this option takes precedence.\n","readOnly":false,"type":"null or submodule"},"services.dnscrypt-proxy.customResolver.address":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"description":"IP address","example":"208.67.220.220","readOnly":false,"type":"string"},"services.dnscrypt-proxy.customResolver.key":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"description":"Public key","example":"B735:1140:206F:225D:3E2B:D822:D7FD:691E:A1C3:3CC8:D666:8D0C:BE04:BFAB:CA43:FB79","readOnly":false,"type":"string"},"services.dnscrypt-proxy.customResolver.name":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"description":"Fully qualified domain name","example":"2.dnscrypt-cert.opendns.com","readOnly":false,"type":"string"},"services.dnscrypt-proxy.customResolver.port":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"default":443,"description":"Port","readOnly":false,"type":"integer"},"services.dnscrypt-proxy.enable":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"default":false,"description":"Whether to enable the DNSCrypt client proxy","readOnly":false,"type":"boolean"},"services.dnscrypt-proxy.ephemeralKeys":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"default":false,"description":"Compute a new key pair for every query.  Enabling this option\nincreases CPU usage, but makes it more difficult for the upstream\nresolver to track your usage of their service across IP addresses.\nThe default is to re-use the public key pair for all queries, making\ntracking trivial.\n","readOnly":false,"type":"boolean"},"services.dnscrypt-proxy.localAddress":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"default":"127.0.0.1","description":"Listen for DNS queries to relay on this address. The only reason to\nchange this from its default value is to proxy queries on behalf\nof other machines (typically on the local network).\n","readOnly":false,"type":"string"},"services.dnscrypt-proxy.localPort":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"default":53,"description":"Listen for DNS queries to relay on this port. The default value\nassumes that the DNSCrypt proxy should relay DNS queries directly.\nWhen running as a forwarder for another DNS client, set this option\nto a different value; otherwise leave the default.\n","readOnly":false,"type":"integer"},"services.dnscrypt-proxy.port":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.dnscrypt-proxy.localPort</option>.","readOnly":false,"type":"unspecified"},"services.dnscrypt-proxy.resolverList":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"default":null,"description":"List of DNSCrypt resolvers.  The default is to use the list of\npublic resolvers provided by upstream.\n","readOnly":false,"type":"null or path"},"services.dnscrypt-proxy.resolverName":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"default":"dnscrypt.eu-nl","description":"The name of the upstream DNSCrypt resolver to use, taken from\n<filename>/var/lib/dnscrypt-proxy/dnscrypt-resolvers.csv</filename>.  The default resolver is\nlocated in Holland, supports DNS security extensions, and\n<emphasis>claims</emphasis> to not keep logs.\n","readOnly":false,"type":"null or string"},"services.dnscrypt-proxy.tcpOnly":{"declarations":["nixos/modules/services/networking/dnscrypt-proxy.nix"],"default":false,"description":"Force sending encrypted DNS queries to the upstream resolver over\nTCP instead of UDP (on port 443). Use only if the UDP port is blocked.\n","readOnly":false,"type":"boolean"},"services.dnsmasq.enable":{"declarations":["nixos/modules/services/networking/dnsmasq.nix"],"default":false,"description":"Whether to run dnsmasq.\n","readOnly":false,"type":"boolean"},"services.dnsmasq.extraConfig":{"declarations":["nixos/modules/services/networking/dnsmasq.nix"],"default":"","description":"Extra configuration directives that should be added to\n<literal>dnsmasq.conf</literal>.\n","readOnly":false,"type":"string"},"services.dnsmasq.resolveDnschainQueries":{"declarations":["nixos/modules/services/networking/dnschain.nix"],"default":false,"description":"Resolve <literal>.bit</literal> top-level domains\nwith dnschain and namecoind.\n","readOnly":false,"type":"boolean"},"services.dnsmasq.resolveLocalQueries":{"declarations":["nixos/modules/services/networking/dnsmasq.nix"],"default":true,"description":"Whether dnsmasq should resolve local queries (i.e. add 127.0.0.1 to\n/etc/resolv.conf).\n","readOnly":false,"type":"boolean"},"services.dnsmasq.servers":{"declarations":["nixos/modules/services/networking/dnsmasq.nix"],"default":[],"description":"The DNS servers which dnsmasq should query.\n","example":["8.8.8.8","8.8.4.4"],"readOnly":false,"type":"list of strings"},"services.dockerRegistry.enable":{"declarations":["nixos/modules/services/misc/docker-registry.nix"],"default":false,"description":"Whether to enable Docker Registry.","example":true,"readOnly":false,"type":"boolean"},"services.dockerRegistry.extraConfig":{"declarations":["nixos/modules/services/misc/docker-registry.nix"],"default":{},"description":"Docker extra registry configuration via environment variables.\n","readOnly":false,"type":"attribute set of strings"},"services.dockerRegistry.listenAddress":{"declarations":["nixos/modules/services/misc/docker-registry.nix"],"default":"127.0.0.1","description":"Docker registry host or ip to bind to.","readOnly":false,"type":"string"},"services.dockerRegistry.port":{"declarations":["nixos/modules/services/misc/docker-registry.nix"],"default":5000,"description":"Docker registry port to bind to.","readOnly":false,"type":"integer"},"services.dockerRegistry.storagePath":{"declarations":["nixos/modules/services/misc/docker-registry.nix"],"default":"/var/lib/docker-registry","description":"Docker registry storage path.","readOnly":false,"type":"path"},"services.dovecot2.configFile":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":null,"description":"Config file used for the whole dovecot configuration.","readOnly":false,"type":"null or string"},"services.dovecot2.enable":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":false,"description":"Whether to enable Dovecot 2.x POP3/IMAP server.","example":true,"readOnly":false,"type":"boolean"},"services.dovecot2.enableImap":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":true,"description":"Start the IMAP listener (when Dovecot is enabled).","readOnly":false,"type":"boolean"},"services.dovecot2.enableLmtp":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":false,"description":"Start the LMTP listener (when Dovecot is enabled).","readOnly":false,"type":"boolean"},"services.dovecot2.enablePAM":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":true,"description":"Whether to create a own Dovecot PAM service and configure PAM user logins.","readOnly":false,"type":"boolean"},"services.dovecot2.enablePop3":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":true,"description":"Start the POP3 listener (when Dovecot is enabled).","readOnly":false,"type":"boolean"},"services.dovecot2.extraConfig":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"","description":"Additional entries to put verbatim into Dovecot's config file.","example":"mail_debug = yes","readOnly":false,"type":"string"},"services.dovecot2.group":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"dovecot2","description":"Dovecot group name.","readOnly":false,"type":"string"},"services.dovecot2.mailGroup":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":null,"description":"Default group to store mail for virtual users.","readOnly":false,"type":"null or string"},"services.dovecot2.mailLocation":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"maildir:/var/spool/mail/%u","description":"Location that dovecot will use for mail folders. Dovecot mail_location option.\n","example":"maildir:~/mail:INBOX=/var/spool/mail/%u","readOnly":false,"type":"string"},"services.dovecot2.mailUser":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":null,"description":"Default user to store mail for virtual users.","readOnly":false,"type":"null or string"},"services.dovecot2.modules":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":[],"description":"Symlinks the contents of lib/dovecot of every given package into\n/etc/dovecot/modules. This will make the given modules available\nif a dovecot package with the module_dir patch applied is being used.\n","example":{"_type":"literalExample","text":"[ pkgs.dovecot_pigeonhole ]"},"readOnly":false,"type":"list of packages"},"services.dovecot2.protocols":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":[],"description":"Additional listeners to start when Dovecot is enabled.","readOnly":false,"type":"list of strings"},"services.dovecot2.showPAMFailure":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":false,"description":"Show the PAM failure message on authentication error (useful for OTPW).","readOnly":false,"type":"boolean"},"services.dovecot2.sieveScripts":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":{},"description":"Sieve scripts to be executed. Key is a sequence, e.g. 'before2', 'after' etc.","readOnly":false,"type":"attribute set of paths"},"services.dovecot2.sslCACert":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":null,"description":"Path to the server's CA certificate key.","readOnly":false,"type":"null or string"},"services.dovecot2.sslServerCert":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":null,"description":"Path to the server's public key.","readOnly":false,"type":"null or string"},"services.dovecot2.sslServerKey":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":null,"description":"Path to the server's private key.","readOnly":false,"type":"null or string"},"services.dovecot2.user":{"declarations":["nixos/modules/services/mail/dovecot.nix"],"default":"dovecot2","description":"Dovecot user name.","readOnly":false,"type":"string"},"services.drbd.config":{"declarations":["nixos/modules/services/network-filesystems/drbd.nix"],"default":"","description":"Contents of the <filename>drbd.conf</filename> configuration file.\n","readOnly":false,"type":"string"},"services.drbd.enable":{"declarations":["nixos/modules/services/network-filesystems/drbd.nix"],"default":false,"description":"Whether to enable support for DRBD, the Distributed Replicated\nBlock Device.\n","readOnly":false,"type":"boolean"},"services.dspam.domainSocket":{"declarations":["nixos/modules/services/mail/dspam.nix"],"default":"/run/dspam/dspam.sock","description":"Path to local domain socket which is used for communication with the daemon. Set to null to disable UNIX socket.","readOnly":false,"type":"null or path"},"services.dspam.enable":{"declarations":["nixos/modules/services/mail/dspam.nix"],"default":false,"description":"Whether to enable the dspam spam filter.","readOnly":false,"type":"boolean"},"services.dspam.extraConfig":{"declarations":["nixos/modules/services/mail/dspam.nix"],"default":"","description":"Additional dspam configuration.","readOnly":false,"type":"string"},"services.dspam.group":{"declarations":["nixos/modules/services/mail/dspam.nix"],"default":"dspam","description":"Group for the dspam daemon.","readOnly":false,"type":"string"},"services.dspam.maintenanceInterval":{"declarations":["nixos/modules/services/mail/dspam.nix"],"default":null,"description":"If set, maintenance script will be run at specified (in systemd.timer format) interval","readOnly":false,"type":"null or string"},"services.dspam.storageDriver":{"declarations":["nixos/modules/services/mail/dspam.nix"],"default":"hash","description":"Storage driver backend to use for dspam.","readOnly":false,"type":"string"},"services.dspam.user":{"declarations":["nixos/modules/services/mail/dspam.nix"],"default":"dspam","description":"User for the dspam daemon.","readOnly":false,"type":"string"},"services.ejabberd.configFile":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":null,"description":"Configuration file for ejabberd in YAML format","readOnly":false,"type":"null or path"},"services.ejabberd.ctlConfig":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"","description":"Configuration of ejabberdctl","readOnly":false,"type":"string"},"services.ejabberd.enable":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":false,"description":"Whether to enable ejabberd server","readOnly":false,"type":"boolean"},"services.ejabberd.group":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"ejabberd","description":"Group under which ejabberd is ran","readOnly":false,"type":"string"},"services.ejabberd.imagemagick":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":false,"description":"Add ImageMagick to server's path; allows for image thumbnailing","readOnly":false,"type":"boolean"},"services.ejabberd.loadDumps":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":[],"description":"Configuration dumps that should be loaded on the first startup","example":{"_type":"literalExample","text":"[ ./myejabberd.dump ]"},"readOnly":false,"type":"list of paths"},"services.ejabberd.logsDir":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"/var/log/ejabberd","description":"Location of the logfile directory of ejabberd","readOnly":false,"type":"path"},"services.ejabberd.package":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"pkgs.ejabberd","description":"ejabberd server package to use","readOnly":false,"type":"package"},"services.ejabberd.spoolDir":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"/var/lib/ejabberd","description":"Location of the spooldir of ejabberd","readOnly":false,"type":"path"},"services.ejabberd.user":{"declarations":["nixos/modules/services/networking/ejabberd.nix"],"default":"ejabberd","description":"User under which ejabberd is ran","readOnly":false,"type":"string"},"services.elasticsearch.cluster_name":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"elasticsearch","description":"Elasticsearch name that identifies your cluster for auto-discovery.","readOnly":false,"type":"string"},"services.elasticsearch.dataDir":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"/var/lib/elasticsearch","description":"Data directory for elasticsearch.\n","readOnly":false,"type":"path"},"services.elasticsearch.enable":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":false,"description":"Whether to enable elasticsearch.","readOnly":false,"type":"boolean"},"services.elasticsearch.extraCmdLineOptions":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":[],"description":"Extra command line options for the elasticsearch launcher.","example":["-Djava.net.preferIPv4Stack=true"],"readOnly":false,"type":"list of strings"},"services.elasticsearch.extraConf":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"","description":"Extra configuration for elasticsearch.","example":"node.name: \"elasticsearch\"\nnode.master: true\nnode.data: false\nindex.number_of_shards: 5\nindex.number_of_replicas: 1\n","readOnly":false,"type":"string"},"services.elasticsearch.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.elasticsearch.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.elasticsearch.listenAddress":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"127.0.0.1","description":"Elasticsearch listen address.","readOnly":false,"type":"string"},"services.elasticsearch.logging":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"rootLogger: INFO, console\nlogger:\n  action: INFO\n  com.amazonaws: WARN\nappender:\n  console:\n    type: console\n    layout:\n      type: consolePattern\n      conversionPattern: \"[%d{ISO8601}][%-5p][%-25c] %m%n\"\n","description":"Elasticsearch logging configuration.","readOnly":false,"type":"string"},"services.elasticsearch.package":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":"pkgs.elasticsearch2","description":"Elasticsearch package to use.","readOnly":false,"type":"package"},"services.elasticsearch.plugins":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":[],"description":"Extra elasticsearch plugins","readOnly":false,"type":"list of packages"},"services.elasticsearch.port":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":9200,"description":"Elasticsearch port to listen for HTTP traffic.","readOnly":false,"type":"integer"},"services.elasticsearch.tcp_port":{"declarations":["nixos/modules/services/search/elasticsearch.nix"],"default":9300,"description":"Elasticsearch port for the node to node communication.","readOnly":false,"type":"integer"},"services.emacs.defaultEditor":{"declarations":["nixos/modules/services/editors/emacs.nix"],"default":false,"description":"When enabled, configures emacsclient to be the default editor\nusing the EDITOR environment variable.\n","example":true,"readOnly":false,"type":"boolean"},"services.emacs.enable":{"declarations":["nixos/modules/services/editors/emacs.nix"],"default":false,"description":"Whether to enable a user service for the Emacs daemon. Use <literal>emacsclient</literal> to connect to the\ndaemon. If <literal>true</literal>, <varname>services.emacs.install</varname> is\nconsidered <literal>true</literal>, whatever its value.\n","example":true,"readOnly":false,"type":"boolean"},"services.emacs.install":{"declarations":["nixos/modules/services/editors/emacs.nix"],"default":false,"description":"Whether to install a user service for the Emacs daemon. Once\nthe service is started, use emacsclient to connect to the\ndaemon.\n\nThe service must be manually started for each user with\n\"systemctl --user start emacs\" or globally through\n<varname>services.emacs.enable</varname>.\n","example":true,"readOnly":false,"type":"boolean"},"services.emacs.package":{"declarations":["nixos/modules/services/editors/emacs.nix"],"default":"pkgs.emacs","description":"emacs derivation to use.\n","readOnly":false,"type":"package"},"services.emby.enable":{"declarations":["nixos/modules/services/misc/emby.nix"],"default":false,"description":"Whether to enable Emby Media Server.","example":true,"readOnly":false,"type":"boolean"},"services.emby.group":{"declarations":["nixos/modules/services/misc/emby.nix"],"default":"emby","description":"Group under which emby runs.","readOnly":false,"type":"string"},"services.emby.user":{"declarations":["nixos/modules/services/misc/emby.nix"],"default":"emby","description":"User account under which Emby runs.","readOnly":false,"type":"string"},"services.errbot.instances":{"declarations":["nixos/modules/services/misc/errbot.nix"],"default":{},"description":"Errbot instance configs","readOnly":false,"type":"attribute set of submodules"},"services.errbot.instances.<name>.admins":{"declarations":["nixos/modules/services/misc/errbot.nix"],"default":[],"description":"List of identifiers of errbot admins.","readOnly":false,"type":"list of strings"},"services.errbot.instances.<name>.backend":{"declarations":["nixos/modules/services/misc/errbot.nix"],"default":"XMPP","description":"Errbot backend name.","readOnly":false,"type":"string"},"services.errbot.instances.<name>.dataDir":{"declarations":["nixos/modules/services/misc/errbot.nix"],"default":null,"description":"Data directory for errbot instance.","readOnly":false,"type":"null or path"},"services.errbot.instances.<name>.extraConfig":{"declarations":["nixos/modules/services/misc/errbot.nix"],"default":"","description":"String to be appended to the config verbatim","readOnly":false,"type":"string"},"services.errbot.instances.<name>.identity":{"declarations":["nixos/modules/services/misc/errbot.nix"],"description":"Errbot identity configuration","readOnly":false,"type":"attribute set"},"services.errbot.instances.<name>.logLevel":{"declarations":["nixos/modules/services/misc/errbot.nix"],"default":"INFO","description":"Errbot log level","readOnly":false,"type":"string"},"services.errbot.instances.<name>.plugins":{"declarations":["nixos/modules/services/misc/errbot.nix"],"default":[],"description":"List of errbot plugin derivations.","readOnly":false,"type":"list of packages"},"services.etcd.advertiseClientUrls":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":["http://127.0.0.1:2379"],"description":"Etcd list of this member's client URLs to advertise to the rest of the cluster.","readOnly":false,"type":"list of strings"},"services.etcd.certFile":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":null,"description":"Cert file to use for clients","readOnly":false,"type":"null or path"},"services.etcd.clientCertAuth":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":false,"description":"Whether to use certs for client authentication","readOnly":false,"type":"boolean"},"services.etcd.dataDir":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":"/var/lib/etcd","description":"Etcd data directory.","readOnly":false,"type":"path"},"services.etcd.discovery":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":"","description":"Etcd discovery url","readOnly":false,"type":"string"},"services.etcd.enable":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":false,"description":"Whether to enable etcd.","readOnly":false,"type":"boolean"},"services.etcd.extraConf":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":{},"description":"Etcd extra configuration. See\n<link xlink:href='https://github.com/coreos/etcd/blob/master/Documentation/configuration.md#environment-variables' />\n","example":{"_type":"literalExample","text":"{\n  \"CORS\" = \"*\";\n  \"NAME\" = \"default-name\";\n  \"MAX_RESULT_BUFFER\" = \"1024\";\n  \"MAX_CLUSTER_SIZE\" = \"9\";\n  \"MAX_RETRY_ATTEMPTS\" = \"3\";\n}\n"},"readOnly":false,"type":"attribute set of strings"},"services.etcd.initialAdvertisePeerUrls":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":["http://127.0.0.1:2380"],"description":"Etcd list of this member's peer URLs to advertise to rest of the cluster.","readOnly":false,"type":"list of strings"},"services.etcd.initialCluster":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":["nixos=http://127.0.0.1:2380"],"description":"Etcd initial cluster configuration for bootstrapping.","readOnly":false,"type":"list of strings"},"services.etcd.initialClusterState":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":"new","description":"Etcd initial cluster configuration for bootstrapping.","readOnly":false,"type":"one of \"new\", \"existing\""},"services.etcd.initialClusterToken":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":"etcd-cluster","description":"Etcd initial cluster token for etcd cluster during bootstrap.","readOnly":false,"type":"string"},"services.etcd.keyFile":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":null,"description":"Key file to use for clients","readOnly":false,"type":"null or path"},"services.etcd.listenClientUrls":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":["http://127.0.0.1:2379"],"description":"Etcd list of URLs to listen on for client traffic.","readOnly":false,"type":"list of strings"},"services.etcd.listenPeerUrls":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":["http://127.0.0.1:2380"],"description":"Etcd list of URLs to listen on for peer traffic.","readOnly":false,"type":"list of strings"},"services.etcd.name":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":"nixos","description":"Etcd unique node name.","readOnly":false,"type":"string"},"services.etcd.peerCertFile":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":null,"description":"Cert file to use for peer to peer communication","readOnly":false,"type":"null or path"},"services.etcd.peerClientCertAuth":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":false,"description":"Whether to check all incoming peer requests from the cluster for valid client certificates signed by the supplied CA","readOnly":false,"type":"boolean"},"services.etcd.peerKeyFile":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":null,"description":"Key file to use for peer to peer communication","readOnly":false,"type":"null or path"},"services.etcd.peerTrustedCaFile":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":null,"description":"Certificate authority file to use for peer to peer communication","readOnly":false,"type":"null or path"},"services.etcd.trustedCaFile":{"declarations":["nixos/modules/services/misc/etcd.nix"],"default":null,"description":"Certificate authority file to use for clients","readOnly":false,"type":"null or path"},"services.exim.config":{"declarations":["nixos/modules/services/mail/exim.nix"],"default":"","description":"Verbatim Exim configuration.  This should not contain exim_user,\nexim_group, exim_path, or spool_directory.\n","readOnly":false,"type":"string"},"services.exim.enable":{"declarations":["nixos/modules/services/mail/exim.nix"],"default":false,"description":"Whether to enable the Exim mail transfer agent.","readOnly":false,"type":"boolean"},"services.exim.group":{"declarations":["nixos/modules/services/mail/exim.nix"],"default":"exim","description":"Group to use when no root privileges are required.\n","readOnly":false,"type":"string"},"services.exim.spoolDir":{"declarations":["nixos/modules/services/mail/exim.nix"],"default":"/var/spool/exim","description":"Location of the spool directory of exim.\n","readOnly":false,"type":"string"},"services.exim.user":{"declarations":["nixos/modules/services/mail/exim.nix"],"default":"exim","description":"User to use when no root privileges are required.\nIn particular, this applies when receiving messages and when doing\nremote deliveries.  (Local deliveries run as various non-root users,\ntypically as the owner of a local mailbox.) Specifying this value\nas root is not supported.\n","readOnly":false,"type":"string"},"services.factorio.autosave-interval":{"declarations":["nixos/modules/services/games/factorio.nix"],"default":null,"description":"The time, in minutes, between autosaves.\n","example":2,"readOnly":false,"type":"null or integer"},"services.factorio.configFile":{"declarations":["nixos/modules/services/games/factorio.nix"],"default":"configFile","description":"The server's configuration file.\n\nThe default file generated by this module contains lines essential to\nthe server's operation. Use its contents as a basis for any\ncustomizations.\n","readOnly":false,"type":"path"},"services.factorio.enable":{"declarations":["nixos/modules/services/games/factorio.nix"],"default":false,"description":"Whether to enable Factorio.","example":true,"readOnly":false,"type":"boolean"},"services.factorio.mods":{"declarations":["nixos/modules/services/games/factorio.nix"],"default":[],"description":"Mods the server should install and activate.\n\nThe derivations in this list must \"build\" the mod by simply copying\nthe .zip, named correctly, into the output directory. Eventually,\nthere will be a way to pull in the most up-to-date list of\nderivations via nixos-channel. Until then, this is for experts only.\n","readOnly":false,"type":"list of packages"},"services.factorio.port":{"declarations":["nixos/modules/services/games/factorio.nix"],"default":34197,"description":"The port to which the service should bind.\n\nThis option will also open up the UDP port in the firewall configuration.\n","readOnly":false,"type":"integer"},"services.factorio.saveName":{"declarations":["nixos/modules/services/games/factorio.nix"],"default":"default","description":"The name of the savegame that will be used by the server.\n\nWhen not present in /var/lib/factorio/saves, a new map with default\nsettings will be generated before starting the service.\n","readOnly":false,"type":"string"},"services.fail2ban.daemonConfig":{"declarations":["nixos/modules/services/security/fail2ban.nix"],"default":"[Definition]\nloglevel  = INFO\nlogtarget = SYSLOG\nsocket    = /run/fail2ban/fail2ban.sock\npidfile   = /run/fail2ban/fail2ban.pid\n","description":"The contents of Fail2ban's main configuration file.  It's\ngenerally not necessary to change it.\n","readOnly":false,"type":"string"},"services.fail2ban.enable":{"declarations":["nixos/modules/services/security/fail2ban.nix"],"default":false,"description":"Whether to enable the fail2ban service.","readOnly":false,"type":"boolean"},"services.fail2ban.jails":{"declarations":["nixos/modules/services/security/fail2ban.nix"],"default":{},"description":"The configuration of each Fail2ban “jail”.  A jail\nconsists of an action (such as blocking a port using\n<command>iptables</command>) that is triggered when a\nfilter applied to a log file triggers more than a certain\nnumber of times in a certain time period.  Actions are\ndefined in <filename>/etc/fail2ban/action.d</filename>,\nwhile filters are defined in\n<filename>/etc/fail2ban/filter.d</filename>.\n","example":{"_type":"literalExample","text":"{ apache-nohome-iptables = ''\n    # Block an IP address if it accesses a non-existent\n    # home directory more than 5 times in 10 minutes,\n    # since that indicates that it's scanning.\n    filter   = apache-nohome\n    action   = iptables-multiport[name=HTTP, port=\"http,https\"]\n    logpath  = /var/log/httpd/error_log*\n    findtime = 600\n    bantime  = 600\n    maxretry = 5\n  '';\n}\n"},"readOnly":false,"type":"attribute set of strings"},"services.fakeroute.enable":{"declarations":["nixos/modules/services/networking/fakeroute.nix"],"default":false,"description":"Whether to enable the fakeroute service.\n","readOnly":false,"type":"boolean"},"services.fakeroute.route":{"declarations":["nixos/modules/services/networking/fakeroute.nix"],"default":[],"description":"Fake route that will appear after the real\none to any host running a traceroute.\n","example":["216.102.187.130","4.0.1.122","198.116.142.34","63.199.8.242"],"readOnly":false,"type":"list of strings"},"services.fcgiwrap.enable":{"declarations":["nixos/modules/services/web-servers/fcgiwrap.nix"],"default":false,"description":"Whether to enable fcgiwrap, a server for running CGI applications over FastCGI.","readOnly":false,"type":"boolean"},"services.fcgiwrap.group":{"declarations":["nixos/modules/services/web-servers/fcgiwrap.nix"],"default":null,"description":"Group permissions for the socket.","readOnly":false,"type":"null or string"},"services.fcgiwrap.preforkProcesses":{"declarations":["nixos/modules/services/web-servers/fcgiwrap.nix"],"default":1,"description":"Number of processes to prefork.","readOnly":false,"type":"integer"},"services.fcgiwrap.socketAddress":{"declarations":["nixos/modules/services/web-servers/fcgiwrap.nix"],"default":"/run/fcgiwrap.sock","description":"Socket address. In case of a UNIX socket, this should be its filesystem path.","example":"1.2.3.4:5678","readOnly":false,"type":"string"},"services.fcgiwrap.socketType":{"declarations":["nixos/modules/services/web-servers/fcgiwrap.nix"],"default":"unix","description":"Socket type: 'unix', 'tcp' or 'tcp6'.","readOnly":false,"type":"one of \"unix\", \"tcp\", \"tcp6\""},"services.fcgiwrap.user":{"declarations":["nixos/modules/services/web-servers/fcgiwrap.nix"],"default":null,"description":"User permissions for the socket.","readOnly":false,"type":"null or string"},"services.fcron.allow":{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":["all"],"description":"Users allowed to use fcrontab and fcrondyn (one name per\nline, <literal>all</literal> for everyone).\n","readOnly":false,"type":"list of strings"},"services.fcron.deny":{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":[],"description":"Users forbidden from using fcron.","readOnly":false,"type":"list of strings"},"services.fcron.enable":{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":false,"description":"Whether to enable the <command>fcron</command> daemon.","readOnly":false,"type":"boolean"},"services.fcron.maxSerialJobs":{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":1,"description":"Maximum number of serial jobs which can run simultaneously.","readOnly":false,"type":"integer"},"services.fcron.queuelen":{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":null,"description":"Number of jobs the serial queue and the lavg queue can contain.","readOnly":false,"type":"null or integer"},"services.fcron.systab":{"declarations":["nixos/modules/services/scheduling/fcron.nix"],"default":"","description":"The \"system\" crontab contents.","readOnly":false,"type":"string"},"services.felix.bundles":{"declarations":["nixos/modules/services/misc/felix.nix"],"default":"[ pkgs.felix_remoteshell ]","description":"List of bundles that should be activated on startup","readOnly":false,"type":"list of packages"},"services.felix.enable":{"declarations":["nixos/modules/services/misc/felix.nix"],"default":false,"description":"Whether to enable the Apache Felix OSGi service","readOnly":false,"type":"unspecified"},"services.felix.group":{"declarations":["nixos/modules/services/misc/felix.nix"],"default":"osgi","description":"Group account under which Apache Felix runs.","readOnly":false,"type":"unspecified"},"services.felix.user":{"declarations":["nixos/modules/services/misc/felix.nix"],"default":"osgi","description":"User account under which Apache Felix runs.","readOnly":false,"type":"unspecified"},"services.ferm.config":{"declarations":["nixos/modules/services/networking/ferm.nix"],"default":"empty firewall, allows any traffic","description":"Verbatim ferm.conf configuration.","readOnly":false,"type":"string"},"services.ferm.enable":{"declarations":["nixos/modules/services/networking/ferm.nix"],"default":false,"description":"Whether to enable Ferm Firewall.\n*Warning*: Enabling this service WILL disable the existing NixOS\nfirewall! Default firewall rules provided by packages are not\nconsidered at the moment.\n","example":true,"readOnly":false,"type":"boolean"},"services.ferm.package":{"declarations":["nixos/modules/services/networking/ferm.nix"],"default":"pkgs.ferm","description":"The ferm package.","readOnly":false,"type":"package"},"services.firebird.baseDir":{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":"/var/db/firebird","description":"Location containing data/ and system/ directories.\ndata/ stores the databases, system/ stores the password database security2.fdb.\n","readOnly":false,"type":"unspecified"},"services.firebird.enable":{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":false,"description":"Whether to enable the Firebird super server.\n","readOnly":false,"type":"unspecified"},"services.firebird.package":{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":"pkgs.firebirdSuper","description":"Which firebird derivation to use.\n","readOnly":false,"type":"package"},"services.firebird.port":{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":"3050","description":"Port Firebird uses.\n","readOnly":false,"type":"unspecified"},"services.firebird.user":{"declarations":["nixos/modules/services/databases/firebird.nix"],"default":"firebird","description":"User account under which firebird runs.\n","readOnly":false,"type":"unspecified"},"services.firefox.syncserver.allowNewUsers":{"declarations":["nixos/modules/services/networking/firefox/sync-server.nix"],"default":true,"description":"Whether to allow new-user signups on the server. Only request by\nexisting accounts will be honored.\n","example":false,"readOnly":false,"type":"boolean"},"services.firefox.syncserver.enable":{"declarations":["nixos/modules/services/networking/firefox/sync-server.nix"],"default":false,"description":"Whether to enable a Firefox Sync Server, this give the opportunity to\nFirefox users to store all synchronized data on their own server. To use this\nserver, Firefox users should visit the <option>about:config</option>, and\nreplicate the following change\n\n<screen>\nservices.sync.tokenServerURI: http://localhost:5000/token/1.0/sync/1.5\n</screen>\n\nwhere <option>http://localhost:5000/</option> corresponds to the\npublic url of the server.\n","example":true,"readOnly":false,"type":"boolean"},"services.firefox.syncserver.listen.address":{"declarations":["nixos/modules/services/networking/firefox/sync-server.nix"],"default":"127.0.0.1","description":"Address on which the sync server listen to.\n","example":"0.0.0.0","readOnly":false,"type":"string"},"services.firefox.syncserver.listen.port":{"declarations":["nixos/modules/services/networking/firefox/sync-server.nix"],"default":5000,"description":"Port on which the sync server listen to.\n","readOnly":false,"type":"integer"},"services.firefox.syncserver.privateConfig":{"declarations":["nixos/modules/services/networking/firefox/sync-server.nix"],"default":"/etc/firefox/syncserver-secret.ini","description":"The private config file is used to extend the generated config with confidential\ninformation, such as the <option>syncserver.sqlUri</option> setting if it contains a\npassword, and the <option>syncserver.secret</option> setting is used by the server to\ngenerate cryptographically-signed authentication tokens.\n\nIf this file does not exists, then it is created with a generated\n<option>syncserver.secret</option> settings.\n","readOnly":false,"type":"string"},"services.firefox.syncserver.publicUrl":{"declarations":["nixos/modules/services/networking/firefox/sync-server.nix"],"default":"http://localhost:5000/","description":"Public URL with which firefox users can use to access the sync server.\n","example":"http://sync.example.com/","readOnly":false,"type":"string"},"services.firefox.syncserver.sqlUri":{"declarations":["nixos/modules/services/networking/firefox/sync-server.nix"],"default":"sqlite:////var/db/firefox-sync-server.db","description":"The location of the database. This URL is composed of\n<option>dialect[+driver]://user:password@host/dbname[?key=value..]</option>,\nwhere <option>dialect</option> is a database name such as\n<option>mysql</option>, <option>oracle</option>, <option>postgresql</option>,\netc., and <option>driver</option> the name of a DBAPI, such as\n<option>psycopg2</option>, <option>pyodbc</option>, <option>cx_oracle</option>,\netc. The <link\nxlink:href=\"http://docs.sqlalchemy.org/en/rel_0_9/core/engines.html#database-urls\">\nSQLAlchemy documentation</link> provides more examples and describe the syntax of\nthe expected URL.\n","example":"postgresql://scott:tiger@localhost/test","readOnly":false,"type":"string"},"services.flannel.backend":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":{"Type":"vxlan"},"description":"Type of backend to use and specific configurations for that backend.","readOnly":false,"type":"attribute set"},"services.flannel.enable":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":false,"description":"Whether to enable flannel.","example":true,"readOnly":false,"type":"boolean"},"services.flannel.etcd.caFile":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":null,"description":"Etcd certificate authority file","readOnly":false,"type":"null or path"},"services.flannel.etcd.certFile":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":null,"description":"Etcd cert file","readOnly":false,"type":"null or path"},"services.flannel.etcd.endpoints":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":["http://127.0.0.1:2379"],"description":"Etcd endpoints","readOnly":false,"type":"list of strings"},"services.flannel.etcd.keyFile":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":null,"description":"Etcd key file","readOnly":false,"type":"null or path"},"services.flannel.etcd.prefix":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":"/coreos.com/network","description":"Etcd key prefix","readOnly":false,"type":"string"},"services.flannel.iface":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":null,"description":"Interface to use (IP or name) for inter-host communication.\nDefaults to the interface for the default route on the machine.\n","readOnly":false,"type":"null or string"},"services.flannel.network":{"declarations":["nixos/modules/services/networking/flannel.nix"],"description":" IPv4 network in CIDR format to use for the entire flannel network.","readOnly":false,"type":"string"},"services.flannel.package":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":"pkgs.flannel.bin","description":"Package to use for flannel","readOnly":false,"type":"package"},"services.flannel.publicIp":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":null,"description":"IP accessible by other nodes for inter-host communication.\nDefaults to the IP of the interface being used for communication.\n","readOnly":false,"type":"null or string"},"services.flannel.subnetLen":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":24,"description":"The size of the subnet allocated to each host. Defaults to 24 (i.e. /24)\nunless the Network was configured to be smaller than a /24 in which case\nit is one less than the network.\n","readOnly":false,"type":"integer"},"services.flannel.subnetMax":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":null,"description":"The end of IP range which the subnet allocation should start with.\nDefaults to the last subnet of Network.\n","readOnly":false,"type":"null or string"},"services.flannel.subnetMin":{"declarations":["nixos/modules/services/networking/flannel.nix"],"default":null,"description":"The beginning of IP range which the subnet allocation should start with.\nDefaults to the first subnet of Network.\n","readOnly":false,"type":"null or string"},"services.flashpolicyd.enable":{"declarations":["nixos/modules/services/networking/flashpolicyd.nix"],"default":false,"description":"Whether to enable the Flash Policy server.  This is\nnecessary if you want Flash applications to make\nconnections to your server.\n","readOnly":false,"type":"unspecified"},"services.flashpolicyd.policy":{"declarations":["nixos/modules/services/networking/flashpolicyd.nix"],"default":"<?xml version=\"1.0\"?>\n<!DOCTYPE cross-domain-policy SYSTEM \"/xml/dtds/cross-domain-policy.dtd\">\n<cross-domain-policy> \n  <site-control permitted-cross-domain-policies=\"master-only\"/>\n  <allow-access-from domain=\"*\" to-ports=\"*\" />\n</cross-domain-policy>\n","description":"The policy to be served.  The default is to allow connections from any domain to any port.","readOnly":false,"type":"unspecified"},"services.fleet.enable":{"declarations":["nixos/modules/services/cluster/fleet.nix"],"default":false,"description":"Whether to enable fleet service.\n","readOnly":false,"type":"boolean"},"services.fleet.etcdCafile":{"declarations":["nixos/modules/services/cluster/fleet.nix"],"default":null,"description":"Fleet TLS ca file when SSL certificate authentication is enabled\nin etcd endpoints.\n","readOnly":false,"type":"null or path"},"services.fleet.etcdCertfile":{"declarations":["nixos/modules/services/cluster/fleet.nix"],"default":null,"description":"Fleet TLS cert file when SSL certificate authentication is enabled\nin etcd endpoints.\n","readOnly":false,"type":"null or path"},"services.fleet.etcdKeyfile":{"declarations":["nixos/modules/services/cluster/fleet.nix"],"default":null,"description":"Fleet TLS key file when SSL certificate authentication is enabled\nin etcd endpoints.\n","readOnly":false,"type":"null or path"},"services.fleet.etcdServers":{"declarations":["nixos/modules/services/cluster/fleet.nix"],"default":["http://127.0.0.1:2379"],"description":"Fleet list of etcd endpoints to use.\n","readOnly":false,"type":"list of strings"},"services.fleet.extraConfig":{"declarations":["nixos/modules/services/cluster/fleet.nix"],"default":{},"description":"Fleet extra config. See\n<link xlink:href=\"https://github.com/coreos/fleet/blob/master/Documentation/deployment-and-configuration.md\"/>\nfor configuration options.\n","example":{"_type":"literalExample","text":"{\n  VERBOSITY = 1;\n  ETCD_REQUEST_TIMEOUT = \"2.0\";\n  AGENT_TTL = \"40s\";\n}\n"},"readOnly":false,"type":"attribute set of strings"},"services.fleet.listen":{"declarations":["nixos/modules/services/cluster/fleet.nix"],"default":["/var/run/fleet.sock"],"description":"Fleet listening addresses.\n","example":["/var/run/fleet.sock","127.0.0.1:49153"],"readOnly":false,"type":"list of strings"},"services.fleet.metadata":{"declarations":["nixos/modules/services/cluster/fleet.nix"],"default":{},"description":"Key/value pairs that are published with the local to the fleet registry.\nThis data can be used directly by a client of fleet to make scheduling decisions.\n","example":{"_type":"literalExample","text":"{\n  region = \"us-west\";\n  az = \"us-west-1\";\n}\n"},"readOnly":false,"type":"attribute set of strings"},"services.fleet.publicIp":{"declarations":["nixos/modules/services/cluster/fleet.nix"],"default":"","description":"Fleet IP address that should be published with the local Machine's\nstate and any socket information. If not set, fleetd will attempt\nto detect the IP it should publish based on the machine's IP\nrouting information.\n","readOnly":false,"type":"null or string"},"services.flexget.config":{"declarations":["nixos/modules/services/torrent/flexget.nix"],"default":"","description":"The YAML configuration for FlexGet.","readOnly":false,"type":"string"},"services.flexget.enable":{"declarations":["nixos/modules/services/torrent/flexget.nix"],"default":false,"description":"Whether to enable Run FlexGet Daemon.","example":true,"readOnly":false,"type":"boolean"},"services.flexget.homeDir":{"declarations":["nixos/modules/services/torrent/flexget.nix"],"default":"/var/lib/deluge","description":"Where files live.","example":"/home/flexget","readOnly":false,"type":"path"},"services.flexget.interval":{"declarations":["nixos/modules/services/torrent/flexget.nix"],"default":"10m","description":"When to perform a <command>flexget</command> run. See <command>man 7 systemd.time</command> for the format.","example":"1h","readOnly":false,"type":"string"},"services.flexget.systemScheduler":{"declarations":["nixos/modules/services/torrent/flexget.nix"],"default":true,"description":"When true, execute the runs via the flexget-runner.timer. If false, you have to specify the settings yourself in the YML file.","example":"false","readOnly":false,"type":"boolean"},"services.flexget.user":{"declarations":["nixos/modules/services/torrent/flexget.nix"],"default":"deluge","description":"The user under which to run flexget.","example":"some_user","readOnly":false,"type":"string"},"services.fluentd.config":{"declarations":["nixos/modules/services/logging/fluentd.nix"],"default":"","description":"Fluentd config.","readOnly":false,"type":"string"},"services.fluentd.enable":{"declarations":["nixos/modules/services/logging/fluentd.nix"],"default":false,"description":"Whether to enable fluentd.","readOnly":false,"type":"boolean"},"services.foldingAtHome.config":{"declarations":["nixos/modules/services/misc/folding-at-home.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the\nconfiguration file.\n","readOnly":false,"type":"unspecified"},"services.foldingAtHome.enable":{"declarations":["nixos/modules/services/misc/folding-at-home.nix"],"default":false,"description":"Whether to enable the Folding@Home to use idle CPU time.\n","readOnly":false,"type":"unspecified"},"services.foldingAtHome.nickname":{"declarations":["nixos/modules/services/misc/folding-at-home.nix"],"default":"Anonymous","description":"A unique handle for statistics.\n","readOnly":false,"type":"unspecified"},"services.fourStore.database":{"declarations":["nixos/modules/services/databases/4store.nix"],"default":"","description":"RDF database name. If it doesn't exist, it will be created. Databases are stored in /var/lib/4store.","readOnly":false,"type":"unspecified"},"services.fourStore.enable":{"declarations":["nixos/modules/services/databases/4store.nix"],"default":false,"description":"Whether to enable 4Store RDF database server.","readOnly":false,"type":"unspecified"},"services.fourStore.options":{"declarations":["nixos/modules/services/databases/4store.nix"],"default":"","description":"Extra CLI options to pass to 4Store.","readOnly":false,"type":"unspecified"},"services.fourStoreEndpoint.database":{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":"","description":"RDF database name to expose via the endpoint. Defaults to local 4Store database name.","readOnly":false,"type":"unspecified"},"services.fourStoreEndpoint.enable":{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":false,"description":"Whether to enable 4Store SPARQL endpoint.","readOnly":false,"type":"unspecified"},"services.fourStoreEndpoint.listenAddress":{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":null,"description":"IP address to listen on.","readOnly":false,"type":"unspecified"},"services.fourStoreEndpoint.options":{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":"","description":"Extra CLI options to pass to 4Store's 4s-httpd process.","readOnly":false,"type":"unspecified"},"services.fourStoreEndpoint.port":{"declarations":["nixos/modules/services/databases/4store-endpoint.nix"],"default":8080,"description":"port to listen on.","readOnly":false,"type":"unspecified"},"services.fprintd.enable":{"declarations":["nixos/modules/services/security/fprintd.nix"],"default":false,"description":"Whether to enable fprintd daemon and PAM module for fingerprint readers handling.\n","readOnly":false,"type":"boolean"},"services.fprot.updater.enable":{"declarations":["nixos/modules/services/security/fprot.nix"],"default":false,"description":"Whether to enable automatic F-Prot virus definitions database updates.\n","readOnly":false,"type":"unspecified"},"services.fprot.updater.frequency":{"declarations":["nixos/modules/services/security/fprot.nix"],"default":30,"description":"Update virus definitions every X minutes.\n","readOnly":false,"type":"unspecified"},"services.fprot.updater.licenseKeyfile":{"declarations":["nixos/modules/services/security/fprot.nix"],"description":"License keyfile. Defaults to the one supplied with installation package.\n","readOnly":false,"type":"unspecified"},"services.fprot.updater.productData":{"declarations":["nixos/modules/services/security/fprot.nix"],"description":"product.data file. Defaults to the one supplied with installation package.\n","readOnly":false,"type":"unspecified"},"services.frandom.enable":{"declarations":["nixos/modules/services/security/frandom.nix"],"default":false,"description":"enable the /dev/frandom device (a very fast random number generator)\n","readOnly":false,"type":"boolean"},"services.freefall.devices":{"declarations":["nixos/modules/services/hardware/freefall.nix"],"default":["/dev/sda"],"description":"Device paths to all internal spinning hard drives.\n","readOnly":false,"type":"list of strings"},"services.freefall.enable":{"declarations":["nixos/modules/services/hardware/freefall.nix"],"default":false,"description":"Whether to protect HP/Dell laptop hard drives (not SSDs) in free fall.\n","readOnly":false,"type":"boolean"},"services.freefall.package":{"declarations":["nixos/modules/services/hardware/freefall.nix"],"default":"pkgs.freefall","description":"freefall derivation to use.\n","readOnly":false,"type":"package"},"services.freenet.enable":{"declarations":["nixos/modules/services/networking/freenet.nix"],"default":false,"description":"Enable the Freenet daemon","readOnly":false,"type":"boolean"},"services.freenet.nice":{"declarations":["nixos/modules/services/networking/freenet.nix"],"default":10,"description":"Set the nice level for the Freenet daemon","readOnly":false,"type":"integer"},"services.gale.domain":{"declarations":["nixos/modules/services/networking/gale.nix"],"default":"","description":"Domain name for the Gale system.","readOnly":false,"type":"string"},"services.gale.enable":{"declarations":["nixos/modules/services/networking/gale.nix"],"default":false,"description":"Whether to enable the Gale messaging daemon.","example":true,"readOnly":false,"type":"boolean"},"services.gale.extraConfig":{"declarations":["nixos/modules/services/networking/gale.nix"],"default":"","description":"Additional text to be added to <filename>/etc/gale/conf</filename>.\n","readOnly":false,"type":"string"},"services.gale.group":{"declarations":["nixos/modules/services/networking/gale.nix"],"default":"gale","description":"Group name for the Gale daemon.","readOnly":false,"type":"string"},"services.gale.keyPath":{"declarations":["nixos/modules/services/networking/gale.nix"],"default":null,"description":"Directory containing the key pair for this Gale domain.  The expected\nfilename will be taken from the domain option with \".gpri\" and \".gpub\"\nappended.\n","readOnly":false,"type":"null or path"},"services.gale.setuidWrapper":{"declarations":["nixos/modules/services/networking/gale.nix"],"default":null,"description":"Configuration for the Gale gksign setuid wrapper.","readOnly":false,"type":"unspecified"},"services.gale.user":{"declarations":["nixos/modules/services/networking/gale.nix"],"default":"gale","description":"Username for the Gale daemon.","readOnly":false,"type":"string"},"services.gammu-smsd.backend.files.errorSMSPath":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"/var/spool/sms/error/","description":"Where SMSes with error in transmission is placed","readOnly":false,"type":"path"},"services.gammu-smsd.backend.files.inboxPath":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"/var/spool/sms/inbox/","description":"Where the received SMSes are stored","readOnly":false,"type":"path"},"services.gammu-smsd.backend.files.outboxPath":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"/var/spool/sms/outbox/","description":"Where SMSes to be sent should be placed","readOnly":false,"type":"path"},"services.gammu-smsd.backend.files.sentSMSPath":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"/var/spool/sms/sent/","description":"Where the transmitted SMSes are placed","readOnly":false,"type":"path"},"services.gammu-smsd.backend.service":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"null","description":"Service to use to store sms data.","readOnly":false,"type":"one of \"null\", \"files\", \"sql\""},"services.gammu-smsd.backend.sql.database":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":null,"description":"Database name to store sms data","readOnly":false,"type":"string"},"services.gammu-smsd.backend.sql.driver":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"description":"DB driver to use","readOnly":false,"type":"one of \"native_mysql\", \"native_pgsql\", \"odbc\", \"dbi\""},"services.gammu-smsd.backend.sql.host":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"localhost","description":"Database server address","readOnly":false,"type":"string"},"services.gammu-smsd.backend.sql.password":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":null,"description":"User password used for connetion to the database","readOnly":false,"type":"null or string"},"services.gammu-smsd.backend.sql.sqlDialect":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":null,"description":"SQL dialect to use (odbc driver only)","readOnly":false,"type":"null or string"},"services.gammu-smsd.backend.sql.user":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":null,"description":"User name used for connection to the database","readOnly":false,"type":"null or string"},"services.gammu-smsd.device.connection":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"at","description":"Protocol which will be used to talk to the phone","readOnly":false,"type":"string"},"services.gammu-smsd.device.group":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"root","description":"Owner group of the device","example":"dialout","readOnly":false,"type":"string"},"services.gammu-smsd.device.path":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"description":"Device node or address of the phone","example":"/dev/ttyUSB2","readOnly":false,"type":"path"},"services.gammu-smsd.device.pin":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":null,"description":"PIN code for the simcard","readOnly":false,"type":"null or string"},"services.gammu-smsd.device.synchronizeTime":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":true,"description":"Whether to set time from computer to the phone during starting connection","readOnly":false,"type":"boolean"},"services.gammu-smsd.enable":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":false,"description":"Whether to enable gammu-smsd daemon.","example":true,"readOnly":false,"type":"boolean"},"services.gammu-smsd.extraConfig.gammu":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"","description":"Extra config lines to be added into [gammu] section","readOnly":false,"type":"string"},"services.gammu-smsd.extraConfig.smsd":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"","description":"Extra config lines to be added into [smsd] section","readOnly":false,"type":"string"},"services.gammu-smsd.log.file":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"syslog","description":"Path to file where information about communication will be stored","readOnly":false,"type":"string"},"services.gammu-smsd.log.format":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"errors","description":"Determines what will be logged to the LogFile","readOnly":false,"type":"one of \"nothing\", \"text\", \"textall\", \"textalldate\", \"errors\", \"errorsdate\", \"binary\""},"services.gammu-smsd.user":{"declarations":["nixos/modules/services/misc/gammu-smsd.nix"],"default":"smsd","description":"User that has access to the device","readOnly":false,"type":"string"},"services.gateone.enable":{"declarations":["nixos/modules/services/networking/gateone.nix"],"default":false,"description":"Whether to enable GateOne server.","example":true,"readOnly":false,"type":"boolean"},"services.gateone.pidDir":{"declarations":["nixos/modules/services/networking/gateone.nix"],"default":"/run/gateone","description":"Path of pid files for GateOne.","readOnly":false,"type":"path"},"services.gateone.settingsDir":{"declarations":["nixos/modules/services/networking/gateone.nix"],"default":"/var/lib/gateone","description":"Path of configuration files for GateOne.","readOnly":false,"type":"path"},"services.gdomap.enable":{"declarations":["nixos/modules/services/networking/gdomap.nix"],"default":false,"description":"Whether to enable GNUstep Distributed Objects name server.","example":true,"readOnly":false,"type":"boolean"},"services.geoclue2.enable":{"declarations":["nixos/modules/services/desktops/geoclue2.nix"],"default":false,"description":"Whether to enable GeoClue 2 daemon, a DBus service\nthat provides location informationfor accessing.\n","readOnly":false,"type":"boolean"},"services.ghostOne.config":{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":"","description":"Extra configuration options.","readOnly":false,"type":"unspecified"},"services.ghostOne.enable":{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":false,"description":"Enable Ghost-One Warcraft3 game hosting server.","readOnly":false,"type":"unspecified"},"services.ghostOne.language":{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":"English","description":"The language of bot messages: English, Spanish, Russian, Serbian or Turkish.","readOnly":false,"type":"one of \"English\", \"Spanish\", \"Russian\", \"Serbian\", \"Turkish\""},"services.ghostOne.mappath":{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":"","description":"The path to the directory where you keep your map files. GHost One doesn't require\nmap files but if it has access to them it can send them to players and automatically\ncalculate most map config values. GHost One will search [bot_mappath + map_localpath]\nfor the map file (map_localpath is set in each map's config file).\n","readOnly":false,"type":"unspecified"},"services.ghostOne.war3path":{"declarations":["nixos/modules/services/games/ghost-one.nix"],"default":"","description":"The path to your local Warcraft III directory, which must contain war3.exe, storm.dll, and game.dll.\n","readOnly":false,"type":"unspecified"},"services.gitDaemon.basePath":{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"Remap all the path requests as relative to the given path. For example,\nif you set base-path to /srv/git, then if you later try to pull\ngit://example.com/hello.git, Git daemon will interpret the path as /srv/git/hello.git.\n","example":"/srv/git/","readOnly":false,"type":"string"},"services.gitDaemon.enable":{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":false,"description":"Enable Git daemon, which allows public hosting of git repositories\nwithout any access controls. This is mostly intended for read-only access.\n\nYou can allow write access by setting daemon.receivepack configuration\nitem of the repository to true. This is solely meant for a closed LAN setting\nwhere everybody is friendly.\n\nIf you need any access controls, use something else.\n","readOnly":false,"type":"boolean"},"services.gitDaemon.exportAll":{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":false,"description":"Publish all directories that look like Git repositories (have the objects\nand refs subdirectories), even if they do not have the git-daemon-export-ok file.\n\nIf disabled, you need to touch .git/git-daemon-export-ok in each repository\nyou want the daemon to publish.\n\nWarning: enabling this without a repository whitelist or basePath\npublishes every git repository you have.\n","readOnly":false,"type":"boolean"},"services.gitDaemon.group":{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"git","description":"Group under which Git daemon would be running.","readOnly":false,"type":"string"},"services.gitDaemon.listenAddress":{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"Listen on a specific IP address or hostname.","example":"example.com","readOnly":false,"type":"string"},"services.gitDaemon.options":{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"","description":"Extra configuration options to be passed to Git daemon.","readOnly":false,"type":"string"},"services.gitDaemon.port":{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":9418,"description":"Port to listen on.","readOnly":false,"type":"integer"},"services.gitDaemon.repositories":{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":[],"description":"A whitelist of paths of git repositories, or directories containing repositories\nall of which would be published. Paths must not end in \"/\".\n\nWarning: leaving this empty and enabling exportAll publishes all\nrepositories in your filesystem or basePath if specified.\n","example":["/srv/git","/home/user/git/repo2"],"readOnly":false,"type":"list of strings"},"services.gitDaemon.user":{"declarations":["nixos/modules/services/networking/git-daemon.nix"],"default":"git","description":"User under which Git daemon would be running.","readOnly":false,"type":"string"},"services.gitlab-runner.configText":{"declarations":["nixos/modules/services/continuous-integration/gitlab-runner.nix"],"description":"Verbatim config.toml to use","readOnly":false,"type":"unspecified"},"services.gitlab-runner.enable":{"declarations":["nixos/modules/services/continuous-integration/gitlab-runner.nix"],"default":false,"description":"Whether to enable Gitlab Runner.","example":true,"readOnly":false,"type":"boolean"},"services.gitlab-runner.workDir":{"declarations":["nixos/modules/services/continuous-integration/gitlab-runner.nix"],"default":"/var/lib/gitlab-runner","description":"The working directory used","readOnly":false,"type":"path"},"services.gitlab.backupPath":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"/var/gitlab/state/backup","description":"Gitlab path for backups.","readOnly":false,"type":"string"},"services.gitlab.databaseHost":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"127.0.0.1","description":"Gitlab database hostname.","readOnly":false,"type":"string"},"services.gitlab.databaseName":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"gitlab","description":"Gitlab database name.","readOnly":false,"type":"string"},"services.gitlab.databasePassword":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"","description":"Gitlab database user password.","readOnly":false,"type":"string"},"services.gitlab.databaseUsername":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"gitlab","description":"Gitlab database user.","readOnly":false,"type":"string"},"services.gitlab.enable":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":false,"description":"Enable the gitlab service.\n","readOnly":false,"type":"boolean"},"services.gitlab.extraConfig":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":{},"description":"Extra options to be merged into config/gitlab.yml as nix\nattribute set.\n","example":{"gitlab":{"default_projects_features":{"builds":false}}},"readOnly":false,"type":"attribute set"},"services.gitlab.group":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"gitlab","description":"Group to run gitlab and all related services.","readOnly":false,"type":"string"},"services.gitlab.host":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"nixos","description":"Gitlab host name. Used e.g. for copy-paste URLs.","readOnly":false,"type":"string"},"services.gitlab.https":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":false,"description":"Whether gitlab prints URLs with https as scheme.","readOnly":false,"type":"boolean"},"services.gitlab.initialRootEmail":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"admin@local.host","description":"Initial email address of the root account if this is a new install.\n","readOnly":false,"type":"string"},"services.gitlab.initialRootPassword":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"UseNixOS!","description":"Initial password of the root account if this is a new install.\n","readOnly":false,"type":"string"},"services.gitlab.packages.gitlab":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"pkgs.gitlab","description":"Reference to the gitlab package","readOnly":false,"type":"package"},"services.gitlab.packages.gitlab-shell":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"pkgs.gitlab-shell","description":"Reference to the gitlab-shell package","readOnly":false,"type":"package"},"services.gitlab.packages.gitlab-workhorse":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"pkgs.gitlab-workhorse","description":"Reference to the gitlab-workhorse package","readOnly":false,"type":"package"},"services.gitlab.port":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":8080,"description":"Gitlab server port for copy-paste URLs, e.g. 80 or 443 if you're\nservice over https.\n","readOnly":false,"type":"integer"},"services.gitlab.secrets.db":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"description":"The secret is used to encrypt variables in the DB. If\nyou change or lose this key you will be unable to access variables\nstored in database.\n\nMake sure the secret is at least 30 characters and all random,\nno regular words or you'll be exposed to dictionary attacks.\n","readOnly":false,"type":"string"},"services.gitlab.secrets.otp":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"description":"The secret is used to encrypt secrets for OTP tokens. If\nyou change or lose this key, users which have 2FA enabled for login\nwon't be able to login anymore.\n\nMake sure the secret is at least 30 characters and all random,\nno regular words or you'll be exposed to dictionary attacks.\n","readOnly":false,"type":"string"},"services.gitlab.secrets.secret":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"description":"The secret is used to encrypt variables in the DB. If\nyou change or lose this key you will be unable to access variables\nstored in database.\n\nMake sure the secret is at least 30 characters and all random,\nno regular words or you'll be exposed to dictionary attacks.\n","readOnly":false,"type":"string"},"services.gitlab.smtp.address":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"localhost","description":"Address of the SMTP server for Gitlab.","readOnly":false,"type":"string"},"services.gitlab.smtp.authentication":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":null,"description":"Authentitcation type to use, see http://api.rubyonrails.org/classes/ActionMailer/Base.html","readOnly":false,"type":"null or string"},"services.gitlab.smtp.domain":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"localhost","description":"HELO domain to use for outgoing mail.","readOnly":false,"type":"string"},"services.gitlab.smtp.enable":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":false,"description":"Enable gitlab mail delivery over SMTP.","readOnly":false,"type":"boolean"},"services.gitlab.smtp.enableStartTLSAuto":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":true,"description":"Whether to try to use StartTLS.","readOnly":false,"type":"boolean"},"services.gitlab.smtp.opensslVerifyMode":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"peer","description":"How OpenSSL checks the certificate, see http://api.rubyonrails.org/classes/ActionMailer/Base.html","readOnly":false,"type":"string"},"services.gitlab.smtp.password":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":null,"description":"Password of the SMTP server for Gitlab.","readOnly":false,"type":"null or string"},"services.gitlab.smtp.port":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":465,"description":"Port of the SMTP server for Gitlab.","readOnly":false,"type":"integer"},"services.gitlab.smtp.username":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":null,"description":"Username of the SMTP server for Gitlab.","readOnly":false,"type":"null or string"},"services.gitlab.stateDir":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.gitlab.statePath</option>.","readOnly":false,"type":"unspecified"},"services.gitlab.statePath":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"/var/gitlab/state","description":"Gitlab state directory, logs are stored here.","readOnly":false,"type":"string"},"services.gitlab.user":{"declarations":["nixos/modules/services/misc/gitlab.nix"],"default":"gitlab","description":"User to run gitlab and all related services.","readOnly":false,"type":"string"},"services.gitolite.adminPubkey":{"declarations":["nixos/modules/services/misc/gitolite.nix"],"description":"Initial administrative public key for Gitolite. This should\nbe an SSH Public Key. Note that this key will only be used\nonce, upon the first initialization of the Gitolite user.\nThe key string cannot have any line breaks in it.\n","readOnly":false,"type":"string"},"services.gitolite.commonHooks":{"declarations":["nixos/modules/services/misc/gitolite.nix"],"default":[],"description":"A list of custom git hooks that get copied to <literal>~/.gitolite/hooks/common</literal>.\n","readOnly":false,"type":"list of paths"},"services.gitolite.dataDir":{"declarations":["nixos/modules/services/misc/gitolite.nix"],"default":"/var/lib/gitolite","description":"Gitolite home directory (used to store all the repositories).\n","readOnly":false,"type":"string"},"services.gitolite.enable":{"declarations":["nixos/modules/services/misc/gitolite.nix"],"default":false,"description":"Enable gitolite management under the\n<literal>gitolite</literal> user. After\nswitching to a configuration with Gitolite enabled, you can\nthen run <literal>git clone\ngitolite@host:gitolite-admin.git</literal> to manage it further.\n","readOnly":false,"type":"boolean"},"services.gitolite.user":{"declarations":["nixos/modules/services/misc/gitolite.nix"],"default":"gitolite","description":"Gitolite user account. This is the username of the gitolite endpoint.\n","readOnly":false,"type":"string"},"services.gnome3.at-spi2-core.enable":{"declarations":["nixos/modules/services/desktops/gnome3/at-spi2-core.nix"],"default":false,"description":"Whether to enable at-spi2-core, a service for the Assistive Technologies\navailable on the GNOME platform.\n","readOnly":false,"type":"boolean"},"services.gnome3.evolution-data-server.enable":{"declarations":["nixos/modules/services/desktops/gnome3/evolution-data-server.nix"],"default":false,"description":"Whether to enable Evolution Data Server, a collection of services for \nstoring addressbooks and calendars.\n","readOnly":false,"type":"boolean"},"services.gnome3.gnome-documents.enable":{"declarations":["nixos/modules/services/desktops/gnome3/gnome-documents.nix"],"default":false,"description":"Whether to enable GNOME Documents services, a document\nmanager application for GNOME.\n","readOnly":false,"type":"boolean"},"services.gnome3.gnome-keyring.enable":{"declarations":["nixos/modules/services/desktops/gnome3/gnome-keyring.nix"],"default":false,"description":"Whether to enable GNOME Keyring daemon, a service designed to\ntake care of the user's security credentials,\nsuch as user names and passwords.\n","readOnly":false,"type":"boolean"},"services.gnome3.gnome-online-accounts.enable":{"declarations":["nixos/modules/services/desktops/gnome3/gnome-online-accounts.nix"],"default":false,"description":"Whether to enable GNOME Online Accounts daemon, a service that provides\na single sign-on framework for the GNOME desktop.\n","readOnly":false,"type":"boolean"},"services.gnome3.gnome-online-miners.enable":{"declarations":["nixos/modules/services/desktops/gnome3/gnome-online-miners.nix"],"default":false,"description":"Whether to enable GNOME Online Miners, a service that\ncrawls through your online content.\n","readOnly":false,"type":"boolean"},"services.gnome3.gnome-terminal-server.enable":{"declarations":["nixos/modules/services/desktops/gnome3/gnome-terminal-server.nix"],"default":false,"description":"Whether to enable GNOME Terminal server service,\nneeded for gnome-terminal.\n","readOnly":false,"type":"boolean"},"services.gnome3.gnome-user-share.enable":{"declarations":["nixos/modules/services/desktops/gnome3/gnome-user-share.nix"],"default":false,"description":"Whether to enable GNOME User Share, a service that exports the\ncontents of the Public folder in your home directory on the local network.\n","readOnly":false,"type":"boolean"},"services.gnome3.gvfs.enable":{"declarations":["nixos/modules/services/desktops/gnome3/gvfs.nix"],"default":false,"description":"Whether to enable gvfs backends, userspace virtual filesystem used\nby GNOME components via D-Bus.\n","readOnly":false,"type":"boolean"},"services.gnome3.seahorse.enable":{"declarations":["nixos/modules/services/desktops/gnome3/seahorse.nix"],"default":false,"description":"Whether to enable Seahorse search provider for the GNOME Shell activity search.\n","readOnly":false,"type":"boolean"},"services.gnome3.sushi.enable":{"declarations":["nixos/modules/services/desktops/gnome3/sushi.nix"],"default":false,"description":"Whether to enable Sushi, a quick previewer for nautilus.\n","readOnly":false,"type":"boolean"},"services.gnome3.tracker.enable":{"declarations":["nixos/modules/services/desktops/gnome3/tracker.nix"],"default":false,"description":"Whether to enable Tracker services, a search engine,\nsearch tool and metadata storage system.\n","readOnly":false,"type":"boolean"},"services.gnunet.enable":{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":false,"description":"Whether to run the GNUnet daemon.  GNUnet is GNU's anonymous\npeer-to-peer communication and file sharing framework.\n","readOnly":false,"type":"unspecified"},"services.gnunet.extraOptions":{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":"","description":"Additional options that will be copied verbatim in `gnunet.conf'.\nSee `gnunet.conf(5)' for details.\n","readOnly":false,"type":"unspecified"},"services.gnunet.fileSharing.quota":{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":1024,"description":"Maximum file system usage (in MiB) for file sharing.\n","readOnly":false,"type":"unspecified"},"services.gnunet.load.hardNetUpBandwidth":{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":0,"description":"Hard bandwidth limit (in bits per second) when uploading\ndata.\n","readOnly":false,"type":"unspecified"},"services.gnunet.load.maxNetDownBandwidth":{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":50000,"description":"Maximum bandwidth usage (in bits per second) for GNUnet\nwhen downloading data.\n","readOnly":false,"type":"unspecified"},"services.gnunet.load.maxNetUpBandwidth":{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":50000,"description":"Maximum bandwidth usage (in bits per second) for GNUnet\nwhen downloading data.\n","readOnly":false,"type":"unspecified"},"services.gnunet.tcp.port":{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":2086,"description":"The TCP port for use by GNUnet.\n","readOnly":false,"type":"unspecified"},"services.gnunet.udp.port":{"declarations":["nixos/modules/services/networking/gnunet.nix"],"default":2086,"description":"The UDP port for use by GNUnet.\n","readOnly":false,"type":"unspecified"},"services.gocd-agent.agentConfig":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":"","description":"Agent registration configuration.\n","example":"agent.auto.register.resources=ant,java\nagent.auto.register.environments=QA,Performance\nagent.auto.register.hostname=Agent01\n","readOnly":false,"type":"string"},"services.gocd-agent.enable":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":false,"description":"Whether to enable gocd-agent.","example":true,"readOnly":false,"type":"boolean"},"services.gocd-agent.environment":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":{},"description":"Additional environment variables to be passed to the Go.CD agent process.\nAs a base environment, Go.CD agent receives NIX_PATH from\n<option>environment.sessionVariables</option>, NIX_REMOTE is set to\n\"daemon\".\n","readOnly":false,"type":"attribute set of strings"},"services.gocd-agent.extraGroups":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":[],"description":"List of extra groups that the \"gocd-agent\" user should be a part of.\n","example":["wheel","docker"],"readOnly":false,"type":"list of strings"},"services.gocd-agent.extraOptions":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":[],"description":"Specifies additional command line arguments to pass to Go.CD agent\njava process.  Example contains debug and gcLog arguments.\n","example":["-X debug","-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006","-verbose:gc","-Xloggc:go-agent-gc.log","-XX:+PrintGCTimeStamps","-XX:+PrintTenuringDistribution","-XX:+PrintGCDetails","-XX:+PrintGC"],"readOnly":false,"type":"unspecified"},"services.gocd-agent.goServer":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":"https://127.0.0.1:8154/go","description":"URL of the GoCD Server to attach the Go.CD Agent to.\n","readOnly":false,"type":"string"},"services.gocd-agent.group":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":"gocd-agent","description":"If the default user \"gocd-agent\" is configured then this is the primary\ngroup of that user.\n","readOnly":false,"type":"string"},"services.gocd-agent.initialJavaHeapSize":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":"128m","description":"Specifies the initial java heap memory size for the Go.CD agent java process.\n","readOnly":false,"type":"string"},"services.gocd-agent.maxJavaHeapMemory":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":"256m","description":"Specifies the java maximum heap memory size for the Go.CD agent java process.\n","readOnly":false,"type":"string"},"services.gocd-agent.packages":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":"[ pkgs.stdenv pkgs.jre pkgs.git config.programs.ssh.package pkgs.nix ]","description":"Packages to add to PATH for the Go.CD agent process.\n","readOnly":false,"type":"list of packages"},"services.gocd-agent.startupOptions":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":["-Xms128m","-Xmx256m","-Djava.io.tmpdir=/tmp","-Dcruise.console.publish.interval=10","-Djava.security.egd=file:/dev/./urandom"],"description":"Specifies startup command line arguments to pass to Go.CD agent\njava process.\n","readOnly":false,"type":"unspecified"},"services.gocd-agent.user":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":"gocd-agent","description":"User the Go.CD agent should execute under.\n","readOnly":false,"type":"string"},"services.gocd-agent.workDir":{"declarations":["nixos/modules/services/continuous-integration/gocd-agent/default.nix"],"default":"/var/lib/go-agent","description":"Specifies the working directory in which the Go.CD agent java archive resides.\n","readOnly":false,"type":"string"},"services.gocd-server.enable":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":false,"description":"Whether to enable gocd-server.","example":true,"readOnly":false,"type":"boolean"},"services.gocd-server.environment":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":{},"description":"Additional environment variables to be passed to the gocd-server process.\nAs a base environment, gocd-server receives NIX_PATH from\n<option>environment.sessionVariables</option>, NIX_REMOTE is set to\n\"daemon\".\n","readOnly":false,"type":"attribute set of strings"},"services.gocd-server.extraGroups":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":[],"description":"List of extra groups that the \"gocd-server\" user should be a part of.\n","example":["wheel","docker"],"readOnly":false,"type":"unspecified"},"services.gocd-server.extraOptions":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":[],"description":"Specifies additional command line arguments to pass to Go.CD server's\njava process.  Example contains debug and gcLog arguments.\n","example":["-X debug","-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005","-verbose:gc","-Xloggc:go-server-gc.log","-XX:+PrintGCTimeStamps","-XX:+PrintTenuringDistribution","-XX:+PrintGCDetails","-XX:+PrintGC"],"readOnly":false,"type":"unspecified"},"services.gocd-server.group":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":"gocd-server","description":"If the default user \"gocd-server\" is configured then this is the primary group of that user.\n","readOnly":false,"type":"string"},"services.gocd-server.initialJavaHeapSize":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":"512m","description":"Specifies the initial java heap memory size for the Go.CD server's java process.\n","readOnly":false,"type":"string"},"services.gocd-server.listenAddress":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":"0.0.0.0","description":"Specifies the bind address on which the Go.CD server HTTP interface listens.\n","example":"localhost","readOnly":false,"type":"string"},"services.gocd-server.maxJavaHeapMemory":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":"1024m","description":"Specifies the java maximum heap memory size for the Go.CD server's java process.\n","readOnly":false,"type":"string"},"services.gocd-server.packages":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":"[ pkgs.stdenv pkgs.jre pkgs.git config.programs.ssh.package pkgs.nix ]","description":"Packages to add to PATH for the Go.CD server's process.\n","readOnly":false,"type":"list of packages"},"services.gocd-server.port":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":8153,"description":"Specifies port number on which the Go.CD server HTTP interface listens.\n","readOnly":false,"type":"integer"},"services.gocd-server.sslPort":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":8154,"description":"Specifies port number on which the Go.CD server HTTPS interface listens.\n","readOnly":false,"type":"integer"},"services.gocd-server.startupOptions":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":["-Xms512m","-Xmx1024m","-Dcruise.listen.host=0.0.0.0","-Duser.language=en","-Djruby.rack.request.size.threshold.bytes=30000000","-Duser.country=US","-Dcruise.config.dir=/var/lib/go-server/conf","-Dcruise.config.file=/var/lib/go-server/conf/cruise-config.xml","-Dcruise.server.port=8153","-Dcruise.server.ssl.port=8154"],"description":"Specifies startup command line arguments to pass to Go.CD server\njava process.\n","readOnly":false,"type":"unspecified"},"services.gocd-server.user":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":"gocd-server","description":"User the Go.CD server should execute under.\n","readOnly":false,"type":"string"},"services.gocd-server.workDir":{"declarations":["nixos/modules/services/continuous-integration/gocd-server/default.nix"],"default":"/var/lib/go-server","description":"Specifies the working directory in which the Go.CD server java archive resides.\n","readOnly":false,"type":"string"},"services.gogoclient.autorun":{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":true,"description":"Whether to automatically start the tunnel.\n","readOnly":false,"type":"unspecified"},"services.gogoclient.enable":{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":false,"description":"Enable the gogoCLIENT IPv6 tunnel.\n","readOnly":false,"type":"boolean"},"services.gogoclient.password":{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":"","description":"Path to a file (as a string), containing your gogoNET password, if any.\n","readOnly":false,"type":"string"},"services.gogoclient.server":{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":"anonymous.freenet6.net","description":"The Gateway6 server to be used.","example":"broker.freenet6.net","readOnly":false,"type":"unspecified"},"services.gogoclient.username":{"declarations":["nixos/modules/services/networking/gogoclient.nix"],"default":"","description":"Your Gateway6 login name, if any.\n","readOnly":false,"type":"unspecified"},"services.gpm.enable":{"declarations":["nixos/modules/services/ttys/gpm.nix"],"default":false,"description":"Whether to enable GPM, the General Purpose Mouse daemon,\nwhich enables mouse support in virtual consoles.\n","readOnly":false,"type":"boolean"},"services.gpm.protocol":{"declarations":["nixos/modules/services/ttys/gpm.nix"],"default":"ps/2","description":"Mouse protocol to use.","readOnly":false,"type":"string"},"services.gpsd.debugLevel":{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":0,"description":"The debugging level.\n","readOnly":false,"type":"integer"},"services.gpsd.device":{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":"/dev/ttyUSB0","description":"A device may be a local serial device for GPS input, or a URL of the form:\n     <literal>[{dgpsip|ntrip}://][user:passwd@]host[:port][/stream]</literal>\nin which case it specifies an input source for DGPS or ntrip data.\n","readOnly":false,"type":"string"},"services.gpsd.enable":{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":false,"description":"Whether to enable `gpsd', a GPS service daemon.\n","readOnly":false,"type":"boolean"},"services.gpsd.port":{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":2947,"description":"The port where to listen for TCP connections.\n","readOnly":false,"type":"integer"},"services.gpsd.readonly":{"declarations":["nixos/modules/services/misc/gpsd.nix"],"default":true,"description":"Whether to enable the broken-device-safety, otherwise\nknown as read-only mode.  Some popular bluetooth and USB\nreceivers lock up or become totally inaccessible when\nprobed or reconfigured.  This switch prevents gpsd from\nwriting to a receiver.  This means that gpsd cannot\nconfigure the receiver for optimal performance, but it\nalso means that gpsd cannot break the receiver.  A better\nsolution would be for Bluetooth to not be so fragile.  A\nplatform independent method to identify\nserial-over-Bluetooth devices would also be nice.\n","readOnly":false,"type":"boolean"},"services.grafana.addr":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"127.0.0.1","description":"Listening address.","readOnly":false,"type":"string"},"services.grafana.analytics.reporting.enable":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":true,"description":"Whether to allow anonymous usage reporting to stats.grafana.net","readOnly":false,"type":"boolean"},"services.grafana.auth.anonymous.enable":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":false,"description":"Whether to allow anonymous access","readOnly":false,"type":"boolean"},"services.grafana.auth.anonymous.org_name":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"Main Org.","description":"Which organization to allow anonymous access to","readOnly":false,"type":"string"},"services.grafana.auth.anonymous.org_role":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"Viewer","description":"Which role anonymous users have in the organization","readOnly":false,"type":"string"},"services.grafana.certFile":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"","description":"Cert file for ssl.","readOnly":false,"type":"string"},"services.grafana.certKey":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"","description":"Cert key for ssl.","readOnly":false,"type":"string"},"services.grafana.dataDir":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"/var/lib/grafana","description":"Data directory.","readOnly":false,"type":"path"},"services.grafana.database.host":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"127.0.0.1:3306","description":"Database host.","readOnly":false,"type":"string"},"services.grafana.database.name":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"grafana","description":"Database name.","readOnly":false,"type":"string"},"services.grafana.database.password":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"","description":"Database password.","readOnly":false,"type":"string"},"services.grafana.database.path":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"/var/lib/grafana/data/grafana.db","description":"Database path.","readOnly":false,"type":"path"},"services.grafana.database.type":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"sqlite3","description":"Database type.","readOnly":false,"type":"one of \"mysql\", \"sqlite3\", \"postgresql\""},"services.grafana.database.user":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"root","description":"Database user.","readOnly":false,"type":"string"},"services.grafana.domain":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"localhost","description":"The public facing domain name used to access grafana from a browser.","readOnly":false,"type":"string"},"services.grafana.enable":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":false,"description":"Whether to enable grafana.","example":true,"readOnly":false,"type":"boolean"},"services.grafana.extraOptions":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":{},"description":"Extra configuration options passed as env variables as specified in\n<link xlink:href=\"http://docs.grafana.org/installation/configuration/\">documentation</link>,\nbut without GF_ prefix\n","readOnly":false,"type":"attribute set of strings"},"services.grafana.package":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"pkgs.grafana","description":"Package to use.","readOnly":false,"type":"package"},"services.grafana.port":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":3000,"description":"Listening port.","readOnly":false,"type":"integer"},"services.grafana.protocol":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"http","description":"Which protocol to listen.","readOnly":false,"type":"one of \"http\", \"https\""},"services.grafana.rootUrl":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"%(protocol)s://%(domain)s:%(http_port)s/","description":"Full public facing url.","readOnly":false,"type":"string"},"services.grafana.security.adminPassword":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"admin","description":"Default admin password.","readOnly":false,"type":"string"},"services.grafana.security.adminUser":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"admin","description":"Default admin username.","readOnly":false,"type":"string"},"services.grafana.security.secretKey":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"SW2YcwTIb9zpOOhoPsMm","description":"Secret key used for signing.","readOnly":false,"type":"string"},"services.grafana.staticRootPath":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"${pkgs.grafana}/share/grafana/public","description":"Root path for static assets.","readOnly":false,"type":"string"},"services.grafana.users.allowOrgCreate":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":false,"description":"Whether user is allowed to create organizations.","readOnly":false,"type":"boolean"},"services.grafana.users.allowSignUp":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":false,"description":"Disable user signup / registration","readOnly":false,"type":"boolean"},"services.grafana.users.autoAssignOrg":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":true,"description":"Whether to automatically assign new users to default org.","readOnly":false,"type":"boolean"},"services.grafana.users.autoAssignOrgRole":{"declarations":["nixos/modules/services/monitoring/grafana.nix"],"default":"Viewer","description":"Default role new users will be auto assigned.","readOnly":false,"type":"one of \"Viewer\", \"Editor\""},"services.graphite.api.enable":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":false,"description":"Whether to enable graphite api. Graphite api is lightweight alternative\nto graphite web, with api and without dashboard. It's advised to use\ngrafana as alternative dashboard and influxdb as alternative to\ngraphite carbon.\n\nFor more information visit\n<link xlink:href=\"http://graphite-api.readthedocs.org/en/latest/\"/>\n","readOnly":false,"type":"boolean"},"services.graphite.api.extraConfig":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"whisper:\n  directories:\n      - /var/db/graphite/whisper\n","description":"Extra configuration for graphite api.","example":"allowed_origins:\n  - dashboard.example.com\ncheat_times: true\ninfluxdb:\n  host: localhost\n  port: 8086\n  user: influxdb\n  pass: influxdb\n  db: metrics\ncache:\n  CACHE_TYPE: 'filesystem'\n  CACHE_DIR: '/tmp/graphite-api-cache'\n","readOnly":false,"type":"string"},"services.graphite.api.finders":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":[],"description":"List of finder plugins to load.","example":{"_type":"literalExample","text":"[ pkgs.python27Packages.graphite_influxdb ]"},"readOnly":false,"type":"list of packages"},"services.graphite.api.functions":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":["graphite_api.functions.SeriesFunctions","graphite_api.functions.PieFunctions"],"description":"List of functions to load.","readOnly":false,"type":"list of strings"},"services.graphite.api.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.graphite.api.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.graphite.api.listenAddress":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"127.0.0.1","description":"Graphite web service listen address.","readOnly":false,"type":"string"},"services.graphite.api.package":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"pkgs.python27Packages.graphite_api","description":"Package to use for graphite api.","readOnly":false,"type":"package"},"services.graphite.api.port":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":8080,"description":"Graphite api service port.","readOnly":false,"type":"integer"},"services.graphite.beacon.config":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":{},"description":"Graphite beacon configuration.","readOnly":false,"type":"attribute set"},"services.graphite.beacon.enable":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":false,"description":"Whether to enable graphite beacon.","example":true,"readOnly":false,"type":"boolean"},"services.graphite.carbon.aggregationRules":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":null,"description":"Defines if and how received metrics will be aggregated.","example":"<env>.applications.<app>.all.requests (60) = sum <env>.applications.<app>.*.requests\n<env>.applications.<app>.all.latency (60) = avg <env>.applications.<app>.*.latency\n","readOnly":false,"type":"null or string"},"services.graphite.carbon.blacklist":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":null,"description":"Any metrics received which match one of the experssions will be dropped.","example":"^some.noisy.metric.prefix..*","readOnly":false,"type":"null or string"},"services.graphite.carbon.config":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"[cache]\n# Listen on localhost by default for security reasons\nUDP_RECEIVER_INTERFACE = 127.0.0.1\nPICKLE_RECEIVER_INTERFACE = 127.0.0.1\nLINE_RECEIVER_INTERFACE = 127.0.0.1\nCACHE_QUERY_INTERFACE = 127.0.0.1\n# Do not log every update\nLOG_UPDATES = False\nLOG_CACHE_HITS = False\n","description":"Content of carbon configuration file.","readOnly":false,"type":"string"},"services.graphite.carbon.enableAggregator":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":false,"description":"Whether to enable carbon aggregator, the carbon buffering service.","readOnly":false,"type":"boolean"},"services.graphite.carbon.enableCache":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":false,"description":"Whether to enable carbon cache, the graphite storage daemon.","readOnly":false,"type":"boolean"},"services.graphite.carbon.enableRelay":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":false,"description":"Whether to enable carbon relay, the carbon replication and sharding service.","readOnly":false,"type":"boolean"},"services.graphite.carbon.relayRules":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":null,"description":"Relay rules are used to send certain metrics to a certain backend.","example":"[example]\npattern = ^mydata\\.foo\\..+\nservers = 10.1.2.3, 10.1.2.4:2004, myserver.mydomain.com\n","readOnly":false,"type":"null or string"},"services.graphite.carbon.rewriteRules":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":null,"description":"Regular expression patterns that can be used to rewrite metric names\nin a search and replace fashion.\n","example":"[post]\n_sum$ =\n_avg$ =\n","readOnly":false,"type":"null or string"},"services.graphite.carbon.storageAggregation":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":null,"description":"Defines how to aggregate data to lower-precision retentions.","example":"[all_min]\npattern = \\.min$\nxFilesFactor = 0.1\naggregationMethod = min\n","readOnly":false,"type":"null or string"},"services.graphite.carbon.storageSchemas":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"","description":"Defines retention rates for storing metrics.","example":"[apache_busyWorkers]\npattern = ^servers\\.www.*\\.workers\\.busyWorkers$\nretentions = 15s:7d,1m:21d,15m:5y\n","readOnly":false,"type":"null or string"},"services.graphite.carbon.whitelist":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":null,"description":"Only metrics received which match one of the experssions will be persisted.","example":".*","readOnly":false,"type":"null or string"},"services.graphite.dataDir":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"/var/db/graphite","description":"Data directory for graphite.\n","readOnly":false,"type":"path"},"services.graphite.pager.alerts":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"alerts:\n  - target: constantLine(100)\n    warning: 90\n    critical: 200\n    name: Test\n","description":"Alerts configuration for graphite-pager.","example":"pushbullet_key: pushbullet_api_key\nalerts:\n  - target: stats.seatgeek.app.deal_quality.venue_info_cache.hit\n    warning: .5\n    critical: 1\n    name: Deal quality venue cache hits\n","readOnly":false,"type":"string"},"services.graphite.pager.enable":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":false,"description":"Whether to enable graphite-pager service. For more information visit\n<link xlink:href=\"https://github.com/seatgeek/graphite-pager\"/>\n","readOnly":false,"type":"boolean"},"services.graphite.pager.graphiteUrl":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"http://127.0.0.1:8080","description":"URL to your graphite service.","readOnly":false,"type":"string"},"services.graphite.pager.redisUrl":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"redis://localhost:6379/","description":"Redis connection string.","readOnly":false,"type":"string"},"services.graphite.seyren.enable":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":false,"description":"Whether to enable seyren service.","readOnly":false,"type":"boolean"},"services.graphite.seyren.extraConfig":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":{},"description":"Extra seyren configuration. See\n<link xlink:href='https://github.com/scobal/seyren#config' />\n","example":{"_type":"literalExample","text":"{\n  GRAPHITE_USERNAME = \"user\";\n  GRAPHITE_PASSWORD = \"pass\";\n}\n"},"readOnly":false,"type":"attribute set of strings"},"services.graphite.seyren.graphiteUrl":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"http://127.0.0.1:8080","description":"Host where graphite service runs.","readOnly":false,"type":"string"},"services.graphite.seyren.mongoUrl":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"mongodb://127.0.0.1:27017/seyren","description":"Mongodb connection string.","readOnly":false,"type":"string"},"services.graphite.seyren.port":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":8081,"description":"Seyren listening port.","readOnly":false,"type":"integer"},"services.graphite.seyren.seyrenUrl":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"http://localhost:8081/","description":"Host where seyren is accessible.","readOnly":false,"type":"string"},"services.graphite.web.enable":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":false,"description":"Whether to enable graphite web frontend.","readOnly":false,"type":"boolean"},"services.graphite.web.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.graphite.web.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.graphite.web.listenAddress":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":"127.0.0.1","description":"Graphite web frontend listen address.","readOnly":false,"type":"string"},"services.graphite.web.port":{"declarations":["nixos/modules/services/monitoring/graphite.nix"],"default":8080,"description":"Graphite web frontend port.","readOnly":false,"type":"integer"},"services.graylog.elasticsearchClusterName":{"declarations":["nixos/modules/services/logging/graylog.nix"],"description":"This must be the same as for your Elasticsearch cluster","example":"graylog","readOnly":false,"type":"string"},"services.graylog.elasticsearchDiscoveryZenPingMulticastEnabled":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":false,"description":"Whether to use elasticsearch multicast discovery","readOnly":false,"type":"boolean"},"services.graylog.elasticsearchDiscoveryZenPingUnicastHosts":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":"127.0.0.1:9300","description":"Tells Graylogs Elasticsearch client how to find other cluster members. See Elasticsearch documentation for details","readOnly":false,"type":"string"},"services.graylog.enable":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":false,"description":"Whether to enable Graylog.","example":true,"readOnly":false,"type":"boolean"},"services.graylog.extraConfig":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":"","description":"Any other configuration options you might want to add","readOnly":false,"type":"string"},"services.graylog.isMaster":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":true,"description":"Whether this is the master instance of your Graylog cluster","readOnly":false,"type":"boolean"},"services.graylog.messageJournalDir":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":"/var/lib/graylog/data/journal","description":"The directory which will be used to store the message journal. The directory must be exclusively used by Graylog and must not contain any other files than the ones created by Graylog itself","readOnly":false,"type":"string"},"services.graylog.mongodbUri":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":"mongodb://localhost/graylog","description":"MongoDB connection string. See http://docs.mongodb.org/manual/reference/connection-string/ for details","readOnly":false,"type":"string"},"services.graylog.nodeIdFile":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":"/var/lib/graylog/server/node-id","description":"Path of the file containing the graylog node-id","readOnly":false,"type":"string"},"services.graylog.package":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":"pkgs.graylog","description":"Graylog package to use.","example":{"_type":"literalExample","text":"pkgs.graylog"},"readOnly":false,"type":"package"},"services.graylog.passwordSecret":{"declarations":["nixos/modules/services/logging/graylog.nix"],"description":"You MUST set a secret to secure/pepper the stored user passwords here. Use at least 64 characters.\nGenerate one by using for example: pwgen -N 1 -s 96\n","readOnly":false,"type":"string"},"services.graylog.rootPasswordSha2":{"declarations":["nixos/modules/services/logging/graylog.nix"],"description":"You MUST specify a hash password for the root user (which you only need to initially set up the\nsystem and in case you lose connectivity to your authentication backend)\nThis password cannot be changed using the API or via the web interface. If you need to change it,\nmodify it here.\nCreate one by using for example: echo -n yourpassword | shasum -a 256\nand use the resulting hash value as string for the option\n","example":"e3c652f0ba0b4801205814f8b6bc49672c4c74e25b497770bb89b22cdeb4e952","readOnly":false,"type":"string"},"services.graylog.rootUsername":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":"admin","description":"Name of the default administrator user","readOnly":false,"type":"string"},"services.graylog.user":{"declarations":["nixos/modules/services/logging/graylog.nix"],"default":"graylog","description":"User account under which graylog runs","example":{"_type":"literalExample","text":"graylog"},"readOnly":false,"type":"string"},"services.gvpe.configFile":{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":null,"description":"GVPE config file, if already present\n","example":"/root/my-gvpe-conf","readOnly":false,"type":"unspecified"},"services.gvpe.configText":{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":null,"description":"GVPE config contents\n","example":"tcp-port = 655\nudp-port = 655\nmtu = 1480\nifname = vpn0\n\nnode = alpha\nhostname = alpha.example.org\nconnect = always\nenable-udp = true\nenable-tcp = true\non alpha if-up = if-up-0\non alpha pid-file = /var/gvpe/gvpe.pid\n","readOnly":false,"type":"unspecified"},"services.gvpe.customIFSetup":{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":"","description":"Additional commands to apply in ifup script\n","readOnly":false,"type":"unspecified"},"services.gvpe.enable":{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":false,"description":"Whether to run gvpe\n","readOnly":false,"type":"unspecified"},"services.gvpe.ipAddress":{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":null,"description":"IP address to assign to GVPE interface\n","readOnly":false,"type":"unspecified"},"services.gvpe.nodename":{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":null,"description":"GVPE node name\n","readOnly":false,"type":"unspecified"},"services.gvpe.subnet":{"declarations":["nixos/modules/services/networking/gvpe.nix"],"default":null,"description":"IP subnet assigned to GVPE network\n","example":"10.0.0.0/8","readOnly":false,"type":"unspecified"},"services.haka.configFile":{"declarations":["nixos/modules/services/security/haka.nix"],"default":"empty.lua","description":"Specify which configuration file Haka uses.\nIt can be absolute path or a path relative to the sample directory of\nthe haka git repo.\n","example":"/srv/haka/myfilter.lua","readOnly":false,"type":"string"},"services.haka.dump.enable":{"declarations":["nixos/modules/services/security/haka.nix"],"default":false,"description":"Whether to enable dump.","example":true,"readOnly":false,"type":"boolean"},"services.haka.dump.input":{"declarations":["nixos/modules/services/security/haka.nix"],"default":"/tmp/input.pcap","description":"Path to file where incoming packets are dumped","example":"/path/to/file.pcap","readOnly":false,"type":"path"},"services.haka.dump.output":{"declarations":["nixos/modules/services/security/haka.nix"],"default":"/tmp/output.pcap","description":"Path to file where outgoing packets are dumped","example":"/path/to/file.pcap","readOnly":false,"type":"path"},"services.haka.enable":{"declarations":["nixos/modules/services/security/haka.nix"],"default":false,"description":"Whether to enable Haka.","example":true,"readOnly":false,"type":"boolean"},"services.haka.interfaces":{"declarations":["nixos/modules/services/security/haka.nix"],"default":["eth0"],"description":"Specify which interface(s) Haka listens to.\nUse 'any' to listen to all interfaces.\n","example":["any"],"readOnly":false,"type":"list of strings"},"services.haka.nfqueue":{"declarations":["nixos/modules/services/security/haka.nix"],"default":false,"description":"Whether to enable nfqueue.","example":true,"readOnly":false,"type":"boolean"},"services.haka.package":{"declarations":["nixos/modules/services/security/haka.nix"],"default":"pkgs.haka","description":"\n          Which Haka derivation to use.\n        ","readOnly":false,"type":"package"},"services.haka.pcap":{"declarations":["nixos/modules/services/security/haka.nix"],"default":true,"description":"Whether to enable pcap","example":false,"readOnly":false,"type":"boolean"},"services.haka.threads":{"declarations":["nixos/modules/services/security/haka.nix"],"default":0,"description":"The number of threads that will be used.\nAll system threads are used by default.\n","example":4,"readOnly":false,"type":"integer"},"services.haproxy.config":{"declarations":["nixos/modules/services/networking/haproxy.nix"],"default":null,"description":"Contents of the HAProxy configuration file,\n<filename>haproxy.conf</filename>.\n","readOnly":false,"type":"null or string"},"services.haproxy.enable":{"declarations":["nixos/modules/services/networking/haproxy.nix"],"default":false,"description":"Whether to enable HAProxy, the reliable, high performance TCP/HTTP\nload balancer.\n","readOnly":false,"type":"boolean"},"services.hardware.pommed.configFile":{"declarations":["nixos/modules/services/hardware/pommed.nix"],"description":"The path to the <filename>pommed.conf</filename> file.\n","readOnly":false,"type":"path"},"services.hardware.pommed.enable":{"declarations":["nixos/modules/services/hardware/pommed.nix"],"default":false,"description":"Whether to use the pommed tool to handle Apple laptop keyboard hotkeys.\n","readOnly":false,"type":"boolean"},"services.haveged.enable":{"declarations":["nixos/modules/services/security/haveged.nix"],"default":false,"description":"Whether to enable to haveged entropy daemon, which refills \n/dev/random when low.\n","readOnly":false,"type":"boolean"},"services.haveged.refill_threshold":{"declarations":["nixos/modules/services/security/haveged.nix"],"default":1024,"description":"The number of bits of available entropy beneath which\nhaveged should refill the entropy pool.\n","readOnly":false,"type":"integer"},"services.hbase.dataDir":{"declarations":["nixos/modules/services/databases/hbase.nix"],"default":"/var/lib/hbase","description":"Specifies location of HBase database files. This location should be\nwritable and readable for the user the HBase service runs as\n(hbase by default).\n","readOnly":false,"type":"path"},"services.hbase.enable":{"declarations":["nixos/modules/services/databases/hbase.nix"],"default":false,"description":"Whether to run HBase.\n","readOnly":false,"type":"boolean"},"services.hbase.group":{"declarations":["nixos/modules/services/databases/hbase.nix"],"default":"hbase","description":"Group account under which HBase runs.\n","readOnly":false,"type":"string"},"services.hbase.logDir":{"declarations":["nixos/modules/services/databases/hbase.nix"],"default":"/var/log/hbase","description":"Specifies the location of HBase log files.\n","readOnly":false,"type":"path"},"services.hbase.package":{"declarations":["nixos/modules/services/databases/hbase.nix"],"default":"pkgs.hbase","description":"HBase package to use.\n","example":{"_type":"literalExample","text":"pkgs.hbase"},"readOnly":false,"type":"package"},"services.hbase.user":{"declarations":["nixos/modules/services/databases/hbase.nix"],"default":"hbase","description":"User account under which HBase runs.\n","readOnly":false,"type":"string"},"services.hdapsd.enable":{"declarations":["nixos/modules/services/monitoring/hdaps.nix"],"default":false,"description":"Whether to enable Hard Drive Active Protection System Daemon,\ndevices are detected and managed automatically by udev and systemd\n.","example":true,"readOnly":false,"type":"boolean"},"services.heapster.enable":{"declarations":["nixos/modules/services/monitoring/heapster.nix"],"default":false,"description":"Whether to enable heapster monitoring","readOnly":false,"type":"boolean"},"services.heapster.extraOpts":{"declarations":["nixos/modules/services/monitoring/heapster.nix"],"default":"","description":"Heapster extra options","readOnly":false,"type":"string"},"services.heapster.package":{"declarations":["nixos/modules/services/monitoring/heapster.nix"],"default":"pkgs.heapster","description":"Package to use by heapster","readOnly":false,"type":"package"},"services.heapster.sink":{"declarations":["nixos/modules/services/monitoring/heapster.nix"],"description":"Heapster metic sink","example":"influxdb:http://localhost:8086","readOnly":false,"type":"string"},"services.heapster.source":{"declarations":["nixos/modules/services/monitoring/heapster.nix"],"description":"Heapster metric source","example":"kubernetes:https://kubernetes.default","readOnly":false,"type":"string"},"services.heyefi.cardMacaddress":{"declarations":["nixos/modules/services/networking/heyefi.nix"],"default":"","description":"An Eye-Fi card MAC address.\n","readOnly":false,"type":"unspecified"},"services.heyefi.enable":{"declarations":["nixos/modules/services/networking/heyefi.nix"],"default":false,"description":"Whether to enable heyefi.","example":true,"readOnly":false,"type":"boolean"},"services.heyefi.uploadDir":{"declarations":["nixos/modules/services/networking/heyefi.nix"],"description":"The directory to upload the files to.\n","example":"/home/username/pictures","readOnly":false,"type":"unspecified"},"services.heyefi.uploadKey":{"declarations":["nixos/modules/services/networking/heyefi.nix"],"default":"","description":"An Eye-Fi card's upload key.\n","readOnly":false,"type":"unspecified"},"services.heyefi.user":{"declarations":["nixos/modules/services/networking/heyefi.nix"],"default":"root","description":"heyefi will be run under this user (user must exist,\nthis can be your user name).\n","readOnly":false,"type":"unspecified"},"services.hologram-server.awsAccount":{"declarations":["nixos/modules/services/security/hologram.nix"],"description":"AWS account number","readOnly":false,"type":"string"},"services.hologram-server.awsDefaultRole":{"declarations":["nixos/modules/services/security/hologram.nix"],"description":"AWS default role","readOnly":false,"type":"string"},"services.hologram-server.enable":{"declarations":["nixos/modules/services/security/hologram.nix"],"default":false,"description":"Whether to enable the Hologram server for AWS instance credentials","readOnly":false,"type":"boolean"},"services.hologram-server.ldapBaseDN":{"declarations":["nixos/modules/services/security/hologram.nix"],"description":"The base DN for your Hologram users","readOnly":false,"type":"string"},"services.hologram-server.ldapBindDN":{"declarations":["nixos/modules/services/security/hologram.nix"],"description":"DN of account to use to query the LDAP server","readOnly":false,"type":"string"},"services.hologram-server.ldapBindPassword":{"declarations":["nixos/modules/services/security/hologram.nix"],"description":"Password of account to use to query the LDAP server","readOnly":false,"type":"string"},"services.hologram-server.ldapHost":{"declarations":["nixos/modules/services/security/hologram.nix"],"description":"Address of the LDAP server to use","readOnly":false,"type":"string"},"services.hologram-server.ldapInsecure":{"declarations":["nixos/modules/services/security/hologram.nix"],"default":false,"description":"Whether to connect to LDAP over SSL or not","readOnly":false,"type":"boolean"},"services.hologram-server.ldapUserAttr":{"declarations":["nixos/modules/services/security/hologram.nix"],"default":"cn","description":"The LDAP attribute for usernames","readOnly":false,"type":"string"},"services.hologram-server.listenAddress":{"declarations":["nixos/modules/services/security/hologram.nix"],"default":"0.0.0.0:3100","description":"Address and port to listen on","readOnly":false,"type":"string"},"services.hologram-server.statsAddress":{"declarations":["nixos/modules/services/security/hologram.nix"],"default":"","description":"Address of statsd server","readOnly":false,"type":"string"},"services.hoogle.enable":{"declarations":["nixos/modules/services/development/hoogle.nix"],"default":false,"description":"Whether to enable Haskell documentation server.","example":true,"readOnly":false,"type":"boolean"},"services.hoogle.haskellPackages":{"declarations":["nixos/modules/services/development/hoogle.nix"],"default":"pkgs.haskellPackages","description":"Which haskell package set to use.","readOnly":false,"type":"unspecified"},"services.hoogle.packages":{"declarations":["nixos/modules/services/development/hoogle.nix"],"default":"hp: []","description":"The Haskell packages to generate documentation for.\n\nThe option value is a function that takes the package set specified in\nthe <varname>haskellPackages</varname> option as its sole parameter and\nreturns a list of packages.\n","example":"hp: with hp; [ text lens ]","readOnly":false,"type":"unspecified"},"services.hoogle.port":{"declarations":["nixos/modules/services/development/hoogle.nix"],"default":8080,"description":"Port number Hoogle will be listening to.\n","readOnly":false,"type":"integer"},"services.hostapd.channel":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":7,"description":"Channel number (IEEE 802.11)\nPlease note that some drivers do not use this value from\n<command>hostapd</command> and the channel will need to be configured\nseparately with <command>iwconfig</command>.\n","example":11,"readOnly":false,"type":"integer"},"services.hostapd.driver":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"nl80211","description":"Which driver <command>hostapd</command> will use.\nMost applications will probably use the default.\n","example":"hostapd","readOnly":false,"type":"string"},"services.hostapd.enable":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":false,"description":"Enable putting a wireless interface into infrastructure mode,\nallowing other wireless devices to associate with the wireless\ninterface and do wireless networking. A simple access point will\n<option>enable hostapd.wpa</option>,\n<option>hostapd.wpaPassphrase</option>, and\n<option>hostapd.ssid</option>, as well as DHCP on the wireless\ninterface to provide IP addresses to the associated stations, and\nNAT (from the wireless interface to an upstream interface).\n","readOnly":false,"type":"unspecified"},"services.hostapd.extraCfg":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.hostapd.extraConfig</option>.","readOnly":false,"type":"unspecified"},"services.hostapd.extraConfig":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"Extra configuration options to put in hostapd.conf.","example":"auth_algo=0\nieee80211n=1\nht_capab=[HT40-][SHORT-GI-40][DSSS_CCK-40]\n","readOnly":false,"type":"string"},"services.hostapd.group":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"wheel","description":"Members of this group can control <command>hostapd</command>.\n","example":"network","readOnly":false,"type":"string"},"services.hostapd.hwMode":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"g","description":"Operation mode.\n(a = IEEE 802.11a, b = IEEE 802.11b, g = IEEE 802.11g).\n","readOnly":false,"type":"one of \"a\", \"b\", \"g\""},"services.hostapd.interface":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"","description":"The interfaces <command>hostapd</command> will use.\n","example":"wlp2s0","readOnly":false,"type":"unspecified"},"services.hostapd.ssid":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"nixos","description":"SSID to be used in IEEE 802.11 management frames.","example":"mySpecialSSID","readOnly":false,"type":"string"},"services.hostapd.wpa":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":true,"description":"Enable WPA (IEEE 802.11i/D3.0) to authenticate with the access point.\n","readOnly":false,"type":"unspecified"},"services.hostapd.wpaPassphrase":{"declarations":["nixos/modules/services/networking/hostapd.nix"],"default":"my_sekret","description":"WPA-PSK (pre-shared-key) passphrase. Clients will need this\npassphrase to associate with this access point.\nWarning: This passphrase will get put into a world-readable file in\nthe Nix store!\n","example":"any_64_char_string","readOnly":false,"type":"string"},"services.hound.config":{"declarations":["nixos/modules/services/search/hound.nix"],"description":"The full configuration of the Hound daemon. Note the dbpath\nshould be an absolute path to a writable location on disk.\n","example":"{\n   \"max-concurrent-indexers\" : 2,\n   \"dbpath\" : \"${services.hound.home}/data\",\n   \"repos\" : {\n      \"nixpkgs\": {\n         \"url\" : \"https://www.github.com/NixOS/nixpkgs.git\"\n      }\n   }\n}\n","readOnly":false,"type":"string"},"services.hound.enable":{"declarations":["nixos/modules/services/search/hound.nix"],"default":false,"description":"Whether to enable the hound code search daemon.\n","readOnly":false,"type":"boolean"},"services.hound.extraGroups":{"declarations":["nixos/modules/services/search/hound.nix"],"default":[],"description":"List of extra groups that the \"hound\" user should be a part of.\n","example":["dialout"],"readOnly":false,"type":"list of strings"},"services.hound.group":{"declarations":["nixos/modules/services/search/hound.nix"],"default":"hound","description":"Group the hound daemon should execute under.\n","readOnly":false,"type":"string"},"services.hound.home":{"declarations":["nixos/modules/services/search/hound.nix"],"default":"/var/lib/hound","description":"The path to use as hound's $HOME. If the default user\n\"hound\" is configured then this is the home of the \"hound\"\nuser.\n","readOnly":false,"type":"path"},"services.hound.listen":{"declarations":["nixos/modules/services/search/hound.nix"],"default":"0.0.0.0:6080","description":"Listen on this IP:port / :port\n","example":"127.0.0.1:6080 or just :6080","readOnly":false,"type":"string"},"services.hound.package":{"declarations":["nixos/modules/services/search/hound.nix"],"default":"pkgs.hound","description":"Package for running hound.\n","readOnly":false,"type":"package"},"services.hound.user":{"declarations":["nixos/modules/services/search/hound.nix"],"default":"hound","description":"User the hound daemon should execute under.\n","readOnly":false,"type":"string"},"services.htpdate.enable":{"declarations":["nixos/modules/services/networking/htpdate.nix"],"default":false,"description":"Enable htpdate daemon.\n","readOnly":false,"type":"boolean"},"services.htpdate.extraOptions":{"declarations":["nixos/modules/services/networking/htpdate.nix"],"default":"","description":"Additional command line arguments to pass to htpdate.\n","readOnly":false,"type":"string"},"services.htpdate.proxy":{"declarations":["nixos/modules/services/networking/htpdate.nix"],"default":"","description":"HTTP proxy used for requests.\n","example":"127.0.0.1:8118","readOnly":false,"type":"string"},"services.htpdate.servers":{"declarations":["nixos/modules/services/networking/htpdate.nix"],"default":["www.google.com"],"description":"HTTP servers to use for time synchronization.\n","readOnly":false,"type":"list of strings"},"services.httpd.adminAddr":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"description":"E-mail address of the server administrator.","example":"admin@example.org","readOnly":false,"type":"null or string"},"services.httpd.configFile":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"confFile","description":"Override the configuration file used by Apache. By default,\nNixOS generates one automatically.\n","example":{"_type":"literalExample","text":"pkgs.writeText \"httpd.conf\" \"# my custom config file ...\""},"readOnly":false,"type":"path"},"services.httpd.documentRoot":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":null,"description":"The path of Apache's document root directory.  If left undefined,\nan empty directory in the Nix store will be used as root.\n","example":"/data/webserver/docs","readOnly":false,"type":"null or path"},"services.httpd.enable":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":false,"description":"Whether to enable the Apache HTTP Server.","readOnly":false,"type":"boolean"},"services.httpd.enableMellon":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":false,"description":"Whether to enable the mod_auth_mellon module.","readOnly":false,"type":"boolean"},"services.httpd.enablePHP":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":false,"description":"Whether to enable the PHP module.","readOnly":false,"type":"boolean"},"services.httpd.enableSSL":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":false,"description":"Whether to enable SSL (https) support.","readOnly":false,"type":"boolean"},"services.httpd.enableUserDir":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":false,"description":"Whether to enable serving <filename>~/public_html</filename> as\n<literal>/~<replaceable>username</replaceable></literal>.\n","readOnly":false,"type":"boolean"},"services.httpd.extraConfig":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"These lines go to httpd.conf verbatim. They will go after\ndirectories and directory aliases defined by default.\n","example":"<Directory /home>\n  Options FollowSymlinks\n  AllowOverride All\n</Directory>\n","readOnly":false,"type":"string"},"services.httpd.extraModules":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"Additional Apache modules to be used.  These can be\nspecified as a string in the case of modules distributed\nwith Apache, or as an attribute set specifying the\n<varname>name</varname> and <varname>path</varname> of the\nmodule.\n","example":{"_type":"literalExample","text":"[ \"proxy_connect\" { name = \"php5\"; path = \"${pkgs.php}/modules/libphp5.so\"; } ]"},"readOnly":false,"type":"list of unspecifieds"},"services.httpd.extraSubservices":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"Extra subservices to enable in the webserver.","readOnly":false,"type":"list of unspecifieds"},"services.httpd.globalRedirect":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":null,"description":"If set, all requests for this host are redirected permanently to\nthe given URL.\n","example":"http://newserver.example.org/","readOnly":false,"type":"null or string"},"services.httpd.group":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"wwwrun","description":"Group under which httpd runs.  The account is created\nautomatically if it doesn't exist.\n","readOnly":false,"type":"string"},"services.httpd.hostName":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"localhost","description":"Canonical hostname for the server.","readOnly":false,"type":"string"},"services.httpd.listen":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"List of { /* ip: \"*\"; */ port = 80;} to listen on\n","readOnly":false,"type":"list of submodules"},"services.httpd.listen.*.ip":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"*","description":"Ip to listen on. 0.0.0.0 for ipv4 only, * for all.","readOnly":false,"type":"string"},"services.httpd.listen.*.port":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"description":"port to listen on","readOnly":false,"type":"integer"},"services.httpd.logDir":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"/var/log/httpd","description":"Directory for Apache's log files.  It is created automatically.\n","readOnly":false,"type":"path"},"services.httpd.logFormat":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"common","description":"Log format for Apache's log files. Possible values are: combined, common, referer, agent.\n","example":"combined","readOnly":false,"type":"string"},"services.httpd.logPerVirtualHost":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":false,"description":"If enabled, each virtual host gets its own\n<filename>access_log</filename> and\n<filename>error_log</filename>, namely suffixed by the\n<option>hostName</option> of the virtual host.\n","readOnly":false,"type":"boolean"},"services.httpd.maxClients":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":150,"description":"Maximum number of httpd processes (prefork)","example":8,"readOnly":false,"type":"integer"},"services.httpd.maxRequestsPerChild":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":0,"description":"Maximum number of httpd requests answered per httpd child (prefork), 0 means unlimited","example":500,"readOnly":false,"type":"integer"},"services.httpd.multiProcessingModule":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"prefork","description":"Multi-processing module to be used by Apache.  Available\nmodules are <literal>prefork</literal> (the default;\nhandles each request in a separate child process),\n<literal>worker</literal> (hybrid approach that starts a\nnumber of child processes each running a number of\nthreads) and <literal>event</literal> (a recent variant of\n<literal>worker</literal> that handles persistent\nconnections more efficiently).\n","example":"worker","readOnly":false,"type":"string"},"services.httpd.package":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"pkgs.apacheHttpd","description":"Overridable attribute of the Apache HTTP Server package to use.\n","readOnly":false,"type":"package"},"services.httpd.phpOptions":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Options appended to the PHP configuration file <filename>php.ini</filename>.","example":"date.timezone = \"CET\"\n","readOnly":false,"type":"string"},"services.httpd.phpPackage":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"pkgs.php","description":"Overridable attribute of the PHP package to use.\n","readOnly":false,"type":"package"},"services.httpd.port":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":0,"description":"Port for the server. Option will be removed, use <option>listen</option> instead.\n","readOnly":false,"type":"integer"},"services.httpd.robotsEntries":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Specification of pages to be ignored by web crawlers. See <link\nxlink:href='http://www.robotstxt.org/'/> for details.\n","example":"Disallow: /foo/","readOnly":false,"type":"string"},"services.httpd.servedDirs":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"This option provides a simple way to serve static directories.\n","example":[{"dir":"/home/eelco/Dev/nix-homepage","urlPath":"/nix"}],"readOnly":false,"type":"list of attribute sets"},"services.httpd.servedFiles":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"This option provides a simple way to serve individual, static files.\n","example":[{"files":"/home/eelco/some-file.png","urlPath":"/foo/bar.png"}],"readOnly":false,"type":"list of attribute sets"},"services.httpd.serverAliases":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"Additional names of virtual hosts served by this virtual host configuration.\n","example":["www.example.org","www.example.org:8080","example.org"],"readOnly":false,"type":"list of strings"},"services.httpd.sslServerCert":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":null,"description":"Path to server SSL certificate.","example":"/var/host.cert","readOnly":false,"type":"null or path"},"services.httpd.sslServerChain":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":null,"description":"Path to server SSL chain file.","example":"/var/ca.pem","readOnly":false,"type":"null or path"},"services.httpd.sslServerKey":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"description":"Path to server SSL certificate key.","example":"/var/host.key","readOnly":false,"type":"path"},"services.httpd.stateDir":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"/run/httpd","description":"Directory for Apache's transient runtime state (such as PID\nfiles).  It is created automatically.  Note that the default,\n<filename>/run/httpd</filename>, is deleted at boot time.\n","readOnly":false,"type":"path"},"services.httpd.user":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"wwwrun","description":"User account under which httpd runs.  The account is created\nautomatically if it doesn't exist.\n","readOnly":false,"type":"string"},"services.httpd.virtualHosts":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"Specification of the virtual hosts served by Apache.  Each\nelement should be an attribute set specifying the\nconfiguration of the virtual host.  The available options\nare the non-global options permissible for the main host.\n","example":[{"documentRoot":"/data/webroot-foo","hostName":"foo"},{"documentRoot":"/data/webroot-bar","hostName":"bar"}],"readOnly":false,"type":"list of submodules"},"services.httpd.virtualHosts.*.adminAddr":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":null,"description":"E-mail address of the server administrator.","example":"admin@example.org","readOnly":false,"type":"null or string"},"services.httpd.virtualHosts.*.documentRoot":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":null,"description":"The path of Apache's document root directory.  If left undefined,\nan empty directory in the Nix store will be used as root.\n","example":"/data/webserver/docs","readOnly":false,"type":"null or path"},"services.httpd.virtualHosts.*.enableSSL":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":false,"description":"Whether to enable SSL (https) support.","readOnly":false,"type":"boolean"},"services.httpd.virtualHosts.*.enableUserDir":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":false,"description":"Whether to enable serving <filename>~/public_html</filename> as\n<literal>/~<replaceable>username</replaceable></literal>.\n","readOnly":false,"type":"boolean"},"services.httpd.virtualHosts.*.extraConfig":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"These lines go to httpd.conf verbatim. They will go after\ndirectories and directory aliases defined by default.\n","example":"<Directory /home>\n  Options FollowSymlinks\n  AllowOverride All\n</Directory>\n","readOnly":false,"type":"string"},"services.httpd.virtualHosts.*.extraSubservices":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"Extra subservices to enable in the webserver.","readOnly":false,"type":"list of unspecifieds"},"services.httpd.virtualHosts.*.globalRedirect":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":null,"description":"If set, all requests for this host are redirected permanently to\nthe given URL.\n","example":"http://newserver.example.org/","readOnly":false,"type":"null or string"},"services.httpd.virtualHosts.*.hostName":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"localhost","description":"Canonical hostname for the server.","readOnly":false,"type":"string"},"services.httpd.virtualHosts.*.listen":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"List of { /* ip: \"*\"; */ port = 80;} to listen on\n","readOnly":false,"type":"list of submodules"},"services.httpd.virtualHosts.*.listen.*.ip":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"*","description":"Ip to listen on. 0.0.0.0 for ipv4 only, * for all.","readOnly":false,"type":"string"},"services.httpd.virtualHosts.*.listen.*.port":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"description":"port to listen on","readOnly":false,"type":"integer"},"services.httpd.virtualHosts.*.logFormat":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"common","description":"Log format for Apache's log files. Possible values are: combined, common, referer, agent.\n","example":"combined","readOnly":false,"type":"string"},"services.httpd.virtualHosts.*.port":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":0,"description":"Port for the server. Option will be removed, use <option>listen</option> instead.\n","readOnly":false,"type":"integer"},"services.httpd.virtualHosts.*.robotsEntries":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":"","description":"Specification of pages to be ignored by web crawlers. See <link\nxlink:href='http://www.robotstxt.org/'/> for details.\n","example":"Disallow: /foo/","readOnly":false,"type":"string"},"services.httpd.virtualHosts.*.servedDirs":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"This option provides a simple way to serve static directories.\n","example":[{"dir":"/home/eelco/Dev/nix-homepage","urlPath":"/nix"}],"readOnly":false,"type":"list of attribute sets"},"services.httpd.virtualHosts.*.servedFiles":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"This option provides a simple way to serve individual, static files.\n","example":[{"files":"/home/eelco/some-file.png","urlPath":"/foo/bar.png"}],"readOnly":false,"type":"list of attribute sets"},"services.httpd.virtualHosts.*.serverAliases":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":[],"description":"Additional names of virtual hosts served by this virtual host configuration.\n","example":["www.example.org","www.example.org:8080","example.org"],"readOnly":false,"type":"list of strings"},"services.httpd.virtualHosts.*.sslServerCert":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":null,"description":"Path to server SSL certificate.","example":"/var/host.cert","readOnly":false,"type":"null or path"},"services.httpd.virtualHosts.*.sslServerChain":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"default":null,"description":"Path to server SSL chain file.","example":"/var/ca.pem","readOnly":false,"type":"null or path"},"services.httpd.virtualHosts.*.sslServerKey":{"declarations":["nixos/modules/services/web-servers/apache-httpd/default.nix"],"description":"Path to server SSL certificate key.","example":"/var/host.key","readOnly":false,"type":"path"},"services.hydra.buildMachinesFiles":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":["/etc/nix/machines"],"description":"List of files containing build machines.","example":["/etc/nix/machines","/var/lib/hydra/provisioner/machines"],"readOnly":false,"type":"list of paths"},"services.hydra.dbi":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":"dbi:Pg:dbname=hydra;user=hydra;","description":"The DBI string for Hydra database connection.\n","example":"dbi:Pg:dbname=hydra;host=postgres.example.org;user=foo;","readOnly":false,"type":"string"},"services.hydra.debugServer":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":false,"description":"Whether to run the server in debug mode.","readOnly":false,"type":"boolean"},"services.hydra.enable":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":false,"description":"Whether to run Hydra services.\n","readOnly":false,"type":"boolean"},"services.hydra.extraConfig":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"description":"Extra lines for the Hydra configuration.","readOnly":false,"type":"string"},"services.hydra.extraEnv":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":{},"description":"Extra environment variables for Hydra.","readOnly":false,"type":"attribute set of strings"},"services.hydra.gcRootsDir":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":"/nix/var/nix/gcroots/hydra","description":"Directory that holds Hydra garbage collector roots.","readOnly":false,"type":"path"},"services.hydra.hydraURL":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"description":"The base URL for the Hydra webserver instance. Used for links in emails.\n","readOnly":false,"type":"string"},"services.hydra.listenHost":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":"*","description":"The hostname or address to listen on or <literal>*</literal> to listen\non all interfaces.\n","example":"localhost","readOnly":false,"type":"string"},"services.hydra.logo":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":null,"description":"Path to a file containing the logo of your Hydra instance.\n","readOnly":false,"type":"null or path"},"services.hydra.minimumDiskFree":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":0,"description":"Threshold of minimum disk space (GiB) to determine if the queue runner should run or not.\n","readOnly":false,"type":"integer"},"services.hydra.minimumDiskFreeEvaluator":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":0,"description":"Threshold of minimum disk space (GiB) to determine if the evaluator should run or not.\n","readOnly":false,"type":"integer"},"services.hydra.notificationSender":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"description":"Sender email address used for email notifications.\n","readOnly":false,"type":"string"},"services.hydra.package":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":"pkgs.hydra","description":"The Hydra package.","readOnly":false,"type":"path"},"services.hydra.port":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":3000,"description":"TCP port the web server should listen to.\n","readOnly":false,"type":"integer"},"services.hydra.smtpHost":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":null,"description":"Hostname of the SMTP server to use to send email.\n","example":["localhost"],"readOnly":false,"type":"null or string"},"services.hydra.tracker":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":"","description":"Piece of HTML that is included on all pages.\n","readOnly":false,"type":"string"},"services.hydra.useSubstitutes":{"declarations":["nixos/modules/services/continuous-integration/hydra/default.nix"],"default":false,"description":"Whether to use binary caches for downloading store paths. Note that\nbinary substitutions trigger (a potentially large number of) additional\nHTTP requests that slow down the queue monitor thread significantly.\nAlso, this Hydra instance will serve those downloaded store paths to\nits users with its own signature attached as if it had built them\nitself, so don't enable this feature unless your active binary caches\nare absolute trustworthy.\n","readOnly":false,"type":"boolean"},"services.i2p.enable":{"declarations":["nixos/modules/services/networking/i2p.nix"],"default":false,"description":"Whether to enable I2P router.","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.addressbook.defaulturl":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"http://joajgazyztfssty4w2on5oaqksz6tqoxbduy553y34mf4byv6gpq.b32.i2p/export/alive-hosts.txt","description":"AddressBook subscription URL for initial setup\n","readOnly":false,"type":"string"},"services.i2pd.addressbook.subscriptions":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":["http://inr.i2p/export/alive-hosts.txt","http://i2p-projekt.i2p/hosts.txt","http://stats.i2p/cgi-bin/newhosts.txt"],"description":"AddressBook subscription URLs\n","readOnly":false,"type":"list of strings"},"services.i2pd.bandwidth":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":null,"description":"Set a router bandwidth limit integer in kbps or letters: L (32), O (256), P (2048), X (>9000)\n","readOnly":false,"type":"null or integer"},"services.i2pd.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Enables I2Pd as a running service upon activation.\nPlease read http://i2pd.readthedocs.io/en/latest/ for further\nconfiguration help.\n","readOnly":false,"type":"boolean"},"services.i2pd.enableIPv4":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":true,"description":"Enables IPv4 connectivity. Enabled by default.\n","readOnly":false,"type":"boolean"},"services.i2pd.enableIPv6":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Enables IPv6 connectivity. Disabled by default.\n","readOnly":false,"type":"boolean"},"services.i2pd.extIp":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":null,"description":"Your external IP.\n","readOnly":false,"type":"null or string"},"services.i2pd.floodfill":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"If the router is declared to be unreachable and needs introduction nodes.\n","readOnly":false,"type":"boolean"},"services.i2pd.inTunnels":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":{},"description":"Serve something on I2P network at port and delegate requests to address inPort.\n","readOnly":false,"type":"list or attribute set of submodules"},"services.i2pd.inTunnels.<name?>.accessList":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":[],"description":"I2P nodes that are allowed to connect to this service.","readOnly":false,"type":"list of strings"},"services.i2pd.inTunnels.<name?>.address":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Bind address for  endpoint. Default: 127.0.0.1","readOnly":false,"type":"string"},"services.i2pd.inTunnels.<name?>.crypto.tagsToSend":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":40,"description":"Number of ElGamal/AES tags to send.","readOnly":false,"type":"integer"},"services.i2pd.inTunnels.<name?>.destination":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"description":"Remote endpoint, I2P hostname or b32.i2p address.","readOnly":false,"type":"string"},"services.i2pd.inTunnels.<name?>.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Whether to enable .","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.inTunnels.<name?>.inPort":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":0,"description":"Service port. Default to the tunnel's listen port.","readOnly":false,"type":"integer"},"services.i2pd.inTunnels.<name?>.inbound.length":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":3,"description":"Guaranteed minimum hops.","readOnly":false,"type":"integer"},"services.i2pd.inTunnels.<name?>.inbound.quantity":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":5,"description":"Number of simultaneous tunnels.","readOnly":false,"type":"integer"},"services.i2pd.inTunnels.<name?>.keys":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"-keys.dat","description":"Keyset used for tunnel identity.","readOnly":false,"type":"string"},"services.i2pd.inTunnels.<name?>.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"","description":"The endpoint name.","readOnly":false,"type":"string"},"services.i2pd.inTunnels.<name?>.outbound.length":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":3,"description":"Guaranteed minimum hops.","readOnly":false,"type":"integer"},"services.i2pd.inTunnels.<name?>.outbound.quantity":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":5,"description":"Number of simultaneous tunnels.","readOnly":false,"type":"integer"},"services.i2pd.inTunnels.<name?>.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":0,"description":"Bind port for  endoint. Default: 0","readOnly":false,"type":"integer"},"services.i2pd.limits.transittunnels":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":2500,"description":"Maximum number of active transit sessions\n","readOnly":false,"type":"integer"},"services.i2pd.netid":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":2,"description":"I2P overlay netid.\n","readOnly":false,"type":"integer"},"services.i2pd.notransit":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Tells the router to not accept transit tunnels during startup.\n","readOnly":false,"type":"boolean"},"services.i2pd.outTunnels":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":{},"description":"Connect to someone as a client and establish a local accept endpoint\n","readOnly":false,"type":"list or attribute set of submodules"},"services.i2pd.outTunnels.<name?>.address":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Bind address for  endpoint. Default: 127.0.0.1","readOnly":false,"type":"string"},"services.i2pd.outTunnels.<name?>.crypto.tagsToSend":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":40,"description":"Number of ElGamal/AES tags to send.","readOnly":false,"type":"integer"},"services.i2pd.outTunnels.<name?>.destination":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"description":"Remote endpoint, I2P hostname or b32.i2p address.","readOnly":false,"type":"string"},"services.i2pd.outTunnels.<name?>.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Whether to enable .","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.outTunnels.<name?>.inbound.length":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":3,"description":"Guaranteed minimum hops.","readOnly":false,"type":"integer"},"services.i2pd.outTunnels.<name?>.inbound.quantity":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":5,"description":"Number of simultaneous tunnels.","readOnly":false,"type":"integer"},"services.i2pd.outTunnels.<name?>.keys":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"-keys.dat","description":"Keyset used for tunnel identity.","readOnly":false,"type":"string"},"services.i2pd.outTunnels.<name?>.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"","description":"The endpoint name.","readOnly":false,"type":"string"},"services.i2pd.outTunnels.<name?>.outbound.length":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":3,"description":"Guaranteed minimum hops.","readOnly":false,"type":"integer"},"services.i2pd.outTunnels.<name?>.outbound.quantity":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":5,"description":"Number of simultaneous tunnels.","readOnly":false,"type":"integer"},"services.i2pd.outTunnels.<name?>.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":0,"description":"Bind port for  endoint. Default: 0","readOnly":false,"type":"integer"},"services.i2pd.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":null,"description":"I2P listen port. If no one is given the router will pick between 9111 and 30777.\n","readOnly":false,"type":"null or integer"},"services.i2pd.precomputation.elgamal":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Use ElGamal precomputated tables.\n","readOnly":false,"type":"boolean"},"services.i2pd.proto.bob.address":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Bind address for bob endpoint. Default: 127.0.0.1","readOnly":false,"type":"string"},"services.i2pd.proto.bob.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Whether to enable bob.","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.proto.bob.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"bob","description":"The endpoint name.","readOnly":false,"type":"string"},"services.i2pd.proto.bob.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":2827,"description":"Bind port for bob endoint. Default: 2827","readOnly":false,"type":"integer"},"services.i2pd.proto.http.address":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Bind address for http endpoint. Default: 127.0.0.1","readOnly":false,"type":"string"},"services.i2pd.proto.http.auth":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Enable authentication for webconsole.\n","readOnly":false,"type":"boolean"},"services.i2pd.proto.http.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Whether to enable http.","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.proto.http.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"http","description":"The endpoint name.","readOnly":false,"type":"string"},"services.i2pd.proto.http.pass":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"i2pd","description":"Password for webconsole access.\n","readOnly":false,"type":"string"},"services.i2pd.proto.http.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":7070,"description":"Bind port for http endoint. Default: 7070","readOnly":false,"type":"integer"},"services.i2pd.proto.http.user":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"i2pd","description":"Username for webconsole access\n","readOnly":false,"type":"string"},"services.i2pd.proto.httpProxy.address":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Bind address for httpproxy endpoint. Default: 127.0.0.1","readOnly":false,"type":"string"},"services.i2pd.proto.httpProxy.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Whether to enable httpproxy.","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.proto.httpProxy.keys":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"","description":"File to persist HTTPPROXY keys.\n","readOnly":false,"type":"string"},"services.i2pd.proto.httpProxy.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"httpproxy","description":"The endpoint name.","readOnly":false,"type":"string"},"services.i2pd.proto.httpProxy.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":4446,"description":"Bind port for httpproxy endoint. Default: 4446","readOnly":false,"type":"integer"},"services.i2pd.proto.i2cp.address":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Bind address for i2cp endpoint. Default: 127.0.0.1","readOnly":false,"type":"string"},"services.i2pd.proto.i2cp.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Whether to enable i2cp.","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.proto.i2cp.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"i2cp","description":"The endpoint name.","readOnly":false,"type":"string"},"services.i2pd.proto.i2cp.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":7654,"description":"Bind port for i2cp endoint. Default: 7654","readOnly":false,"type":"integer"},"services.i2pd.proto.i2pControl.address":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Bind address for i2pcontrol endpoint. Default: 127.0.0.1","readOnly":false,"type":"string"},"services.i2pd.proto.i2pControl.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Whether to enable i2pcontrol.","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.proto.i2pControl.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"i2pcontrol","description":"The endpoint name.","readOnly":false,"type":"string"},"services.i2pd.proto.i2pControl.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":7650,"description":"Bind port for i2pcontrol endoint. Default: 7650","readOnly":false,"type":"integer"},"services.i2pd.proto.sam.address":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Bind address for sam endpoint. Default: 127.0.0.1","readOnly":false,"type":"string"},"services.i2pd.proto.sam.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Whether to enable sam.","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.proto.sam.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"sam","description":"The endpoint name.","readOnly":false,"type":"string"},"services.i2pd.proto.sam.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":7656,"description":"Bind port for sam endoint. Default: 7656","readOnly":false,"type":"integer"},"services.i2pd.proto.socksProxy.address":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Bind address for socksproxy endpoint. Default: 127.0.0.1","readOnly":false,"type":"string"},"services.i2pd.proto.socksProxy.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Whether to enable socksproxy.","example":true,"readOnly":false,"type":"boolean"},"services.i2pd.proto.socksProxy.keys":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"","description":"File to persist SOCKSPROXY keys.\n","readOnly":false,"type":"string"},"services.i2pd.proto.socksProxy.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"socksproxy","description":"The endpoint name.","readOnly":false,"type":"string"},"services.i2pd.proto.socksProxy.outproxy":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"127.0.0.1","description":"Upstream outproxy bind address.","readOnly":false,"type":"string"},"services.i2pd.proto.socksProxy.outproxyPort":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":4444,"description":"Upstream outproxy bind port.","readOnly":false,"type":"integer"},"services.i2pd.proto.socksProxy.port":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":4447,"description":"Bind port for socksproxy endoint. Default: 4447","readOnly":false,"type":"integer"},"services.i2pd.reseed.file":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"","description":"Full path to SU3 file to reseed from\n","readOnly":false,"type":"string"},"services.i2pd.reseed.urls":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":["https://reseed.i2p-project.de/","https://i2p.mooo.com/netDb/","https://netdb.i2p2.no/","https://us.reseed.i2p2.no:444/","https://uk.reseed.i2p2.no:444/","https://i2p.manas.ca:8443/"],"description":"Reseed URLs\n","readOnly":false,"type":"list of strings"},"services.i2pd.reseed.verify":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Request SU3 signature verification\n","readOnly":false,"type":"boolean"},"services.i2pd.upnp.enable":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":false,"description":"Enables UPnP.\n","readOnly":false,"type":"boolean"},"services.i2pd.upnp.name":{"declarations":["nixos/modules/services/networking/i2pd.nix"],"default":"I2Pd","description":"Name i2pd appears in UPnP forwardings list.\n","readOnly":false,"type":"string"},"services.icecast.admin.password":{"declarations":["nixos/modules/services/audio/icecast.nix"],"description":"Password used for all administration functions.","readOnly":false,"type":"string"},"services.icecast.admin.user":{"declarations":["nixos/modules/services/audio/icecast.nix"],"default":"admin","description":"Username used for all administration functions.","readOnly":false,"type":"string"},"services.icecast.enable":{"declarations":["nixos/modules/services/audio/icecast.nix"],"default":false,"description":"Whether to enable Icecast server.","example":true,"readOnly":false,"type":"boolean"},"services.icecast.extraConf":{"declarations":["nixos/modules/services/audio/icecast.nix"],"default":"","description":"icecast.xml content.","readOnly":false,"type":"string"},"services.icecast.group":{"declarations":["nixos/modules/services/audio/icecast.nix"],"default":"nogroup","description":"Group privileges for the server.","readOnly":false,"type":"string"},"services.icecast.hostname":{"declarations":["nixos/modules/services/audio/icecast.nix"],"default":null,"description":"DNS name or IP address that will be used for the stream directory lookups or possibily the playlist generation if a Host header is not provided.","readOnly":false,"type":"string"},"services.icecast.listen.address":{"declarations":["nixos/modules/services/audio/icecast.nix"],"default":"::","description":"Address Icecast will listen on.","readOnly":false,"type":"string"},"services.icecast.listen.port":{"declarations":["nixos/modules/services/audio/icecast.nix"],"default":8000,"description":"TCP port that will be used to accept client connections.","readOnly":false,"type":"integer"},"services.icecast.logDir":{"declarations":["nixos/modules/services/audio/icecast.nix"],"default":"/var/log/icecast","description":"Base directory used for logging.","readOnly":false,"type":"path"},"services.icecast.user":{"declarations":["nixos/modules/services/audio/icecast.nix"],"default":"nobody","description":"User privileges for the server.","readOnly":false,"type":"string"},"services.ihaskell.enable":{"declarations":["nixos/modules/services/misc/ihaskell.nix"],"default":false,"description":"Autostart an IHaskell notebook service.","example":true,"readOnly":false,"type":"unspecified"},"services.ihaskell.extraPackages":{"declarations":["nixos/modules/services/misc/ihaskell.nix"],"default":"<function>","description":"Extra packages available to ghc when running ihaskell. The\nvalue must be a function which receives the attrset defined\nin <varname>haskellPackages</varname> as the sole argument.\n","example":{"_type":"literalExample","text":"haskellPackages: [\n  haskellPackages.wreq\n  haskellPackages.lens\n]\n"},"readOnly":false,"type":"unspecified"},"services.ihaskell.haskellPackages":{"declarations":["nixos/modules/services/misc/ihaskell.nix"],"default":"pkgs.haskellPackages","description":"haskellPackages used to build IHaskell and other packages.\nThis can be used to change the GHC version used to build\nIHaskell and the packages listed in\n<varname>extraPackages</varname>.\n","example":{"_type":"literalExample","text":"pkgs.haskell.packages.ghc784"},"readOnly":false,"type":"unspecified"},"services.infinoted.certificateChain":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":null,"description":"Chain of CA-certificates to which our `certificateFile` is relative.\nOptional for TLS.\n","readOnly":false,"type":"null or path"},"services.infinoted.certificateFile":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":null,"description":"Server certificate to use for TLS\n","readOnly":false,"type":"null or path"},"services.infinoted.enable":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":false,"description":"Whether to enable infinoted.","example":true,"readOnly":false,"type":"boolean"},"services.infinoted.extraConfig":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":"[autosave]\ninterval=10\n","description":"Additional configuration to append to infinoted.conf\n","readOnly":false,"type":"string"},"services.infinoted.group":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":"infinoted","description":"What to call the primary group of the dedicated user under which infinoted is run\n","readOnly":false,"type":"string"},"services.infinoted.keyFile":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":null,"description":"Private key to use for TLS\n","readOnly":false,"type":"null or path"},"services.infinoted.package":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":"pkgs.libinfinity.override { daemon = true; }","description":"Package providing infinoted\n","readOnly":false,"type":"package"},"services.infinoted.passwordFile":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":null,"description":"File to read server-wide password from\n","readOnly":false,"type":"null or path"},"services.infinoted.plugins":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":["note-text","note-chat","logging","autosave"],"description":"Plugins to enable\n","readOnly":false,"type":"list of strings"},"services.infinoted.port":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":6523,"description":"Port to listen on\n","readOnly":false,"type":"integer"},"services.infinoted.rootDirectory":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":"/var/lib/infinoted/documents/","description":"Root of the directory structure to serve\n","readOnly":false,"type":"path"},"services.infinoted.securityPolicy":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":"require-tls","description":"How strictly to enforce clients connection with TLS.\n","readOnly":false,"type":"one of \"no-tls\", \"allow-tls\", \"require-tls\""},"services.infinoted.user":{"declarations":["nixos/modules/services/editors/infinoted.nix"],"default":"infinoted","description":"What to call the dedicated user under which infinoted is run\n","readOnly":false,"type":"string"},"services.influxdb.dataDir":{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"/var/db/influxdb","description":"Data directory for influxd data files.","readOnly":false,"type":"path"},"services.influxdb.enable":{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":false,"description":"Whether to enable the influxdb server","readOnly":false,"type":"boolean"},"services.influxdb.extraConfig":{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":{},"description":"Extra configuration options for influxdb","readOnly":false,"type":"attribute set"},"services.influxdb.group":{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"influxdb","description":"Group under which influxdb runs","readOnly":false,"type":"string"},"services.influxdb.package":{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"pkgs.influxdb","description":"Which influxdb derivation to use","readOnly":false,"type":"package"},"services.influxdb.user":{"declarations":["nixos/modules/services/databases/influxdb.nix"],"default":"influxdb","description":"User account under which influxdb runs","readOnly":false,"type":"string"},"services.iodine.clients":{"declarations":["nixos/modules/services/networking/iodine.nix"],"default":{},"description":"Each attribute of this option defines a systemd service that\nruns iodine. Many or none may be defined.\nThe name of each service is\n<literal>iodine-<replaceable>name</replaceable></literal>\nwhere <replaceable>name</replaceable> is the name of the\ncorresponding attribute name.\n","example":{"_type":"literalExample","text":"{\n  foo = {\n    server = \"tunnel.mdomain.com\";\n    relay = \"8.8.8.8\";\n    extraConfig = \"-P mysecurepassword\";\n  }\n}\n"},"readOnly":false,"type":"attribute set of submodules"},"services.iodine.clients.<name>.extraConfig":{"declarations":["nixos/modules/services/networking/iodine.nix"],"default":"","description":"Additional command line parameters","example":"-P mysecurepassword -l 192.168.1.10 -p 23","readOnly":false,"type":"string"},"services.iodine.clients.<name>.relay":{"declarations":["nixos/modules/services/networking/iodine.nix"],"default":"","description":"DNS server to use as a intermediate relay to the iodined server","example":"8.8.8.8","readOnly":false,"type":"string"},"services.iodine.clients.<name>.server":{"declarations":["nixos/modules/services/networking/iodine.nix"],"default":"","description":"Domain or Subdomain of server running iodined","example":"tunnel.mydomain.com","readOnly":false,"type":"string"},"services.iodine.server.domain":{"declarations":["nixos/modules/services/networking/iodine.nix"],"default":"","description":"Domain or subdomain of which nameservers point to us","example":"tunnel.mydomain.com","readOnly":false,"type":"string"},"services.iodine.server.enable":{"declarations":["nixos/modules/services/networking/iodine.nix"],"default":false,"description":"enable iodined server","readOnly":false,"type":"boolean"},"services.iodine.server.extraConfig":{"declarations":["nixos/modules/services/networking/iodine.nix"],"default":"","description":"Additional command line parameters","example":"-P mysecurepassword -l 192.168.1.10 -p 23","readOnly":false,"type":"string"},"services.iodine.server.ip":{"declarations":["nixos/modules/services/networking/iodine.nix"],"default":"","description":"The assigned ip address or ip range","example":"172.16.10.1/24","readOnly":false,"type":"string"},"services.iodined.domain":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.iodine.server.domain</option>.","readOnly":false,"type":"unspecified"},"services.iodined.enable":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.iodine.server.enable</option>.","readOnly":false,"type":"unspecified"},"services.iodined.extraConfig":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.iodine.server.extraConfig</option>.","readOnly":false,"type":"unspecified"},"services.iodined.ip":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.iodine.server.ip</option>.","readOnly":false,"type":"unspecified"},"services.ipfs.apiAddress":{"declarations":["nixos/modules/services/network-filesystems/ipfs.nix"],"default":"/ip4/127.0.0.1/tcp/5001","description":"Where IPFS exposes its API to","readOnly":false,"type":"string"},"services.ipfs.autoMigrate":{"declarations":["nixos/modules/services/network-filesystems/ipfs.nix"],"default":false,"description":"Whether IPFS should try to migrate the file system automatically.\n","readOnly":false,"type":"boolean"},"services.ipfs.dataDir":{"declarations":["nixos/modules/services/network-filesystems/ipfs.nix"],"default":"/var/lib/ipfs","description":"The data dir for IPFS","readOnly":false,"type":"string"},"services.ipfs.enable":{"declarations":["nixos/modules/services/network-filesystems/ipfs.nix"],"default":false,"description":"Whether to enable Interplanetary File System.","example":true,"readOnly":false,"type":"boolean"},"services.ipfs.enableGC":{"declarations":["nixos/modules/services/network-filesystems/ipfs.nix"],"default":false,"description":"Whether to enable automatic garbage collection.\n","readOnly":false,"type":"boolean"},"services.ipfs.extraFlags":{"declarations":["nixos/modules/services/network-filesystems/ipfs.nix"],"default":[],"description":"Extra flags passed to the IPFS daemon","readOnly":false,"type":"list of strings"},"services.ipfs.gatewayAddress":{"declarations":["nixos/modules/services/network-filesystems/ipfs.nix"],"default":"/ip4/127.0.0.1/tcp/8080","description":"Where the IPFS Gateway can be reached","readOnly":false,"type":"string"},"services.ipfs.group":{"declarations":["nixos/modules/services/network-filesystems/ipfs.nix"],"default":"ipfs","description":"Group under which the IPFS daemon runs","readOnly":false,"type":"string"},"services.ipfs.user":{"declarations":["nixos/modules/services/network-filesystems/ipfs.nix"],"default":"ipfs","description":"User under which the IPFS daemon runs","readOnly":false,"type":"string"},"services.ircdHybrid.adminEmail":{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"<bit-bucket@example.com>","description":"\n          IRCD server administrator e-mail.\n        ","example":"<name@domain.tld>","readOnly":false,"type":"unspecified"},"services.ircdHybrid.certificate":{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":null,"description":"\n          IRCD server SSL certificate. There are some limitations - read manual.\n        ","example":{"_type":"literalExample","text":"/root/certificates/irc.pem"},"readOnly":false,"type":"unspecified"},"services.ircdHybrid.description":{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"Hybrid-7 IRC server.","description":"\n          IRCD server description.\n        ","readOnly":false,"type":"unspecified"},"services.ircdHybrid.enable":{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":false,"description":"\n          Enable IRCD.\n        ","readOnly":false,"type":"unspecified"},"services.ircdHybrid.extraIPs":{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":[],"description":"\n          Extra IP's to bind.\n        ","example":["127.0.0.1"],"readOnly":false,"type":"unspecified"},"services.ircdHybrid.extraPort":{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"7117","description":"\n          Extra port to avoid filtering.\n        ","readOnly":false,"type":"unspecified"},"services.ircdHybrid.rsaKey":{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":null,"description":"\n          IRCD server RSA key.\n        ","example":{"_type":"literalExample","text":"/root/certificates/irc.key"},"readOnly":false,"type":"unspecified"},"services.ircdHybrid.serverName":{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"hades.arpa","description":"\n          IRCD server name.\n        ","readOnly":false,"type":"unspecified"},"services.ircdHybrid.sid":{"declarations":["nixos/modules/services/networking/ircd-hybrid/default.nix"],"default":"0NL","description":"\n          IRCD server unique ID in a net of servers.\n        ","readOnly":false,"type":"unspecified"},"services.irqbalance.enable":{"declarations":["nixos/modules/services/hardware/irqbalance.nix"],"default":false,"description":"Whether to enable irqbalance daemon.","example":true,"readOnly":false,"type":"boolean"},"services.jboss.deployDir":{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"/nix/var/nix/profiles/default/server/default/deploy/","description":"Location of the deployment files","readOnly":false,"type":"unspecified"},"services.jboss.enable":{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":false,"description":"Whether to enable jboss","readOnly":false,"type":"unspecified"},"services.jboss.libUrl":{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"file:///nix/var/nix/profiles/default/server/default/lib","description":"Location where the shared library JARs are stored","readOnly":false,"type":"unspecified"},"services.jboss.logDir":{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"/var/log/jboss","description":"Location of the logfile directory of JBoss","readOnly":false,"type":"unspecified"},"services.jboss.serverDir":{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"/var/jboss/server","description":"Location of the server instance files","readOnly":false,"type":"unspecified"},"services.jboss.tempDir":{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"/tmp","description":"Location where JBoss stores its temp files","readOnly":false,"type":"unspecified"},"services.jboss.useJK":{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":false,"description":"Whether to use to connector to the Apache HTTP server","readOnly":false,"type":"unspecified"},"services.jboss.user":{"declarations":["nixos/modules/services/web-servers/jboss/default.nix"],"default":"nobody","description":"User account under which jboss runs.","readOnly":false,"type":"unspecified"},"services.jenkins.enable":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":false,"description":"Whether to enable the jenkins continuous integration server.\n","readOnly":false,"type":"boolean"},"services.jenkins.environment":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":{},"description":"Additional environment variables to be passed to the jenkins process.\nAs a base environment, jenkins receives NIX_PATH from\n<option>environment.sessionVariables</option>, NIX_REMOTE is set to\n\"daemon\" and JENKINS_HOME is set to the value of\n<option>services.jenkins.home</option>.\nThis option has precedence and can be used to override those\nmentioned variables.\n","readOnly":false,"type":"attribute set of strings"},"services.jenkins.extraGroups":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":[],"description":"List of extra groups that the \"jenkins\" user should be a part of.\n","example":["wheel","dialout"],"readOnly":false,"type":"list of strings"},"services.jenkins.extraOptions":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":[],"description":"Additional command line arguments to pass to Jenkins.\n","example":["--debug=9"],"readOnly":false,"type":"list of strings"},"services.jenkins.group":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"jenkins","description":"If the default user \"jenkins\" is configured then this is the primary\ngroup of that user.\n","readOnly":false,"type":"string"},"services.jenkins.home":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"/var/lib/jenkins","description":"The path to use as JENKINS_HOME. If the default user \"jenkins\" is configured then\nthis is the home of the \"jenkins\" user.\n","readOnly":false,"type":"path"},"services.jenkins.jobBuilder.enable":{"declarations":["nixos/modules/services/continuous-integration/jenkins/job-builder.nix"],"default":false,"description":"Whether or not to enable the Jenkins Job Builder (JJB) service. It\nallows defining jobs for Jenkins in a declarative manner.\n\nJobs managed through the Jenkins WebUI (or by other means) are left\nunchanged.\n\nNote that it really is declarative configuration; if you remove a\npreviously defined job, the corresponding job directory will be\ndeleted.\n\nPlease see the Jenkins Job Builder documentation for more info:\n<link xlink:href=\"http://docs.openstack.org/infra/jenkins-job-builder/\">\nhttp://docs.openstack.org/infra/jenkins-job-builder/</link>\n","readOnly":false,"type":"boolean"},"services.jenkins.jobBuilder.jsonJobs":{"declarations":["nixos/modules/services/continuous-integration/jenkins/job-builder.nix"],"default":[],"description":"Job descriptions for Jenkins Job Builder in JSON format.\n","example":{"_type":"literalExample","text":"[\n  ''\n    [ { \"job\":\n        { \"name\": \"jenkins-job-test-2\",\n          \"builders\": [ \"shell\": \"echo 'Hello world!'\" ]\n        }\n      }\n    ]\n  ''\n]\n"},"readOnly":false,"type":"list of strings"},"services.jenkins.jobBuilder.nixJobs":{"declarations":["nixos/modules/services/continuous-integration/jenkins/job-builder.nix"],"default":[],"description":"Job descriptions for Jenkins Job Builder in Nix format.\n\nThis is a trivial wrapper around jsonJobs, using builtins.toJSON\nbehind the scene.\n","example":{"_type":"literalExample","text":"[ { job =\n    { name = \"jenkins-job-test-3\";\n      builders = [\n        { shell = \"echo 'Hello world!'\"; }\n      ];\n    };\n  }\n]\n"},"readOnly":false,"type":"list of attribute sets"},"services.jenkins.jobBuilder.yamlJobs":{"declarations":["nixos/modules/services/continuous-integration/jenkins/job-builder.nix"],"default":"","description":"Job descriptions for Jenkins Job Builder in YAML format.\n","example":"- job:\n    name: jenkins-job-test-1\n    builders:\n      - shell: echo 'Hello world!'\n","readOnly":false,"type":"string"},"services.jenkins.listenAddress":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"0.0.0.0","description":"Specifies the bind address on which the jenkins HTTP interface listens.\nThe default is the wildcard address.\n","example":"localhost","readOnly":false,"type":"string"},"services.jenkins.packages":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"[ pkgs.stdenv pkgs.git pkgs.jdk config.programs.ssh.package pkgs.nix ]","description":"Packages to add to PATH for the jenkins process.\n","readOnly":false,"type":"list of packages"},"services.jenkins.port":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":8080,"description":"Specifies port number on which the jenkins HTTP interface listens.\nThe default is 8080.\n","readOnly":false,"type":"integer"},"services.jenkins.prefix":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"","description":"Specifies a urlPrefix to use with jenkins.\nIf the example /jenkins is given, the jenkins server will be\naccessible using localhost:8080/jenkins.\n","example":"/jenkins","readOnly":false,"type":"string"},"services.jenkins.user":{"declarations":["nixos/modules/services/continuous-integration/jenkins/default.nix"],"default":"jenkins","description":"User the jenkins server should execute under.\n","readOnly":false,"type":"string"},"services.jenkinsSlave.enable":{"declarations":["nixos/modules/services/continuous-integration/jenkins/slave.nix"],"default":false,"description":"If true the system will be configured to work as a jenkins slave.\nIf the system is also configured to work as a jenkins master then this has no effect.\nIn progress: Currently only assures the jenkins user is configured.\n","readOnly":false,"type":"boolean"},"services.jenkinsSlave.group":{"declarations":["nixos/modules/services/continuous-integration/jenkins/slave.nix"],"default":"jenkins","description":"If the default slave agent user \"jenkins\" is configured then this is\nthe primary group of that user.\n","readOnly":false,"type":"string"},"services.jenkinsSlave.home":{"declarations":["nixos/modules/services/continuous-integration/jenkins/slave.nix"],"default":"/var/lib/jenkins","description":"The path to use as JENKINS_HOME. If the default user \"jenkins\" is configured then\nthis is the home of the \"jenkins\" user.\n","readOnly":false,"type":"path"},"services.jenkinsSlave.user":{"declarations":["nixos/modules/services/continuous-integration/jenkins/slave.nix"],"default":"jenkins","description":"User the jenkins slave agent should execute under.\n","readOnly":false,"type":"string"},"services.jira.catalinaOptions":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":[],"description":"Java options to pass to catalina/tomcat.","example":["-Xms1024m","-Xmx2048m"],"readOnly":false,"type":"list of strings"},"services.jira.enable":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":false,"description":"Whether to enable Atlassian JIRA service.","example":true,"readOnly":false,"type":"boolean"},"services.jira.group":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":"jira","description":"Group which runs JIRA.","readOnly":false,"type":"string"},"services.jira.home":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":"/var/lib/jira","description":"Home directory of the JIRA instance.","readOnly":false,"type":"string"},"services.jira.jrePackage":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":"pkgs.openjdk8.jre","description":"Java Runtime to use for JIRA. Note that Atlassian recommends the Oracle JRE.","example":{"_type":"literalExample","text":"pkgs.openjdk8.jre"},"readOnly":false,"type":"package"},"services.jira.listenAddress":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":"127.0.0.1","description":"Address to listen on.","readOnly":false,"type":"string"},"services.jira.listenPort":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":8091,"description":"Port to listen on.","readOnly":false,"type":"integer"},"services.jira.proxy.enable":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":false,"description":"Whether to enable reverse proxy support.","example":true,"readOnly":false,"type":"boolean"},"services.jira.proxy.name":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"description":"Virtual hostname at the proxy","example":"jira.example.com","readOnly":false,"type":"string"},"services.jira.proxy.port":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":443,"description":"Port used at the proxy","example":80,"readOnly":false,"type":"integer"},"services.jira.proxy.scheme":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":"https","description":"Protocol used at the proxy.","example":"http","readOnly":false,"type":"string"},"services.jira.proxy.secure":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":true,"description":"Whether the connections to the proxy should be considered secure.","example":false,"readOnly":false,"type":"boolean"},"services.jira.user":{"declarations":["nixos/modules/services/web-apps/atlassian/jira.nix"],"default":"jira","description":"User which runs JIRA.","readOnly":false,"type":"string"},"services.journald.console":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"If non-empty, write log messages to the specified TTY device.","readOnly":false,"type":"string"},"services.journald.enableHttpGateway":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":false,"description":"Whether to enable the HTTP gateway to the journal.\n","readOnly":false,"type":"boolean"},"services.journald.extraConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Extra config options for systemd-journald. See man journald.conf\nfor available options.\n","example":"Storage=volatile","readOnly":false,"type":"string"},"services.journald.rateLimitBurst":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":100,"description":"Configures the rate limiting burst limit (number of messages per\ninterval) that is applied to all messages generated on the system.\nThis rate limiting is applied per-service, so that two services\nwhich log do not interfere with each other's limit.\n","readOnly":false,"type":"integer"},"services.journald.rateLimitInterval":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"10s","description":"Configures the rate limiting interval that is applied to all\nmessages generated on the system. This rate limiting is applied\nper-service, so that two services which log do not interfere with\neach other's limit. The value may be specified in the following\nunits: s, min, h, ms, us. To turn off any kind of rate limiting,\nset either value to 0.\n","readOnly":false,"type":"string"},"services.kerberos_server.enable":{"declarations":["nixos/modules/services/system/kerberos.nix"],"default":false,"description":"Enable the kerberos authentification server.\n","readOnly":false,"type":"unspecified"},"services.kibana.cert":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":null,"description":"Kibana ssl certificate.","readOnly":false,"type":"null or path"},"services.kibana.dataDir":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":"/var/lib/kibana","description":"Kibana data directory","readOnly":false,"type":"path"},"services.kibana.defaultAppId":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":"discover","description":"Elasticsearch default application id.","readOnly":false,"type":"string"},"services.kibana.elasticsearch.ca":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":null,"description":"CA file to auth against elasticsearch.","readOnly":false,"type":"null or path"},"services.kibana.elasticsearch.cert":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":null,"description":"Certificate file to auth against elasticsearch.","readOnly":false,"type":"null or path"},"services.kibana.elasticsearch.key":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":null,"description":"Key file to auth against elasticsearch.","readOnly":false,"type":"null or path"},"services.kibana.elasticsearch.password":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":null,"description":"Password for elasticsearch basic auth.","readOnly":false,"type":"null or string"},"services.kibana.elasticsearch.url":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":"http://localhost:9200","description":"Elasticsearch url","readOnly":false,"type":"string"},"services.kibana.elasticsearch.username":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":null,"description":"Username for elasticsearch basic auth.","readOnly":false,"type":"null or string"},"services.kibana.enable":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":false,"description":"Whether to enable enable kibana service.","example":true,"readOnly":false,"type":"boolean"},"services.kibana.extraConf":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":{},"description":"Kibana extra configuration","readOnly":false,"type":"attribute set"},"services.kibana.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.kibana.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.kibana.index":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":".kibana","description":"Elasticsearch index to use for saving kibana config.","readOnly":false,"type":"string"},"services.kibana.key":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":null,"description":"Kibana ssl key.","readOnly":false,"type":"null or path"},"services.kibana.listenAddress":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":"127.0.0.1","description":"Kibana listening host","readOnly":false,"type":"string"},"services.kibana.package":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":"pkgs.kibana","description":"Kibana package to use","readOnly":false,"type":"package"},"services.kibana.port":{"declarations":["nixos/modules/services/search/kibana.nix"],"default":5601,"description":"Kibana listening port","readOnly":false,"type":"integer"},"services.kippo.enable":{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":false,"description":"Enable the kippo honeypot ssh server.","readOnly":false,"type":"boolean"},"services.kippo.extraConfig":{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"","description":"Extra verbatim configuration added to the end of kippo.cfg.","readOnly":false,"type":"string"},"services.kippo.hostname":{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"nas3","description":"Hostname for kippo to present to SSH login","readOnly":false,"type":"string"},"services.kippo.logPath":{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"/var/log/kippo","description":"Path of log files needed for operation and configuration.","readOnly":false,"type":"string"},"services.kippo.pidPath":{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"/run/kippo","description":"Path of pid files needed for operation.","readOnly":false,"type":"string"},"services.kippo.port":{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":2222,"description":"TCP port number for kippo to bind to.","readOnly":false,"type":"integer"},"services.kippo.varPath":{"declarations":["nixos/modules/services/networking/kippo.nix"],"default":"/var/lib/kippo","description":"Path of read/write files needed for operation and configuration.","readOnly":false,"type":"string"},"services.klogd.enable":{"declarations":["nixos/modules/services/logging/klogd.nix"],"default":false,"description":"Whether to enable klogd, the kernel log message processing\ndaemon.  Since systemd handles logging of kernel messages on\nLinux 3.5 and later, this is only useful if you're running an\nolder kernel.\n","readOnly":false,"type":"boolean"},"services.kmscon.enable":{"declarations":["nixos/modules/services/ttys/kmscon.nix"],"default":false,"description":"Use kmscon as the virtual console instead of gettys.\nkmscon is a kms/dri-based userspace virtual terminal implementation.\nIt supports a richer feature set than the standard linux console VT,\nincluding full unicode support, and when the video card supports drm\nshould be much faster.\n","readOnly":false,"type":"boolean"},"services.kmscon.extraConfig":{"declarations":["nixos/modules/services/ttys/kmscon.nix"],"default":"","description":"Extra contents of the kmscon.conf file.","example":"font-size=14","readOnly":false,"type":"string"},"services.kmscon.extraOptions":{"declarations":["nixos/modules/services/ttys/kmscon.nix"],"default":"","description":"Extra flags to pass to kmscon.","example":"--term xterm-256color","readOnly":false,"type":"string"},"services.kmscon.hwRender":{"declarations":["nixos/modules/services/ttys/kmscon.nix"],"default":false,"description":"Whether to use 3D hardware acceleration to render the console.","readOnly":false,"type":"boolean"},"services.kubernetes.apiserver.address":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"127.0.0.1","description":"Kubernetes apiserver listening address.","readOnly":false,"type":"string"},"services.kubernetes.apiserver.admissionControl":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":["NamespaceLifecycle","LimitRanger","ServiceAccount","ResourceQuota"],"description":"Kubernetes admission control plugins to use. See\n<link xlink:href=\"http://kubernetes.io/docs/admin/admission-controllers/\"/>\n","example":["NamespaceLifecycle","NamespaceExists","LimitRanger","SecurityContextDeny","ServiceAccount","ResourceQuota"],"readOnly":false,"type":"list of strings"},"services.kubernetes.apiserver.advertiseAddress":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Kubernetes apiserver IP address on which to advertise the apiserver\nto members of the cluster. This address must be reachable by the rest\nof the cluster.\n","readOnly":false,"type":"null or string"},"services.kubernetes.apiserver.allowPrivileged":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":true,"description":"Whether to allow privileged containers on kubernetes.","readOnly":false,"type":"boolean"},"services.kubernetes.apiserver.authorizationMode":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"AlwaysAllow","description":"Kubernetes apiserver authorization mode (AlwaysAllow/AlwaysDeny/ABAC). See\n<link xlink:href=\"http://kubernetes.io/v1.0/docs/admin/authorization.html\"/>\n","readOnly":false,"type":"one of \"AlwaysAllow\", \"AlwaysDeny\", \"ABAC\""},"services.kubernetes.apiserver.authorizationPolicy":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":[],"description":"Kubernetes apiserver authorization policy file. See\n<link xlink:href=\"http://kubernetes.io/v1.0/docs/admin/authorization.html\"/>\n","example":{"_type":"literalExample","text":"[\n  {user = \"admin\";}\n  {user = \"scheduler\"; readonly = true; kind= \"pods\";}\n  {user = \"scheduler\"; kind = \"bindings\";}\n  {user = \"kubelet\";  readonly = true; kind = \"bindings\";}\n  {user = \"kubelet\"; kind = \"events\";}\n  {user= \"alice\"; ns = \"projectCaribou\";}\n  {user = \"bob\"; readonly = true; ns = \"projectCaribou\";}\n]\n"},"readOnly":false,"type":"list of attribute sets"},"services.kubernetes.apiserver.clientCaFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Kubernetes apiserver CA file for client auth.","readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.enable":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":false,"description":"Whether to enable kubernetes apiserver.","readOnly":false,"type":"boolean"},"services.kubernetes.apiserver.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"","description":"Kubernetes apiserver extra command line options.","readOnly":false,"type":"string"},"services.kubernetes.apiserver.kubeletClientCaFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Path to a cert file for connecting to kubelet","readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.kubeletClientCertFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Client certificate to use for connections to kubelet","readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.kubeletClientKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Key to use for connections to kubelet","readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.kubeletHttps":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":true,"description":"Whether to use https for connections to kubelet","readOnly":false,"type":"boolean"},"services.kubernetes.apiserver.port":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":8080,"description":"Kubernetes apiserver listening port.","readOnly":false,"type":"integer"},"services.kubernetes.apiserver.portalNet":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"10.10.10.10/24","description":"Kubernetes CIDR notation IP range from which to assign portal IPs","readOnly":false,"type":"string"},"services.kubernetes.apiserver.publicAddress":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"127.0.0.1","description":"Kubernetes apiserver public listening address used for read only and\nsecure port.\n","readOnly":false,"type":"string"},"services.kubernetes.apiserver.runtimeConfig":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"","description":"Api runtime configuration. See\n<link xlink:href=\"http://kubernetes.io/v1.0/docs/admin/cluster-management.html\"/>\n","example":"api/all=false,api/v1=true","readOnly":false,"type":"string"},"services.kubernetes.apiserver.securePort":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":443,"description":"Kubernetes apiserver secure port.","readOnly":false,"type":"integer"},"services.kubernetes.apiserver.serviceAccountKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Kubernetes apiserver PEM-encoded x509 RSA private or public key file,\nused to verify ServiceAccount tokens. By default tls private key file\nis used.\n","readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.tlsCertFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Kubernetes apiserver certificate file.","readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.tlsKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Kubernetes apiserver private key file.","readOnly":false,"type":"null or path"},"services.kubernetes.apiserver.tokenAuth":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Kubernetes apiserver token authentication file. See\n<link xlink:href=\"http://kubernetes.io/docs/admin/authentication.html\"/>\n","example":"token,user,uid,\"group1,group2,group3\"","readOnly":false,"type":"null or string"},"services.kubernetes.controllerManager.address":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"127.0.0.1","description":"Kubernetes controller manager listening address.","readOnly":false,"type":"string"},"services.kubernetes.controllerManager.clusterCidr":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"10.10.0.0/16","description":"Kubernetes controller manager CIDR Range for Pods in cluster","readOnly":false,"type":"string"},"services.kubernetes.controllerManager.enable":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":false,"description":"Whether to enable kubernetes controller manager.","readOnly":false,"type":"boolean"},"services.kubernetes.controllerManager.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"","description":"Kubernetes controller manager extra command line options.","readOnly":false,"type":"string"},"services.kubernetes.controllerManager.leaderElect":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":false,"description":"Whether to start leader election before executing main loop","readOnly":false,"type":"boolean"},"services.kubernetes.controllerManager.port":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":10252,"description":"Kubernetes controller manager listening port.","readOnly":false,"type":"integer"},"services.kubernetes.controllerManager.rootCaFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Kubernetes controller manager certificate authority file included in\nservice account's token secret.\n","readOnly":false,"type":"null or path"},"services.kubernetes.controllerManager.serviceAccountKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Kubernetes controller manager PEM-encoded private RSA key file used to\nsign service account tokens\n","readOnly":false,"type":"null or path"},"services.kubernetes.dataDir":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"/var/lib/kubernetes","description":"Kubernetes root directory for managing kubelet files.","readOnly":false,"type":"path"},"services.kubernetes.dns.domain":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"cluster.local","description":"Kuberntes dns domain under which to create names.","readOnly":false,"type":"string"},"services.kubernetes.dns.enable":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":false,"description":"Whether to enable kubernetes dns service..","example":true,"readOnly":false,"type":"boolean"},"services.kubernetes.dns.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"","description":"Kubernetes dns extra command line options.","readOnly":false,"type":"string"},"services.kubernetes.dns.port":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":53,"description":"Kubernetes dns listening port","readOnly":false,"type":"integer"},"services.kubernetes.etcd.caFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Etcd ca file","readOnly":false,"type":"null or path"},"services.kubernetes.etcd.certFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Etcd cert file","readOnly":false,"type":"null or path"},"services.kubernetes.etcd.keyFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Etcd key file","readOnly":false,"type":"null or path"},"services.kubernetes.etcd.servers":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":["http://127.0.0.1:2379"],"description":"List of etcd servers. By default etcd is started, except if this option is changed.","readOnly":false,"type":"list of strings"},"services.kubernetes.kubeconfig.caFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Certificate authrority file to use to connect to kuberentes apiserver","readOnly":false,"type":"null or path"},"services.kubernetes.kubeconfig.certFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Client certificate file to use to connect to kubernetes","readOnly":false,"type":"null or path"},"services.kubernetes.kubeconfig.keyFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"Client key file to use to connect to kubernetes","readOnly":false,"type":"null or path"},"services.kubernetes.kubeconfig.server":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"http://127.0.0.1:8080","description":"Kubernetes apiserver server address","readOnly":false,"type":"string"},"services.kubernetes.kubelet.address":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"0.0.0.0","description":"Kubernetes kubelet info server listening address.","readOnly":false,"type":"string"},"services.kubernetes.kubelet.allowPrivileged":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":true,"description":"Whether to allow kubernetes containers to request privileged mode.","readOnly":false,"type":"boolean"},"services.kubernetes.kubelet.cadvisorPort":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":4194,"description":"Kubernetes kubelet local cadvisor port.","readOnly":false,"type":"integer"},"services.kubernetes.kubelet.clusterDns":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"10.10.1.1","description":"Use alternative dns.","readOnly":false,"type":"string"},"services.kubernetes.kubelet.clusterDomain":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"cluster.local","description":"Use alternative domain.","readOnly":false,"type":"string"},"services.kubernetes.kubelet.cni.config":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":[],"description":"Kubernetes CNI configuration","example":{"_type":"literalExample","text":"[{\n  \"cniVersion\": \"0.2.0\",\n  \"name\": \"mynet\",\n  \"type\": \"bridge\",\n  \"bridge\": \"cni0\",\n  \"isGateway\": true,\n  \"ipMasq\": true,\n  \"ipam\": {\n      \"type\": \"host-local\",\n      \"subnet\": \"10.22.0.0/16\",\n      \"routes\": [\n          { \"dst\": \"0.0.0.0/0\" }\n      ]\n  }\n} {\n  \"cniVersion\": \"0.2.0\",\n  \"type\": \"loopback\"\n}]\n"},"readOnly":false,"type":"list of attribute sets"},"services.kubernetes.kubelet.cni.packages":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":[],"description":"List of network plugin packages to install","readOnly":false,"type":"list of packages"},"services.kubernetes.kubelet.enable":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":false,"description":"Whether to enable kubernetes kubelet.","readOnly":false,"type":"boolean"},"services.kubernetes.kubelet.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"","description":"Kubernetes kubelet extra command line options.","readOnly":false,"type":"string"},"services.kubernetes.kubelet.healthz.bind":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"127.0.0.1","description":"Kubernetes kubelet healthz listening address.","readOnly":false,"type":"string"},"services.kubernetes.kubelet.healthz.port":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":10248,"description":"Kubernetes kubelet healthz port.","readOnly":false,"type":"integer"},"services.kubernetes.kubelet.hostname":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"nixos","description":"Kubernetes kubelet hostname override","readOnly":false,"type":"string"},"services.kubernetes.kubelet.manifests":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":{},"description":"List of manifests to bootstrap with kubelet","readOnly":false,"type":"attribute set of attribute sets"},"services.kubernetes.kubelet.networkPlugin":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"kubenet","description":"Network plugin to use by kubernetes","readOnly":false,"type":"null or one of \"cni\", \"kubenet\""},"services.kubernetes.kubelet.port":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":10250,"description":"Kubernetes kubelet info server listening port.","readOnly":false,"type":"integer"},"services.kubernetes.kubelet.registerNode":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":true,"description":"Whether to auto register kubelet with API server.","readOnly":false,"type":"boolean"},"services.kubernetes.kubelet.registerSchedulable":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":true,"description":"Register the node as schedulable. No-op if register-node is false.","readOnly":false,"type":"boolean"},"services.kubernetes.kubelet.tlsCertFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"File containing x509 Certificate for HTTPS.","readOnly":false,"type":"null or path"},"services.kubernetes.kubelet.tlsKeyFile":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":null,"description":"File containing x509 private key matching tlsCertFile.","readOnly":false,"type":"null or path"},"services.kubernetes.package":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"kubernetes-1.4.6","description":"Kubernetes package to use.","readOnly":false,"type":"package"},"services.kubernetes.proxy.address":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"0.0.0.0","description":"Kubernetes proxy listening address.","readOnly":false,"type":"string"},"services.kubernetes.proxy.enable":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":false,"description":"Whether to enable kubernetes proxy.","readOnly":false,"type":"boolean"},"services.kubernetes.proxy.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"","description":"Kubernetes proxy extra command line options.","readOnly":false,"type":"string"},"services.kubernetes.roles":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":[],"description":"Kubernetes role that this machine should take.\n\nMaster role will enable etcd, apiserver, scheduler and controller manager\nservices. Node role will enable etcd, docker, kubelet and proxy services.\n","readOnly":false,"type":"list of one of \"master\", \"node\"s"},"services.kubernetes.scheduler.address":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"127.0.0.1","description":"Kubernetes scheduler listening address.","readOnly":false,"type":"string"},"services.kubernetes.scheduler.enable":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":false,"description":"Whether to enable kubernetes scheduler.","readOnly":false,"type":"boolean"},"services.kubernetes.scheduler.extraOpts":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":"","description":"Kubernetes scheduler extra command line options.","readOnly":false,"type":"string"},"services.kubernetes.scheduler.leaderElect":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":false,"description":"Whether to start leader election before executing main loop","readOnly":false,"type":"boolean"},"services.kubernetes.scheduler.port":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":10251,"description":"Kubernetes scheduler listening port.","readOnly":false,"type":"integer"},"services.kubernetes.verbose":{"declarations":["nixos/modules/services/cluster/kubernetes.nix"],"default":false,"description":"Kubernetes enable verbose mode for debugging","readOnly":false,"type":"boolean"},"services.lambdabot.enable":{"declarations":["nixos/modules/services/networking/lambdabot.nix"],"default":false,"description":"Enable the Lambdabot IRC bot","readOnly":false,"type":"boolean"},"services.lambdabot.package":{"declarations":["nixos/modules/services/networking/lambdabot.nix"],"default":"pkgs.lambdabot","description":"Used lambdabot package","readOnly":false,"type":"package"},"services.lambdabot.script":{"declarations":["nixos/modules/services/networking/lambdabot.nix"],"default":"","description":"Lambdabot script","readOnly":false,"type":"string"},"services.leaps.address":{"declarations":["nixos/modules/services/misc/leaps.nix"],"default":"","description":"Hostname or IP-address to listen to. By default it will listen on all interfaces.","example":"127.0.0.1","readOnly":false,"type":"string"},"services.leaps.enable":{"declarations":["nixos/modules/services/misc/leaps.nix"],"default":false,"description":"Whether to enable leaps.","example":true,"readOnly":false,"type":"boolean"},"services.leaps.path":{"declarations":["nixos/modules/services/misc/leaps.nix"],"default":"/","description":"Subdirectory used for reverse proxy setups","readOnly":false,"type":"path"},"services.leaps.port":{"declarations":["nixos/modules/services/misc/leaps.nix"],"default":8080,"description":"A port where leaps listens for incoming http requests","readOnly":false,"type":"integer"},"services.libreswan.configSetup":{"declarations":["nixos/modules/services/networking/libreswan.nix"],"default":"protostack=netkey\nnat_traversal=yes\nvirtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:25.0.0.0/8,%v4:100.64.0.0/10,%v6:fd00::/8,%v6:fe80::/10\n","description":"Options to go in the 'config setup' section of the libreswan ipsec configuration","example":"secretsfile=/root/ipsec.secrets\nprotostack=netkey\nnat_traversal=yes\nvirtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:25.0.0.0/8,%v4:100.64.0.0/10,%v6:fd00::/8,%v6:fe80::/10\n","readOnly":false,"type":"string"},"services.libreswan.connections":{"declarations":["nixos/modules/services/networking/libreswan.nix"],"default":{},"description":"A set of connections to define for the libreswan ipsec service","example":{"myconnection":"auto=add\nleft=%defaultroute\nleftid=@user\n\nright=my.vpn.com\n\nikev2=no\nikelifetime=8h\n"},"readOnly":false,"type":"attribute set of strings"},"services.libreswan.enable":{"declarations":["nixos/modules/services/networking/libreswan.nix"],"default":false,"description":"Whether to enable libreswan ipsec service.","example":true,"readOnly":false,"type":"boolean"},"services.lighttpd.cgit.configText":{"declarations":["nixos/modules/services/web-servers/lighttpd/cgit.nix"],"default":"","description":"Verbatim contents of the cgit runtime configuration file. Documentation\n(with cgitrc example file) is available in \"man cgitrc\". Or online:\nhttp://git.zx2c4.com/cgit/tree/cgitrc.5.txt\n","example":"cache-size=1000\nscan-path=/srv/git\n","readOnly":false,"type":"string"},"services.lighttpd.cgit.enable":{"declarations":["nixos/modules/services/web-servers/lighttpd/cgit.nix"],"default":false,"description":"If true, enable cgit (fast web interface for git repositories) as a\nsub-service in lighttpd. cgit will be accessible at\nhttp://yourserver/cgit\n","readOnly":false,"type":"boolean"},"services.lighttpd.configText":{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"","description":"Overridable config file contents to use for lighttpd. By default, use\nthe contents automatically generated by NixOS.\n","example":"...verbatim config file contents...","readOnly":false,"type":"string"},"services.lighttpd.document-root":{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"/srv/www","description":"Document-root of the web server. Must be readable by the \"lighttpd\" user.\n","readOnly":false,"type":"path"},"services.lighttpd.enable":{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":false,"description":"Enable the lighttpd web server.\n","readOnly":false,"type":"boolean"},"services.lighttpd.enableModules":{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":[],"description":"List of lighttpd modules to enable. Sub-services take care of\nenabling modules as needed, so this option is mainly for when you\nwant to add custom stuff to\n<option>services.lighttpd.extraConfig</option> that depends on a\ncertain module.\n","example":["mod_cgi","mod_status"],"readOnly":false,"type":"list of strings"},"services.lighttpd.extraConfig":{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":"","description":"These configuration lines will be appended to the generated lighttpd\nconfig file. Note that this mechanism does not work when the manual\n<option>configText</option> option is used.\n","readOnly":false,"type":"string"},"services.lighttpd.gitweb.enable":{"declarations":["nixos/modules/services/web-servers/lighttpd/gitweb.nix"],"default":false,"description":"If true, enable gitweb in lighttpd. Access it at http://yourserver/gitweb\n","readOnly":false,"type":"boolean"},"services.lighttpd.gitweb.extraConfig":{"declarations":["nixos/modules/services/web-servers/lighttpd/gitweb.nix"],"default":"","description":"Verbatim configuration text appended to the generated gitweb.conf file.\n","readOnly":false,"type":"string"},"services.lighttpd.gitweb.projectroot":{"declarations":["nixos/modules/services/web-servers/lighttpd/gitweb.nix"],"default":"/srv/git","description":"Path to git projects (bare repositories) that should be served by\ngitweb. Must not end with a slash.\n","readOnly":false,"type":"path"},"services.lighttpd.inginious.backendType":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":"local","description":"Select how INGINious accesses to grading containers.\nThe default \"local\" option ensures that Docker is started and provisioned.\nFore more information, see http://inginious.readthedocs.io/en/latest/install_doc/config_reference.html\nNot all backends are supported. Use services.inginious.configFile for full flexibility.\n","readOnly":false,"type":"one of \"local\", \"remote_manual\""},"services.lighttpd.inginious.configFile":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":null,"description":"The path to an INGInious configuration file.","example":{"_type":"literalExample","text":"pkgs.writeText \"configuration.yaml\" \"# custom config options ...\";"},"readOnly":false,"type":"null or path"},"services.lighttpd.inginious.containers":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":{"default":"ingi/inginious-c-default"},"description":"An attrset describing the required containers\nThese containers will be available in INGInious using their short name (key)\nand will be automatically downloaded before INGInious starts.\n","example":{"default":"ingi/inginious-c-default","java":"ingi/inginious-c-java","oz":"ingi/inginious-c-oz","pythia1compat":"ingi/inginious-c-pythia1compat","sekexe":"ingi/inginious-c-sekexe"},"readOnly":false,"type":"attribute set of strings"},"services.lighttpd.inginious.enable":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":false,"description":"Whether to enable INGInious, an automated code testing and grading system..","example":true,"readOnly":false,"type":"boolean"},"services.lighttpd.inginious.extraConfig":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":"","description":"Extra option in YaML format, to be appended to the config file.","example":"# Load the dummy auth plugin.\nplugins:\n  - plugin_module: inginious.frontend.webapp.plugins.auth.demo_auth\n    users:\n      # register the user \"test\" with the password \"someverycomplexpassword\"\n      test: someverycomplexpassword\n","readOnly":false,"type":"string"},"services.lighttpd.inginious.hostPattern":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":"^inginious.","description":"The domain that serves INGInious.\nINGInious uses absolute paths which makes it difficult to relocate in its own subdir.\nThe default configuration will serve INGInious when the server is accessed with a hostname starting with \"inginious.\".\nIf left blank, INGInious will take the precedence over all the other lighttpd sites, which is probably not what you want.\n","example":"^inginious.mydomain.xyz$","readOnly":false,"type":"string"},"services.lighttpd.inginious.remoteAgents":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":[],"description":"A list of remote agents, used only when services.inginious.backendType is \"remote_manual\".","example":[{"host":"192.0.2.25","port":"1345"}],"readOnly":false,"type":"list of attribute set of stringss"},"services.lighttpd.inginious.superadmins":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":["admin"],"description":"List of user logins allowed to administrate the whole server.","example":["john","pepe","emilia"],"readOnly":false,"type":"list of strings"},"services.lighttpd.inginious.tasksDirectory":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":"${pkgs.inginious}/lib/python2.7/site-packages/inginious/tasks","description":"Path to the tasks folder.\nDefaults to the provided test tasks folder (readonly).\n","example":"/var/lib/INGInious/tasks","readOnly":false,"type":"path"},"services.lighttpd.inginious.useLTI":{"declarations":["nixos/modules/services/web-servers/lighttpd/inginious.nix"],"default":false,"description":"Whether to start the LTI frontend in place of the webapp.","readOnly":false,"type":"boolean"},"services.lighttpd.mod_status":{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":false,"description":"Show server status overview at /server-status, statistics at\n/server-statistics and list of loaded modules at /server-config.\n","readOnly":false,"type":"boolean"},"services.lighttpd.mod_userdir":{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":false,"description":"If true, requests in the form /~user/page.html are rewritten to take\nthe file public_html/page.html from the home directory of the user.\n","readOnly":false,"type":"boolean"},"services.lighttpd.port":{"declarations":["nixos/modules/services/web-servers/lighttpd/default.nix"],"default":80,"description":"TCP port number for lighttpd to bind to.\n","readOnly":false,"type":"integer"},"services.liquidsoap.streams":{"declarations":["nixos/modules/services/audio/liquidsoap.nix"],"default":{},"description":"Set of Liquidsoap streams to start,\none systemd service per stream.\n","example":{"myStream1":{"_type":"literalExample","text":"\"/etc/liquidsoap/myStream1.liq\""},"myStream2":{"_type":"literalExample","text":"./myStream2.liq"},"myStream3":{"_type":"literalExample","text":"\"out(playlist(\\\"/srv/music/\\\"))\""}},"readOnly":false,"type":"attribute set of path or strings"},"services.locate.enable":{"declarations":["nixos/modules/misc/locate.nix"],"default":false,"description":"If enabled, NixOS will periodically update the database of\nfiles used by the <command>locate</command> command.\n","readOnly":false,"type":"boolean"},"services.locate.extraFlags":{"declarations":["nixos/modules/misc/locate.nix"],"default":[],"description":"Extra flags to pass to <command>updatedb</command>.\n","readOnly":false,"type":"list of strings"},"services.locate.includeStore":{"declarations":["nixos/modules/misc/locate.nix"],"default":false,"description":"Whether to include <filename>/nix/store</filename> in the locate database.\n","readOnly":false,"type":"boolean"},"services.locate.interval":{"declarations":["nixos/modules/misc/locate.nix"],"default":"02:15","description":"Update the locate database at this interval. Updates by\ndefault at 2:15 AM every day.\n\nThe format is described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>7</manvolnum></citerefentry>.\n","example":"hourly","readOnly":false,"type":"string"},"services.locate.localuser":{"declarations":["nixos/modules/misc/locate.nix"],"default":"nobody","description":"The user to search non-network directories as, using\n<command>su</command>.\n","readOnly":false,"type":"string"},"services.locate.output":{"declarations":["nixos/modules/misc/locate.nix"],"default":"/var/cache/locatedb","description":"The database file to build.\n","readOnly":false,"type":"path"},"services.logcheck.config":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"FQDN=1","description":"Config options that you would like in logcheck.conf.\n","readOnly":false,"type":"string"},"services.logcheck.enable":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":false,"description":"Enable the logcheck cron job.\n","readOnly":false,"type":"boolean"},"services.logcheck.extraGroups":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":[],"description":"Extra groups for the logcheck user, for example to be able to use sendmail,\nor to access certain log files.\n","example":["postdrop","mongodb"],"readOnly":false,"type":"list of strings"},"services.logcheck.extraRulesDirs":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":[],"description":"Directories with extra rules.\n","example":"/etc/logcheck","readOnly":false,"type":"list of paths"},"services.logcheck.files":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":["/var/log/messages"],"description":"Which log files to check.\n","example":["/var/log/messages","/var/log/mail"],"readOnly":false,"type":"list of paths"},"services.logcheck.ignore":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":{},"description":"This option defines extra ignore rules.\n","readOnly":false,"type":"list or attribute set of submodules"},"services.logcheck.ignore.<name?>.level":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"server","description":"Set the logcheck level.\n","readOnly":false,"type":"one of \"workstation\", \"server\", \"paranoid\""},"services.logcheck.ignore.<name?>.regex":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Regex specifying which log lines to ignore.\n","readOnly":false,"type":"string"},"services.logcheck.ignoreCron":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":{},"description":"This option defines extra ignore rules for cronjobs.\n","readOnly":false,"type":"list or attribute set of submodules"},"services.logcheck.ignoreCron.<name?>.cmdline":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"","description":"Command line for the cron job. Will be turned into a regex for the logcheck ignore rule.\n","readOnly":false,"type":"string"},"services.logcheck.ignoreCron.<name?>.timeArgs":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":null,"description":"\"min hr dom mon dow\" crontab time args, to auto-create a cronjob too.\nLeave at null to not do this and just add a logcheck ignore rule.\n","example":"02 06 * * *","readOnly":false,"type":"null or string"},"services.logcheck.ignoreCron.<name?>.user":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"root","description":"User that runs the cronjob.\n","readOnly":false,"type":"string"},"services.logcheck.level":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"server","description":"Set the logcheck level. Either \"workstation\", \"server\", or \"paranoid\".\n","readOnly":false,"type":"string"},"services.logcheck.mailTo":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"root","description":"Email address to send reports to.\n","example":"you@domain.com","readOnly":false,"type":"string"},"services.logcheck.timeOfDay":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"*","description":"Time of day to run logcheck. A logcheck will be scheduled at xx:02 each day.\nLeave default (*) to run every hour. Of course when nothing special was logged,\nlogcheck will be silent.\n","example":"6","readOnly":false,"type":"string"},"services.logcheck.user":{"declarations":["nixos/modules/services/logging/logcheck.nix"],"default":"logcheck","description":"Username for the logcheck user.\n","readOnly":false,"type":"string"},"services.logind.extraConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Extra config options for systemd-logind. See man logind.conf for\navailable options.\n","example":"HandleLidSwitch=ignore","readOnly":false,"type":"string"},"services.logmein-hamachi.enable":{"declarations":["nixos/modules/services/networking/logmein-hamachi.nix"],"default":false,"description":"Whether to enable LogMeIn Hamachi, a proprietary\n(closed source) commercial VPN software.\n","readOnly":false,"type":"boolean"},"services.logrotate.config":{"declarations":["nixos/modules/services/logging/logrotate.nix"],"default":"","description":"The contents of the logrotate config file\n","readOnly":false,"type":"string"},"services.logrotate.enable":{"declarations":["nixos/modules/services/logging/logrotate.nix"],"default":false,"description":"Enable the logrotate cron job\n","readOnly":false,"type":"boolean"},"services.logstash.address":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"0.0.0.0","description":"Address on which to start webserver.","readOnly":false,"type":"string"},"services.logstash.enable":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":false,"description":"Enable logstash.","readOnly":false,"type":"boolean"},"services.logstash.enableWeb":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":false,"description":"Enable the logstash web interface.","readOnly":false,"type":"boolean"},"services.logstash.filterConfig":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"noop {}","description":"logstash filter configuration.","example":"if [type] == \"syslog\" {\n  # Keep only relevant systemd fields\n  # http://www.freedesktop.org/software/systemd/man/systemd.journal-fields.html\n  prune {\n    whitelist_names => [\n      \"type\", \"@timestamp\", \"@version\",\n      \"MESSAGE\", \"PRIORITY\", \"SYSLOG_FACILITY\"\n    ]\n  }\n}\n","readOnly":false,"type":"string"},"services.logstash.filterWorkers":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":1,"description":"The quantity of filter workers to run.","readOnly":false,"type":"integer"},"services.logstash.inputConfig":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"stdin { type => \"example\" }","description":"Logstash input configuration.","example":"# Read from journal\npipe {\n  command => \"${pkgs.systemd}/bin/journalctl -f -o json\"\n  type => \"syslog\" codec => json {}\n}\n","readOnly":false,"type":"string"},"services.logstash.logLevel":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"warn","description":"Logging verbosity level.","readOnly":false,"type":"one of \"debug\", \"info\", \"warn\", \"error\", \"fatal\""},"services.logstash.outputConfig":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"stdout { debug => true debug_format => \"json\"}","description":"Logstash output configuration.","example":"redis { host => \"localhost\" data_type => \"list\" key => \"logstash\" codec => json }\nelasticsearch { embedded => true }\n","readOnly":false,"type":"string"},"services.logstash.package":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"pkgs.logstash","description":"Logstash package to use.","example":{"_type":"literalExample","text":"pkgs.logstash"},"readOnly":false,"type":"package"},"services.logstash.plugins":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":[],"description":"The paths to find other logstash plugins in.","example":{"_type":"literalExample","text":"[ pkgs.logstash-contrib ]"},"readOnly":false,"type":"list of paths"},"services.logstash.port":{"declarations":["nixos/modules/services/logging/logstash.nix"],"default":"9292","description":"Port on which to start webserver.","readOnly":false,"type":"string"},"services.longview.apacheStatusUrl":{"declarations":["nixos/modules/services/monitoring/longview.nix"],"default":"","description":"The Apache status page URL. If provided, Longview will\ngather statistics from this location. This requires Apache\nmod_status to be loaded and enabled.\n","example":"http://127.0.0.1/server-status","readOnly":false,"type":"string"},"services.longview.apiKey":{"declarations":["nixos/modules/services/monitoring/longview.nix"],"description":"Longview API key. To get this, look in Longview settings which\nare found at https://manager.linode.com/longview/.\n","example":"01234567-89AB-CDEF-0123456789ABCDEF","readOnly":false,"type":"string"},"services.longview.enable":{"declarations":["nixos/modules/services/monitoring/longview.nix"],"default":false,"description":"If enabled, system metrics will be sent to Linode LongView.\n","readOnly":false,"type":"boolean"},"services.longview.mysqlPassword":{"declarations":["nixos/modules/services/monitoring/longview.nix"],"description":"The password corresponding to mysqlUser.  Warning: this is\nstored in cleartext in the Nix store!\n","readOnly":false,"type":"string"},"services.longview.mysqlUser":{"declarations":["nixos/modules/services/monitoring/longview.nix"],"default":"","description":"The user for connecting to the MySQL database. If provided,\nLongview will connect to MySQL and collect statistics about\nqueries, etc. This user does not need to have been granted\nany extra privileges.\n","readOnly":false,"type":"string"},"services.longview.nginxStatusUrl":{"declarations":["nixos/modules/services/monitoring/longview.nix"],"default":"","description":"The Nginx status page URL. Longview will gather statistics\nfrom this URL. This requires the Nginx stub_status module to\nbe enabled and configured at the given location.\n","example":"http://127.0.0.1/nginx_status","readOnly":false,"type":"string"},"services.lshd.enable":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":false,"description":"Whether to enable the GNU lshd SSH2 daemon, which allows\nsecure remote login.\n","readOnly":false,"type":"unspecified"},"services.lshd.hostKey":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":"/etc/lsh/host-key","description":"Path to the server's private key.  Note that this key must\nhave been created, e.g., using \"lsh-keygen --server |\nlsh-writekey --server\", so that you can run lshd.\n","readOnly":false,"type":"unspecified"},"services.lshd.interfaces":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":[],"description":"List of network interfaces where listening for connections.\nWhen providing the empty list, `[]', lshd listens on all\nnetwork interfaces.\n","example":["localhost","1.2.3.4:443"],"readOnly":false,"type":"unspecified"},"services.lshd.loginShell":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":null,"description":"If non-null, override the default login shell with the\nspecified value.\n","example":"/nix/store/xyz-bash-10.0/bin/bash10","readOnly":false,"type":"unspecified"},"services.lshd.passwordAuthentication":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":true,"description":"Whether to enable password authentication.","readOnly":false,"type":"unspecified"},"services.lshd.portNumber":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":22,"description":"The port on which to listen for connections.\n","readOnly":false,"type":"unspecified"},"services.lshd.publicKeyAuthentication":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":true,"description":"Whether to enable public key authentication.","readOnly":false,"type":"unspecified"},"services.lshd.rootLogin":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":false,"description":"Whether to enable remote root login.","readOnly":false,"type":"unspecified"},"services.lshd.srpKeyExchange":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":false,"description":"Whether to enable SRP key exchange and user authentication.\n","readOnly":false,"type":"unspecified"},"services.lshd.subsystems":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"description":"List of subsystem-path pairs, where the head of the pair\ndenotes the subsystem name, and the tail denotes the path to\nan executable implementing it.\n","readOnly":false,"type":"unspecified"},"services.lshd.syslog":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":true,"description":"Whether to enable syslog output.","readOnly":false,"type":"unspecified"},"services.lshd.tcpForwarding":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":true,"description":"Whether to enable TCP/IP forwarding.","readOnly":false,"type":"unspecified"},"services.lshd.x11Forwarding":{"declarations":["nixos/modules/services/networking/ssh/lshd.nix"],"default":true,"description":"Whether to enable X11 forwarding.","readOnly":false,"type":"unspecified"},"services.mail.freepopsd.bind":{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"0.0.0.0","description":"Bind over an IPv4 address instead of any.\n","readOnly":false,"type":"string"},"services.mail.freepopsd.enable":{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":false,"description":"Enables Freepops, a POP3 webmail wrapper.\n","readOnly":false,"type":"boolean"},"services.mail.freepopsd.logFile":{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"/var/log/freepopsd","description":"Filename of the log file or syslog to rely on the logging daemon.\n","example":"syslog","readOnly":false,"type":"string"},"services.mail.freepopsd.port":{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":2000,"description":"Port on which the pop server will listen.\n","readOnly":false,"type":"integer"},"services.mail.freepopsd.suid.group":{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"nogroup","description":"Group under which freepopsd will be after binding the port.\n","readOnly":false,"type":"string"},"services.mail.freepopsd.suid.user":{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":"nobody","description":"User name under which freepopsd will be after binding the port.\n","readOnly":false,"type":"string"},"services.mail.freepopsd.threads":{"declarations":["nixos/modules/services/mail/freepops.nix"],"default":5,"description":"Max simultaneous connections.\n","readOnly":false,"type":"integer"},"services.mailpile.enable":{"declarations":["nixos/modules/services/networking/mailpile.nix"],"default":false,"description":"\n          Whether to enable Mailpile the mail client.\n        ","readOnly":false,"type":"unspecified"},"services.mailpile.hostname":{"declarations":["nixos/modules/services/networking/mailpile.nix"],"default":"localhost","description":"Listen to this hostname or ip.","readOnly":false,"type":"unspecified"},"services.mailpile.port":{"declarations":["nixos/modules/services/networking/mailpile.nix"],"default":"33411","description":"Listen on this port.","readOnly":false,"type":"unspecified"},"services.mantisbt.enable":{"declarations":["nixos/modules/services/misc/mantisbt.nix"],"default":false,"description":"Enable the mantisbt web service.\nThis switches on httpd with PHP and database.\n","readOnly":false,"type":"boolean"},"services.mantisbt.extraConfig":{"declarations":["nixos/modules/services/misc/mantisbt.nix"],"default":"","description":"The contents of config_inc.php, without leading &lt;?php.\nIf left empty, the admin directory will be accessible.\n","readOnly":false,"type":"string"},"services.mantisbt.urlPrefix":{"declarations":["nixos/modules/services/misc/mantisbt.nix"],"default":"/mantisbt","description":"The URL prefix under which the mantisbt service appears.","readOnly":false,"type":"string"},"services.marathon.enable":{"declarations":["nixos/modules/services/scheduling/marathon.nix"],"default":false,"description":"\tWhether to enable the marathon mesos framework.\n","readOnly":false,"type":"boolean"},"services.marathon.environment":{"declarations":["nixos/modules/services/scheduling/marathon.nix"],"default":{},"description":"\tEnvironment variables passed to Marathon.\n","example":{"JAVA_OPTS":"-Xmx512m","MESOSPHERE_HTTP_CREDENTIALS":"username:password"},"readOnly":false,"type":"attribute set"},"services.marathon.extraCmdLineOptions":{"declarations":["nixos/modules/services/scheduling/marathon.nix"],"default":[],"description":"\tExtra command line options to pass to Marathon.\n\tSee <link xlink:href=\"https://mesosphere.github.io/marathon/docs/command-line-flags.html\"/> for all possible flags.\n","example":["--https_port=8443","--zk_timeout=10000","--marathon_store_timeout=2000"],"readOnly":false,"type":"list of strings"},"services.marathon.httpPort":{"declarations":["nixos/modules/services/scheduling/marathon.nix"],"default":8080,"description":"\tMarathon listening port for HTTP connections.\n","readOnly":false,"type":"integer"},"services.marathon.master":{"declarations":["nixos/modules/services/scheduling/marathon.nix"],"default":"zk://localhost:2181/mesos","description":"\tMesos master address. See <link xlink:href=\"https://mesosphere.github.io/marathon/docs/\"/> for details.\n","example":"zk://1.2.3.4:2181,2.3.4.5:2181,3.4.5.6:2181/mesos","readOnly":false,"type":"string"},"services.marathon.user":{"declarations":["nixos/modules/services/scheduling/marathon.nix"],"default":"marathon","description":"\tThe user that the Marathon framework will be launched as. If the user doesn't exist it will be created.\n\tIf you want to run apps that require root access or you want to launch apps using arbitrary users, that\n\tis using the `--mesos_user` flag then you need to change this to `root`.\n","example":"root","readOnly":false,"type":"string"},"services.marathon.zookeeperHosts":{"declarations":["nixos/modules/services/scheduling/marathon.nix"],"default":["localhost:2181"],"description":"\tZooKeeper hosts' addresses.\n","example":["1.2.3.4:2181","2.3.4.5:2181","3.4.5.6:2181"],"readOnly":false,"type":"list of strings"},"services.mathics.enable":{"declarations":["nixos/modules/services/misc/mathics.nix"],"default":false,"description":"Whether to enable Mathics notebook service.","example":true,"readOnly":false,"type":"boolean"},"services.mathics.external":{"declarations":["nixos/modules/services/misc/mathics.nix"],"default":false,"description":"Listen on all interfaces, rather than just localhost?","readOnly":false,"type":"boolean"},"services.mathics.port":{"declarations":["nixos/modules/services/misc/mathics.nix"],"default":8000,"description":"TCP port to listen on.","readOnly":false,"type":"integer"},"services.matrix-synapse.allow_guest_access":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Allows users to register as guests without a password/email/etc, and\nparticipate in rooms hosted on this server which have been made\naccessible to anonymous users.\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.app_service_config_files":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":[],"description":"A list of application service config file to use\n","readOnly":false,"type":"list of paths"},"services.matrix-synapse.bcrypt_rounds":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"12","description":"Set the number of bcrypt rounds used to generate password hash.\nLarger numbers increase the work factor needed to generate the hash.\n","readOnly":false,"type":"string"},"services.matrix-synapse.bind_host":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":null,"description":"DEPRECATED: Use listeners instead.\nLocal interface to listen on.\nThe empty string will cause synapse to listen on all interfaces.\n","readOnly":false,"type":"null or string"},"services.matrix-synapse.bind_port":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":null,"description":"DEPRECATED: Use listeners instead.\nThe port to listen for HTTPS requests on.\nFor when matrix traffic is sent directly to synapse.\n","example":8448,"readOnly":false,"type":"null or integer"},"services.matrix-synapse.database_args":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":{"database":"/var/lib/matrix-synapse/homeserver.db"},"description":"Arguments to pass to the engine.\n","readOnly":false,"type":"attribute set"},"services.matrix-synapse.database_type":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"sqlite3","description":"The database engine name. Can be sqlite or psycopg2.\n","readOnly":false,"type":"one of \"sqlite3\", \"psycopg2\""},"services.matrix-synapse.dynamic_thumbnails":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Whether to generate new thumbnails on the fly to precisely match\nthe resolution requested by the client. If true then whenever\na new resolution is requested by the client the server will\ngenerate a new thumbnail. If false the server will pick a thumbnail\nfrom a precalculated list.\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.enable":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Whether to enable matrix.org synapse.","example":true,"readOnly":false,"type":"boolean"},"services.matrix-synapse.enable_metrics":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Enable collection and rendering of performance metrics\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.enable_registration":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Enable registration for new users.\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.enable_registration_captcha":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Enables ReCaptcha checks when registering, preventing signup\nunless a captcha is answered. Requires a valid ReCaptcha\npublic/private key.\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.event_cache_size":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"10K","description":"Number of events to cache in memory.","readOnly":false,"type":"string"},"services.matrix-synapse.expire_access_token":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Whether to enable access token expiration.\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.extraConfig":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"","description":"Extra config options for matrix-synapse.\n","readOnly":false,"type":"string"},"services.matrix-synapse.federation_rc_concurrent":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"3","description":"The number of federation requests to concurrently process from a single server","readOnly":false,"type":"string"},"services.matrix-synapse.federation_rc_reject_limit":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"50","description":"The maximum number of concurrent federation requests allowed\nfrom a single server\n","readOnly":false,"type":"string"},"services.matrix-synapse.federation_rc_sleep_delay":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"500","description":"The duration in milliseconds to delay processing events from\nremote servers by if they go over the sleep limit.\n","readOnly":false,"type":"string"},"services.matrix-synapse.federation_rc_sleep_limit":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"10","description":"The number of federation requests from a single server in a window\nbefore the server will delay processing the request.\n","readOnly":false,"type":"string"},"services.matrix-synapse.federation_rc_window_size":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"1000","description":"The federation window size in milliseconds","readOnly":false,"type":"string"},"services.matrix-synapse.key_refresh_interval":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"1d","description":"How long key response published by this server is valid for.\nUsed to set the valid_until_ts in /key/v2 APIs.\nDetermines how quickly servers will query to check which keys\nare still valid.\n","readOnly":false,"type":"string"},"services.matrix-synapse.listeners":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":[{"bind_address":"","port":8448,"resources":[{"compress":true,"names":["client","webclient"]},{"compress":false,"names":["federation"]}],"tls":true,"type":"http","x_forwarded":false}],"description":"List of ports that Synapse should listen on, their purpose and their configuration.\n","readOnly":false,"type":"list of submodules"},"services.matrix-synapse.listeners.*.bind_address":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"","description":"Local interface to listen on.\nThe empty string will cause synapse to listen on all interfaces.\n","example":"203.0.113.42","readOnly":false,"type":"string"},"services.matrix-synapse.listeners.*.port":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"description":"The port to listen for HTTP(S) requests on.\n","example":8448,"readOnly":false,"type":"integer"},"services.matrix-synapse.listeners.*.resources":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"description":"List of HTTP resources to serve on this listener.\n","readOnly":false,"type":"list of submodules"},"services.matrix-synapse.listeners.*.resources.*.compress":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"description":"Should synapse compress HTTP responses to clients that support it?\nThis should be disabled if running synapse behind a load balancer\nthat can do automatic compression.\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.listeners.*.resources.*.names":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"description":"List of resources to host on this listener.\n","example":["client","webclient","federation"],"readOnly":false,"type":"list of strings"},"services.matrix-synapse.listeners.*.tls":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":true,"description":"Whether to listen for HTTPS connections rather than HTTP.\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.listeners.*.type":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"http","description":"Type of listener.\n","readOnly":false,"type":"string"},"services.matrix-synapse.listeners.*.x_forwarded":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Use the X-Forwarded-For (XFF) header as the client IP and not the\nactual client IP.\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.logConfig":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"version: 1\n\n# In systemd's journal, loglevel is implicitly stored, so let's omit it\n# from the message text.\nformatters:\n    journal_fmt:\n        format: '%(name)s: [%(request)s] %(message)s'\n\nfilters:\n    context:\n        (): synapse.util.logcontext.LoggingContextFilter\n        request: \"\"\n\nhandlers:\n    journal:\n        class: systemd.journal.JournalHandler\n        formatter: journal_fmt\n        filters: [context]\n        SYSLOG_IDENTIFIER: synapse\n\nroot:\n    level: INFO\n    handlers: [journal]\n\ndisable_existing_loggers: False\n","description":"A yaml python logging config file\n","readOnly":false,"type":"string"},"services.matrix-synapse.macaroon_secret_key":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":null,"description":"Secret key for authentication tokens\n","readOnly":false,"type":"null or string"},"services.matrix-synapse.max_image_pixels":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"32M","description":"Maximum number of pixels that will be thumbnailed","readOnly":false,"type":"string"},"services.matrix-synapse.max_upload_size":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"10M","description":"The largest allowed upload size in bytes","readOnly":false,"type":"string"},"services.matrix-synapse.no_tls":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Don't bind to the https port\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.package":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"pkgs.matrix-synapse","description":"Overridable attribute of the matrix synapse server package to use.\n","readOnly":false,"type":"package"},"services.matrix-synapse.public_baseurl":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":null,"description":"The public-facing base URL for the client API (not including _matrix/...)\n","example":"https://example.com:8448/","readOnly":false,"type":"null or string"},"services.matrix-synapse.rc_message_burst_count":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"10.0","description":"Number of message a client can send before being throttled","readOnly":false,"type":"string"},"services.matrix-synapse.rc_messages_per_second":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"0.2","description":"Number of messages a client can send per second","readOnly":false,"type":"string"},"services.matrix-synapse.recaptcha_private_key":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"","description":"This Home Server's ReCAPTCHA private key.\n","readOnly":false,"type":"string"},"services.matrix-synapse.recaptcha_public_key":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"","description":"This Home Server's ReCAPTCHA public key.\n","readOnly":false,"type":"string"},"services.matrix-synapse.registration_shared_secret":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":null,"description":"If set, allows registration by anyone who also has the shared\nsecret, even if registration is otherwise disabled.\n","readOnly":false,"type":"null or string"},"services.matrix-synapse.report_stats":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"","readOnly":false,"type":"boolean"},"services.matrix-synapse.room_invite_state_types":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":["m.room.join_rules","m.room.canonical_alias","m.room.avatar","m.room.name"],"description":"A list of event types that will be included in the room_invite_state\n","readOnly":false,"type":"list of strings"},"services.matrix-synapse.server_name":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"description":"The domain name of the server, with optional explicit port.\nThis is used by remote servers to connect to this server,\ne.g. matrix.org, localhost:8080, etc.\nThis is also the last part of your UserID.\n","example":"example.com","readOnly":false,"type":"string"},"services.matrix-synapse.servers":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":{"matrix.org":{"ed25519:auto":"Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw"}},"description":"The trusted servers to download signing keys from.\n","readOnly":false,"type":"attribute set of attribute set of stringss"},"services.matrix-synapse.tls_certificate_path":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":null,"description":"PEM encoded X509 certificate for TLS.\nYou can replace the self-signed certificate that synapse\nautogenerates on launch with your own SSL certificate + key pair\nif you like.  Any required intermediary certificates can be\nappended after the primary certificate in hierarchical order.\n","example":"/var/lib/matrix-synapse/homeserver.tls.crt","readOnly":false,"type":"null or string"},"services.matrix-synapse.tls_dh_params_path":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":null,"description":"PEM dh parameters for ephemeral keys\n","example":"/var/lib/matrix-synapse/homeserver.tls.dh","readOnly":false,"type":"null or string"},"services.matrix-synapse.tls_private_key_path":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":null,"description":"PEM encoded private key for TLS. Specify null if synapse is not\nspeaking TLS directly.\n","example":"/var/lib/matrix-synapse/homeserver.tls.key","readOnly":false,"type":"null or string"},"services.matrix-synapse.trusted_third_party_id_servers":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":["matrix.org"],"description":"The list of identity servers trusted to verify third party identifiers by this server.\n","readOnly":false,"type":"list of strings"},"services.matrix-synapse.turn_shared_secret":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"","description":"The shared secret used to compute passwords for the TURN server\n","readOnly":false,"type":"string"},"services.matrix-synapse.turn_uris":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":[],"description":"The public URIs of the TURN server to give to clients\n","readOnly":false,"type":"list of strings"},"services.matrix-synapse.turn_user_lifetime":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"1h","description":"How long generated TURN credentials last","readOnly":false,"type":"string"},"services.matrix-synapse.unsecure_port":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":null,"description":"DEPRECATED: Use listeners instead.\nThe port to listen for HTTP requests on.\nFor when matrix traffic passes through loadbalancer that unwraps TLS.\n","example":8008,"readOnly":false,"type":"null or integer"},"services.matrix-synapse.url_preview_enabled":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Is the preview URL API enabled?  If enabled, you *must* specify an\nexplicit url_preview_ip_range_blacklist of IPs that the spider is\ndenied from accessing.\n","readOnly":false,"type":"boolean"},"services.matrix-synapse.url_preview_ip_range_blacklist":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":[],"description":"List of IP address CIDR ranges that the URL preview spider is denied\nfrom accessing.\n","readOnly":false,"type":"list of strings"},"services.matrix-synapse.url_preview_ip_range_whitelist":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":[],"description":"List of IP address CIDR ranges that the URL preview spider is allowed\nto access even if they are specified in\nurl_preview_ip_range_blacklist.\n","readOnly":false,"type":"list of strings"},"services.matrix-synapse.url_preview_url_blacklist":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":["127.0.0.0/8","10.0.0.0/8","172.16.0.0/12","192.168.0.0/16","100.64.0.0/10","169.254.0.0/16"],"description":"Optional list of URL matches that the URL preview spider is\ndenied from accessing.\n","readOnly":false,"type":"list of strings"},"services.matrix-synapse.user_creation_max_duration":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"1209600000","description":"Sets the expiry for the short term user creation in\nmilliseconds. The default value is two weeks.\n","readOnly":false,"type":"string"},"services.matrix-synapse.verbose":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":"0","description":"Logging verbosity level.","readOnly":false,"type":"string"},"services.matrix-synapse.web_client":{"declarations":["nixos/modules/services/misc/matrix-synapse.nix"],"default":false,"description":"Whether to serve a web client from the HTTP/HTTPS root resource.\n","readOnly":false,"type":"boolean"},"services.mattermost.enable":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":false,"description":"Whether to enable Mattermost chat platform.","example":true,"readOnly":false,"type":"boolean"},"services.mattermost.extraConfig":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":{},"description":"Addtional configuration options as Nix attribute set in config.json schema.\n","readOnly":false,"type":"attribute set"},"services.mattermost.group":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":"mattermost","description":"Group which runs the Mattermost service.\n","readOnly":false,"type":"string"},"services.mattermost.listenAddress":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":":8065","description":"Address and port this Mattermost instance listens to.\n","example":"[::1]:8065","readOnly":false,"type":"string"},"services.mattermost.localDatabaseCreate":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":true,"description":"Create a local PostgreSQL database for Mattermost automatically.\n","readOnly":false,"type":"boolean"},"services.mattermost.localDatabaseName":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":"mattermost","description":"Local Mattermost database name.\n","readOnly":false,"type":"string"},"services.mattermost.localDatabasePassword":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":"mmpgsecret","description":"Password for local Mattermost database user.\n","readOnly":false,"type":"string"},"services.mattermost.localDatabaseUser":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":"mattermost","description":"Local Mattermost database username.\n","readOnly":false,"type":"string"},"services.mattermost.matterircd.enable":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":false,"description":"Whether to enable Mattermost IRC bridge.","example":true,"readOnly":false,"type":"boolean"},"services.mattermost.matterircd.parameters":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":[],"description":"Set commandline parameters to pass to matterircd. See\nhttps://github.com/42wim/matterircd#usage for more information.\n","example":["-mmserver chat.example.com","-bind [::]:6667"],"readOnly":false,"type":"list of strings"},"services.mattermost.mutableConfig":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":false,"description":"Whether the Mattermost config.json is writeable by Mattermost.\n\nMost of the settings can be edited in the system console of\nMattermost if this option is enabled. A template config using\nthe options specified in services.mattermost will be generated\nbut won't be overwritten on changes or rebuilds.\n\nIf this option is disabled, changes in the system console won't\nbe possible (default). If an config.json is present, it will be\noverwritten!\n","readOnly":false,"type":"boolean"},"services.mattermost.siteName":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":"Mattermost","description":"Name of this Mattermost site.","readOnly":false,"type":"string"},"services.mattermost.siteUrl":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"description":"URL this Mattermost instance is reachable under, without trailing slash.\n","example":"https://chat.example.com","readOnly":false,"type":"string"},"services.mattermost.statePath":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":"/var/lib/mattermost","description":"Mattermost working directory","readOnly":false,"type":"string"},"services.mattermost.user":{"declarations":["nixos/modules/services/web-apps/mattermost.nix"],"default":"mattermost","description":"User which runs the Mattermost service.\n","readOnly":false,"type":"string"},"services.mbpfan.enable":{"declarations":["nixos/modules/services/misc/mbpfan.nix"],"default":false,"description":"Whether to enable the mbpfan daemon.\n","readOnly":false,"type":"boolean"},"services.mbpfan.highTemp":{"declarations":["nixos/modules/services/misc/mbpfan.nix"],"default":66,"description":"The high temperature.\n","readOnly":false,"type":"integer"},"services.mbpfan.lowTemp":{"declarations":["nixos/modules/services/misc/mbpfan.nix"],"default":63,"description":"The low temperature.\n","readOnly":false,"type":"integer"},"services.mbpfan.maxFanSpeed":{"declarations":["nixos/modules/services/misc/mbpfan.nix"],"default":6200,"description":"The maximum fan speed.\n","readOnly":false,"type":"integer"},"services.mbpfan.maxTemp":{"declarations":["nixos/modules/services/misc/mbpfan.nix"],"default":86,"description":"The maximum temperature.\n","readOnly":false,"type":"integer"},"services.mbpfan.minFanSpeed":{"declarations":["nixos/modules/services/misc/mbpfan.nix"],"default":2000,"description":"The minimum fan speed.\n","readOnly":false,"type":"integer"},"services.mbpfan.package":{"declarations":["nixos/modules/services/misc/mbpfan.nix"],"default":"pkgs.mbpfan","description":"The package used for the mbpfan daemon.\n","readOnly":false,"type":"package"},"services.mbpfan.pollingInterval":{"declarations":["nixos/modules/services/misc/mbpfan.nix"],"default":7,"description":"The polling interval.\n","readOnly":false,"type":"integer"},"services.mbpfan.verbose":{"declarations":["nixos/modules/services/misc/mbpfan.nix"],"default":false,"description":"If true, sets the log level to verbose.\n","readOnly":false,"type":"boolean"},"services.mediatomb.customCfg":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":false,"description":"Allow mediatomb to create and use its own config file inside /var/lib/mediatomb.\n","readOnly":false,"type":"boolean"},"services.mediatomb.dataDir":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":"/var/lib/mediatomb","description":"The directory where mediatomb stores its state, data, etc.\n","readOnly":false,"type":"path"},"services.mediatomb.dsmSupport":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":false,"description":"Whether to enable D-Link DSM 320 specific tweaks.\nWARNING: incompatible with ps3 support.\n","readOnly":false,"type":"boolean"},"services.mediatomb.enable":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":false,"description":"Whether to enable the mediatomb DLNA server.\n","readOnly":false,"type":"boolean"},"services.mediatomb.group":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":"mediatomb","description":"Group account under which mediatomb runs.","readOnly":false,"type":"unspecified"},"services.mediatomb.interface":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":"","description":"A specific interface to bind to.\n","readOnly":false,"type":"unspecified"},"services.mediatomb.port":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":49152,"description":"The network port to listen on.\n","readOnly":false,"type":"unspecified"},"services.mediatomb.ps3Support":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":false,"description":"Whether to enable ps3 specific tweaks.\nWARNING: incompatible with DSM 320 support.\n","readOnly":false,"type":"boolean"},"services.mediatomb.serverName":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":"mediatomb","description":"How to identify the server on the network.\n","readOnly":false,"type":"string"},"services.mediatomb.tg100Support":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":false,"description":"Whether to enable Telegent TG100 specific tweaks.\n","readOnly":false,"type":"boolean"},"services.mediatomb.transcoding":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":false,"description":"Whether to enable transcoding.\n","readOnly":false,"type":"boolean"},"services.mediatomb.user":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":"mediatomb","description":"User account under which mediatomb runs.","readOnly":false,"type":"unspecified"},"services.mediatomb.uuid":{"declarations":["nixos/modules/services/misc/mediatomb.nix"],"default":"fdfc8a4e-a3ad-4c1d-b43d-a2eedb03a687","description":"A unique (on your network) to identify the server by.\n","readOnly":false,"type":"unspecified"},"services.memcached.enable":{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":false,"description":"\n          Whether to enable Memcached.\n        ","readOnly":false,"type":"unspecified"},"services.memcached.extraOptions":{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":[],"description":"A list of extra options that will be added as a suffix when running memcached","readOnly":false,"type":"unspecified"},"services.memcached.listen":{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"127.0.0.1","description":"The IP address to bind to","readOnly":false,"type":"unspecified"},"services.memcached.maxConnections":{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":1024,"description":"The maximum number of simultaneous connections","readOnly":false,"type":"unspecified"},"services.memcached.maxMemory":{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":64,"description":"The maximum amount of memory to use for storage, in megabytes.","readOnly":false,"type":"unspecified"},"services.memcached.port":{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":11211,"description":"The port to bind to","readOnly":false,"type":"unspecified"},"services.memcached.socket":{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"","description":"Unix socket path to listen on. Setting this will disable network support","example":"/var/run/memcached","readOnly":false,"type":"unspecified"},"services.memcached.user":{"declarations":["nixos/modules/services/databases/memcached.nix"],"default":"memcached","description":"The user to run Memcached as","readOnly":false,"type":"unspecified"},"services.mesos.master.enable":{"declarations":["nixos/modules/services/misc/mesos-master.nix"],"default":false,"description":"Whether to enable the Mesos Master.","readOnly":false,"type":"boolean"},"services.mesos.master.extraCmdLineOptions":{"declarations":["nixos/modules/services/misc/mesos-master.nix"],"default":[""],"description":"Extra command line options for Mesos Master.\n\nSee https://mesos.apache.org/documentation/latest/configuration/\n","example":["--credentials=VALUE"],"readOnly":false,"type":"list of strings"},"services.mesos.master.logLevel":{"declarations":["nixos/modules/services/misc/mesos-master.nix"],"default":"INFO","description":"The logging level used. Possible values:\n  'INFO', 'WARNING', 'ERROR'\n","readOnly":false,"type":"string"},"services.mesos.master.port":{"declarations":["nixos/modules/services/misc/mesos-master.nix"],"default":5050,"description":"Mesos Master port","readOnly":false,"type":"integer"},"services.mesos.master.quorum":{"declarations":["nixos/modules/services/misc/mesos-master.nix"],"default":0,"description":"The size of the quorum of replicas when using 'replicated_log' based\nregistry. It is imperative to set this value to be a majority of\nmasters i.e., quorum > (number of masters)/2.\n\nIf 0 will fall back to --registry=in_memory.\n","readOnly":false,"type":"integer"},"services.mesos.master.workDir":{"declarations":["nixos/modules/services/misc/mesos-master.nix"],"default":"/var/lib/mesos/master","description":"The Mesos work directory.","readOnly":false,"type":"string"},"services.mesos.master.zk":{"declarations":["nixos/modules/services/misc/mesos-master.nix"],"description":"ZooKeeper URL (used for leader election amongst masters).\nMay be one of:\n  zk://host1:port1,host2:port2,.../mesos\n  zk://username:password@host1:port1,host2:port2,.../mesos\n","readOnly":false,"type":"string"},"services.mesos.slave.attributes":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"default":{},"description":"Machine attributes for the slave instance.\n\nUse caution when changing this; you may need to manually reset slave\nmetadata before the slave can re-register.\n","example":{"host":"aabc123","os":"nixos","rack":"aa"},"readOnly":false,"type":"attribute set of strings"},"services.mesos.slave.enable":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"default":false,"description":"Whether to enable the Mesos Slave.","readOnly":false,"type":"boolean"},"services.mesos.slave.extraCmdLineOptions":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"default":[""],"description":"Extra command line options for Mesos Slave.\n\nSee https://mesos.apache.org/documentation/latest/configuration/\n","example":["--gc_delay=3days"],"readOnly":false,"type":"list of strings"},"services.mesos.slave.ip":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"default":"0.0.0.0","description":"IP address to listen on.","readOnly":false,"type":"string"},"services.mesos.slave.logLevel":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"default":"INFO","description":"The logging level used. Possible values:\n  'INFO', 'WARNING', 'ERROR'\n","readOnly":false,"type":"string"},"services.mesos.slave.master":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"description":"May be one of:\n  zk://host1:port1,host2:port2,.../path\n  zk://username:password@host1:port1,host2:port2,.../path\n","readOnly":false,"type":"string"},"services.mesos.slave.port":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"default":5051,"description":"Port to listen on.","readOnly":false,"type":"integer"},"services.mesos.slave.withDocker":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"default":false,"description":"Enable the docker containerizer.","readOnly":false,"type":"boolean"},"services.mesos.slave.withHadoop":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"default":false,"description":"Add the HADOOP_HOME to the slave.","readOnly":false,"type":"boolean"},"services.mesos.slave.workDir":{"declarations":["nixos/modules/services/misc/mesos-slave.nix"],"default":"/var/lib/mesos/slave","description":"The Mesos work directory.","readOnly":false,"type":"string"},"services.mfi.dataDir":{"declarations":["nixos/modules/services/networking/mfi.nix"],"default":"/var/lib/mfi/data","description":"Where to store the database and other data.\n\nThis directory will be bind-mounted to /var/lib/mfi/data as part of the service startup.\n","readOnly":false,"type":"string"},"services.mfi.enable":{"declarations":["nixos/modules/services/networking/mfi.nix"],"default":false,"description":"Whether to enable Ubiquiti mFi Controller.","example":true,"readOnly":false,"type":"boolean"},"services.mfi.openPorts":{"declarations":["nixos/modules/services/networking/mfi.nix"],"default":true,"description":"Whether to open TCP ports 6080 6880 6443 6843 for the services.","readOnly":false,"type":"boolean"},"services.minecraft-server.dataDir":{"declarations":["nixos/modules/services/games/minecraft-server.nix"],"default":"/var/lib/minecraft","description":"Directory to store minecraft database and other state/data files.\n","readOnly":false,"type":"path"},"services.minecraft-server.enable":{"declarations":["nixos/modules/services/games/minecraft-server.nix"],"default":false,"description":"If enabled, start a Minecraft Server. The listening port for\nthe server is always <literal>25565</literal>. The server\ndata will be loaded from and saved to\n<literal>/var/lib/minecraft</literal>.\n","readOnly":false,"type":"boolean"},"services.minecraft-server.jvmOpts":{"declarations":["nixos/modules/services/games/minecraft-server.nix"],"default":"-Xmx2048M -Xms2048M","description":"JVM options for the Minecraft Service.","readOnly":false,"type":"string"},"services.minecraft-server.openFirewall":{"declarations":["nixos/modules/services/games/minecraft-server.nix"],"default":false,"description":"Whether to open ports in the firewall (if enabled) for the server.\n","readOnly":false,"type":"boolean"},"services.minetest-server.configPath":{"declarations":["nixos/modules/services/games/minetest-server.nix"],"default":null,"description":"Path to the config to use.\n\nIf set to null, the config of the running user will be used:\n`~/.minetest/minetest.conf`.\n","readOnly":false,"type":"null or path"},"services.minetest-server.enable":{"declarations":["nixos/modules/services/games/minetest-server.nix"],"default":false,"description":"If enabled, starts a Minetest Server.","readOnly":false,"type":"boolean"},"services.minetest-server.gameId":{"declarations":["nixos/modules/services/games/minetest-server.nix"],"default":null,"description":"Id of the game to use. To list available games run \n`minetestserver --gameid list`.\n\nIf only one game exists, this option can be null.\n","readOnly":false,"type":"null or string"},"services.minetest-server.logPath":{"declarations":["nixos/modules/services/games/minetest-server.nix"],"default":null,"description":"Path to logfile for logging. \n\nIf set to null, logging will be output to stdout which means\nall output will be catched by systemd.\n","readOnly":false,"type":"null or path"},"services.minetest-server.port":{"declarations":["nixos/modules/services/games/minetest-server.nix"],"default":null,"description":"Port number to bind to.\n\nIf set to null, the default 30000 will be used.\n","readOnly":false,"type":"null or integer"},"services.minetest-server.world":{"declarations":["nixos/modules/services/games/minetest-server.nix"],"default":null,"description":"Name of the world to use. To list available worlds run\n`minetestserver --world list`.\n\nIf only one world exists, this option can be null.\n","readOnly":false,"type":"null or path"},"services.mingetty.autologinUser":{"declarations":["nixos/modules/services/ttys/agetty.nix"],"default":null,"description":"Username of the account that will be automatically logged in at the console.\nIf unspecified, a login prompt is shown as usual.\n","readOnly":false,"type":"null or string"},"services.mingetty.greetingLine":{"declarations":["nixos/modules/services/ttys/agetty.nix"],"description":"Welcome line printed by mingetty.\nThe default shows current NixOS version label, machine type and tty.\n","readOnly":false,"type":"string"},"services.mingetty.helpLine":{"declarations":["nixos/modules/services/ttys/agetty.nix"],"default":"","description":"Help line printed by mingetty below the welcome line.\nUsed by the installation CD to give some hints on\nhow to proceed.\n","readOnly":false,"type":"string"},"services.mingetty.serialSpeed":{"declarations":["nixos/modules/services/ttys/agetty.nix"],"default":[115200,57600,38400,9600],"description":"Bitrates to allow for agetty's listening on serial ports. Listing more\nbitrates gives more interoperability but at the cost of long delays\nfor getting a sync on the line.\n","example":[38400,9600],"readOnly":false,"type":"list of integers"},"services.minidlna.config":{"declarations":["nixos/modules/services/networking/minidlna.nix"],"description":"The contents of MiniDLNA's configuration file.","readOnly":false,"type":"string"},"services.minidlna.enable":{"declarations":["nixos/modules/services/networking/minidlna.nix"],"default":false,"description":"Whether to enable MiniDLNA, a simple DLNA server.  It serves\nmedia files such as video and music to DLNA client devices\nsuch as televisions and media players.\n","readOnly":false,"type":"boolean"},"services.minidlna.mediaDirs":{"declarations":["nixos/modules/services/networking/minidlna.nix"],"default":[],"description":"Directories to be scanned for media files.  The prefixes\n<literal>A,</literal>, <literal>V,</literal> and\n<literal>P,</literal> restrict a directory to audio, video\nor image files.  The directories must be accessible to the\n<literal>minidlna</literal> user account.\n","example":["/data/media","V,/home/alice/video"],"readOnly":false,"type":"list of strings"},"services.miniupnpd.appendConfig":{"declarations":["nixos/modules/services/networking/miniupnpd.nix"],"default":"","description":"Configuration lines appended to the MiniUPnP config.\n","readOnly":false,"type":"string"},"services.miniupnpd.enable":{"declarations":["nixos/modules/services/networking/miniupnpd.nix"],"default":false,"description":"Whether to enable MiniUPnP daemon.","example":true,"readOnly":false,"type":"boolean"},"services.miniupnpd.externalInterface":{"declarations":["nixos/modules/services/networking/miniupnpd.nix"],"description":"Name of the external interface.\n","readOnly":false,"type":"string"},"services.miniupnpd.internalIPs":{"declarations":["nixos/modules/services/networking/miniupnpd.nix"],"description":"The IP address ranges to listen on.\n","example":["192.168.1.1/24","enp1s0"],"readOnly":false,"type":"list of strings"},"services.miniupnpd.natpmp":{"declarations":["nixos/modules/services/networking/miniupnpd.nix"],"default":false,"description":"Whether to enable NAT-PMP support.","example":true,"readOnly":false,"type":"boolean"},"services.miniupnpd.upnp":{"declarations":["nixos/modules/services/networking/miniupnpd.nix"],"default":true,"description":"Whether to enable UPNP support.\n","readOnly":false,"type":"boolean"},"services.mjpg-streamer.enable":{"declarations":["nixos/modules/services/networking/mjpg-streamer.nix"],"default":false,"description":"Whether to enable mjpg-streamer webcam streamer.","example":true,"readOnly":false,"type":"boolean"},"services.mjpg-streamer.group":{"declarations":["nixos/modules/services/networking/mjpg-streamer.nix"],"default":"video","description":"mjpg-streamer group name.","readOnly":false,"type":"string"},"services.mjpg-streamer.inputPlugin":{"declarations":["nixos/modules/services/networking/mjpg-streamer.nix"],"default":"input_uvc.so","description":"Input plugin. See plugins documentation for more information.\n","readOnly":false,"type":"string"},"services.mjpg-streamer.outputPlugin":{"declarations":["nixos/modules/services/networking/mjpg-streamer.nix"],"default":"output_http.so -w @www@ -n -p 5050","description":"Output plugin. <literal>@www@</literal> is substituted for default mjpg-streamer www directory.\nSee plugins documentation for more information.\n","readOnly":false,"type":"string"},"services.mjpg-streamer.user":{"declarations":["nixos/modules/services/networking/mjpg-streamer.nix"],"default":"mjpg-streamer","description":"mjpg-streamer user name.","readOnly":false,"type":"string"},"services.mlmmj.enable":{"declarations":["nixos/modules/services/mail/mlmmj.nix"],"default":false,"description":"Enable mlmmj","readOnly":false,"type":"boolean"},"services.mlmmj.group":{"declarations":["nixos/modules/services/mail/mlmmj.nix"],"default":"mlmmj","description":"mailinglist local group","readOnly":false,"type":"string"},"services.mlmmj.listDomain":{"declarations":["nixos/modules/services/mail/mlmmj.nix"],"default":"localhost","description":"Set the mailing list domain","readOnly":false,"type":"string"},"services.mlmmj.mailLists":{"declarations":["nixos/modules/services/mail/mlmmj.nix"],"default":[],"description":"The collection of hosted maillists","readOnly":false,"type":"list of strings"},"services.mlmmj.user":{"declarations":["nixos/modules/services/mail/mlmmj.nix"],"default":"mlmmj","description":"mailinglist local user","readOnly":false,"type":"string"},"services.mongodb.bind_ip":{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"127.0.0.1","description":"IP to bind to","readOnly":false,"type":"unspecified"},"services.mongodb.dbpath":{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"/var/db/mongodb","description":"Location where MongoDB stores its files","readOnly":false,"type":"unspecified"},"services.mongodb.enable":{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":false,"description":"\n          Whether to enable the MongoDB server.\n        ","readOnly":false,"type":"unspecified"},"services.mongodb.extraConfig":{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"MongoDB extra configuration in YAML format","example":"storage.journal.enabled: false\n","readOnly":false,"type":"unspecified"},"services.mongodb.package":{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"pkgs.mongodb","description":"\n          Which MongoDB derivation to use.\n        ","readOnly":false,"type":"package"},"services.mongodb.pidFile":{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"/var/run/mongodb.pid","description":"Location of MongoDB pid file","readOnly":false,"type":"unspecified"},"services.mongodb.quiet":{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":false,"description":"quieter output","readOnly":false,"type":"unspecified"},"services.mongodb.replSetName":{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"","description":"If this instance is part of a replica set, set its name here.\nOtherwise, leave empty to run as single node.\n","readOnly":false,"type":"unspecified"},"services.mongodb.user":{"declarations":["nixos/modules/services/databases/mongodb.nix"],"default":"mongodb","description":"User account under which MongoDB runs","readOnly":false,"type":"unspecified"},"services.monit.config":{"declarations":["nixos/modules/services/monitoring/monit.nix"],"default":"","description":"monit.conf content","readOnly":false,"type":"unspecified"},"services.monit.enable":{"declarations":["nixos/modules/services/monitoring/monit.nix"],"default":false,"description":"Whether to run Monit system watcher.\n","readOnly":false,"type":"unspecified"},"services.mopidy.configuration":{"declarations":["nixos/modules/services/audio/mopidy.nix"],"default":"","description":"The configuration that Mopidy should use.\n","readOnly":false,"type":"string"},"services.mopidy.dataDir":{"declarations":["nixos/modules/services/audio/mopidy.nix"],"default":"/var/lib/mopidy","description":"The directory where Mopidy stores its state.\n","readOnly":false,"type":"string"},"services.mopidy.enable":{"declarations":["nixos/modules/services/audio/mopidy.nix"],"default":false,"description":"Whether to enable Mopidy, a music player daemon.","example":true,"readOnly":false,"type":"boolean"},"services.mopidy.extensionPackages":{"declarations":["nixos/modules/services/audio/mopidy.nix"],"default":[],"description":"Mopidy extensions that should be loaded by the service.\n","example":{"_type":"literalExample","text":"[ pkgs.mopidy-spotify ]"},"readOnly":false,"type":"list of packages"},"services.mopidy.extraConfigFiles":{"declarations":["nixos/modules/services/audio/mopidy.nix"],"default":[],"description":"Extra config file read by Mopidy when the service starts.\nLater files in the list overrides earlier configuration.\n","readOnly":false,"type":"list of strings"},"services.mosquitto.aclExtraConf":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":"","description":"Extra config to prepend to the ACL file.\n","readOnly":false,"type":"string"},"services.mosquitto.allowAnonymous":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":false,"description":"Allow clients to connect without authentication.\n","example":true,"readOnly":false,"type":"boolean"},"services.mosquitto.dataDir":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":"/var/lib/mosquitto","description":"The data directory.\n","readOnly":false,"type":"path"},"services.mosquitto.enable":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":false,"description":"Whether to enable Enable the MQTT Mosquitto broker..","example":true,"readOnly":false,"type":"boolean"},"services.mosquitto.extraConf":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":"","description":"Extra config to append to `mosquitto.conf` file.\n","readOnly":false,"type":"string"},"services.mosquitto.host":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":"127.0.0.1","description":"Host to listen on without SSL.\n","example":"0.0.0.0","readOnly":false,"type":"string"},"services.mosquitto.port":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":1883,"description":"Port on which to listen without SSL.\n","example":1883,"readOnly":false,"type":"integer"},"services.mosquitto.ssl.cafile":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":null,"description":"Path to PEM encoded CA certificates.","readOnly":false,"type":"null or path"},"services.mosquitto.ssl.certfile":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":null,"description":"Path to PEM encoded server certificate.","readOnly":false,"type":"null or path"},"services.mosquitto.ssl.enable":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":false,"description":"Whether to enable Enable SSL listener..","example":true,"readOnly":false,"type":"boolean"},"services.mosquitto.ssl.host":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":"0.0.0.0","description":"Host to listen on with SSL.\n","example":"localhost","readOnly":false,"type":"string"},"services.mosquitto.ssl.keyfile":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":null,"description":"Path to PEM encoded server key.","readOnly":false,"type":"null or path"},"services.mosquitto.ssl.port":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":8883,"description":"Port on which to listen with SSL.\n","example":8883,"readOnly":false,"type":"integer"},"services.mosquitto.users":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"description":"A set of users and their passwords and ACLs.\n","example":{"john":{"acl":["topic readwrite john/#"],"password":"123456"}},"readOnly":false,"type":"attribute set of submodules"},"services.mosquitto.users.<name>.acl":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"description":"Control client access to topics on the broker.\n","example":["topic read A/B","topic A/#"],"readOnly":false,"type":"list of strings"},"services.mosquitto.users.<name>.hashedPassword":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":null,"description":"Specifies the hashed password for the MQTT User.\n<option>hashedPassword</option> overrides <option>password</option>.\nTo generate hashed password install <literal>mkpasswd</literal>\npackage and run <literal>mkpasswd -m sha-512</literal>.\n","readOnly":false,"type":"null or string"},"services.mosquitto.users.<name>.password":{"declarations":["nixos/modules/services/networking/mosquitto.nix"],"default":null,"description":"Specifies the (clear text) password for the MQTT User.\n","readOnly":false,"type":"null or string"},"services.mpd.dataDir":{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"/var/lib/mpd","description":"The directory where MPD stores its state, tag cache,\nplaylists etc.\n","readOnly":false,"type":"path"},"services.mpd.dbFile":{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"/var/lib/mpd/tag_cache","description":"The path to MPD's database.\n","readOnly":false,"type":"string"},"services.mpd.enable":{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":false,"description":"Whether to enable MPD, the music player daemon.\n","readOnly":false,"type":"boolean"},"services.mpd.extraConfig":{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"","description":"Extra directives added to to the end of MPD's configuration file,\nmpd.conf. Basic configuration like file location and uid/gid\nis added automatically to the beginning of the file.\n","readOnly":false,"type":"string"},"services.mpd.group":{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"mpd","description":"Group account under which MPD runs.","readOnly":false,"type":"string"},"services.mpd.musicDirectory":{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"/var/lib/mpd/music","description":"The directory where mpd reads music from.\n","readOnly":false,"type":"path"},"services.mpd.network.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.mpd.network.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.mpd.network.listenAddress":{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"any","description":"This setting sets the address for the daemon to listen on. Careful attention\nshould be paid if this is assigned to anything other then the default, any.\nThis setting can deny access to control of the daemon.\n","readOnly":false,"type":"string"},"services.mpd.network.port":{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":6600,"description":"This setting is the TCP port that is desired for the daemon to get assigned\nto.\n","readOnly":false,"type":"integer"},"services.mpd.user":{"declarations":["nixos/modules/services/audio/mpd.nix"],"default":"mpd","description":"User account under which MPD runs.","readOnly":false,"type":"string"},"services.mstpd.enable":{"declarations":["nixos/modules/services/networking/mstpd.nix"],"default":false,"description":"Whether to enable the multiple spanning tree protocol daemon.\n","readOnly":false,"type":"boolean"},"services.munge.enable":{"declarations":["nixos/modules/services/security/munge.nix"],"default":false,"description":"Whether to enable munge service.","example":true,"readOnly":false,"type":"boolean"},"services.munge.password":{"declarations":["nixos/modules/services/security/munge.nix"],"default":"/etc/munge/munge.key","description":"The path to a daemon's secret key.\n","readOnly":false,"type":"string"},"services.munin-cron.enable":{"declarations":["nixos/modules/services/monitoring/munin.nix"],"default":false,"description":"Enable munin-cron. Takes care of all heavy lifting to collect data from\nnodes and draws graphs to html. Runs munin-update, munin-limits,\nmunin-graphs and munin-html in that order.\n\nHTML output is in <filename>/var/www/munin/</filename>, configure your\nfavourite webserver to serve static files.\n","readOnly":false,"type":"unspecified"},"services.munin-cron.extraGlobalConfig":{"declarations":["nixos/modules/services/monitoring/munin.nix"],"default":"","description":"<filename>munin.conf</filename> extra global configuration.\nSee <link xlink:href='http://munin-monitoring.org/wiki/munin.conf' />.\nUseful to setup notifications, see\n<link xlink:href='http://munin-monitoring.org/wiki/HowToContact' />\n","example":"contact.email.command mail -s \"Munin notification for ${var:host}\" someone@example.com\n","readOnly":false,"type":"unspecified"},"services.munin-cron.hosts":{"declarations":["nixos/modules/services/monitoring/munin.nix"],"description":"Definitions of hosts of nodes to collect data from. Needs at least one\nhosts for cron to succeed. See\n<link xlink:href='http://munin-monitoring.org/wiki/munin.conf' />\n","example":"[${config.networking.hostName}]\naddress localhost\n","readOnly":false,"type":"unspecified"},"services.munin-node.enable":{"declarations":["nixos/modules/services/monitoring/munin.nix"],"default":false,"description":"Enable Munin Node agent. Munin node listens on 0.0.0.0 and\nby default accepts connections only from 127.0.0.1 for security reasons.\n\nSee <link xlink:href='http://munin-monitoring.org/wiki/munin-node.conf' />.\n","readOnly":false,"type":"unspecified"},"services.munin-node.extraConfig":{"declarations":["nixos/modules/services/monitoring/munin.nix"],"default":"","description":"<filename>munin-node.conf</filename> extra configuration. See\n<link xlink:href='http://munin-monitoring.org/wiki/munin-node.conf' />\n","readOnly":false,"type":"string"},"services.murmur.allowHtml":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":true,"description":"Allow HTML in client messages, comments, and channel\ndescriptions.\n","readOnly":false,"type":"boolean"},"services.murmur.autobanAttempts":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":10,"description":"Number of attempts a client is allowed to make in\n<literal>autobanTimeframe</literal> seconds, before being\nbanned for <literal>autobanTime</literal>.\n","readOnly":false,"type":"integer"},"services.murmur.autobanTime":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":300,"description":"The amount of time an IP ban lasts (in seconds).","readOnly":false,"type":"integer"},"services.murmur.autobanTimeframe":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":120,"description":"Timeframe in which a client can connect without being banned\nfor repeated attempts (in seconds).\n","readOnly":false,"type":"integer"},"services.murmur.bandwidth":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":72000,"description":"Maximum bandwidth (in bits per second) that clients may send\nspeech at.\n","readOnly":false,"type":"integer"},"services.murmur.bonjour":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":false,"description":"Enable Bonjour auto-discovery, which allows clients over\nyour LAN to automatically discover Murmur servers.\n","readOnly":false,"type":"boolean"},"services.murmur.clientCertRequired":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":false,"description":"Require clients to authenticate via certificates.","readOnly":false,"type":"boolean"},"services.murmur.enable":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":false,"description":"If enabled, start the Murmur Service.","readOnly":false,"type":"boolean"},"services.murmur.extraConfig":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Extra configuration to put into mumur.ini.","readOnly":false,"type":"string"},"services.murmur.hostName":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Host to bind to. Defaults binding on all addresses.","readOnly":false,"type":"string"},"services.murmur.imgMsgLength":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":131072,"description":"Max length of image messages. Set 0 for no limit.","readOnly":false,"type":"integer"},"services.murmur.logDays":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":31,"description":"How long to store RPC logs for in the database. Set 0 to\nkeep logs forever, or -1 to disable DB logging.\n","readOnly":false,"type":"integer"},"services.murmur.password":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Required password to join server, if specified.","readOnly":false,"type":"string"},"services.murmur.pidfile":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"/tmp/murmurd.pid","description":"Path to PID file for Murmur daemon.","readOnly":false,"type":"path"},"services.murmur.port":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":64738,"description":"Ports to bind to (UDP and TCP).","readOnly":false,"type":"integer"},"services.murmur.registerHostname":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"DNS hostname where your server can be reached. This is only\nneeded if you want your server to be accessed by its\nhostname and not IP - but the name *must* resolve on the\ninternet properly.\n","readOnly":false,"type":"string"},"services.murmur.registerName":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Public server registration name, and also the name of the\nRoot channel. Even if you don't publicly register your\nserver, you probably still want to set this.\n","readOnly":false,"type":"string"},"services.murmur.registerPassword":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Public server registry password, used authenticate your\nserver to the registry to prevent impersonation; required for\nsubsequent registry updates.\n","readOnly":false,"type":"string"},"services.murmur.registerUrl":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"URL website for your server.","readOnly":false,"type":"string"},"services.murmur.sendVersion":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":true,"description":"Send Murmur version in UDP response.","readOnly":false,"type":"boolean"},"services.murmur.sslCa":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Path to your SSL CA certificate.","readOnly":false,"type":"string"},"services.murmur.sslCert":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Path to your SSL certificate.","readOnly":false,"type":"string"},"services.murmur.sslKey":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Path to your SSL key.","readOnly":false,"type":"string"},"services.murmur.textMsgLength":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":5000,"description":"Max length of text messages. Set 0 for no limit.","readOnly":false,"type":"integer"},"services.murmur.users":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":100,"description":"Maximum number of concurrent clients allowed.","readOnly":false,"type":"integer"},"services.murmur.welcome":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.murmur.welcometext</option>.","readOnly":false,"type":"unspecified"},"services.murmur.welcometext":{"declarations":["nixos/modules/services/networking/murmur.nix"],"default":"","description":"Welcome message for connected clients.","readOnly":false,"type":"string"},"services.mwlib.nserve.address":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":"127.0.0.1","description":"Specify network interface to listen on.","readOnly":false,"type":"string"},"services.mwlib.nserve.enable":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":false,"description":"Whether to enable nserve. Nserve is a HTTP\nserver.  The Collection extension is talking to\nthat program directly.  Nserve uses at least\none qserve instance in order to distribute\nand manage jobs.\n","readOnly":false,"type":"boolean"},"services.mwlib.nserve.port":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":8899,"description":"Specify port to listen on.","readOnly":false,"type":"integer"},"services.mwlib.nserve.qserve":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":["127.0.0.1:14311"],"description":"Register qserve instance.","readOnly":false,"type":"list of strings"},"services.mwlib.nserve.user":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":"nobody","description":"User to run as.","readOnly":false,"type":"string"},"services.mwlib.nslave.cachedir":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":"/var/cache/mwlib-nslave","description":"Directory to store generated documents.","readOnly":false,"type":"path"},"services.mwlib.nslave.enable":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":false,"description":"Pulls new jobs from exactly one qserve instance\nand calls the zip and render programs\nin order to download article collections and\nconvert them to different output formats. Nslave\nuses a cache directory to store the generated\ndocuments. Nslave also starts an internal http\nserver serving the content of the cache directory.\n","readOnly":false,"type":"boolean"},"services.mwlib.nslave.http":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":{},"description":"Internal http server serving the content of the cache directory.\nYou have to enable it, or use your own way for serving files\nand set the http.url option accordingly.\n","readOnly":false,"type":"submodule"},"services.mwlib.nslave.http.address":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":"127.0.0.1","description":"Specify network interface to listen on.","readOnly":false,"type":"string"},"services.mwlib.nslave.http.enable":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":true,"description":"Enable internal http server.","readOnly":false,"type":"boolean"},"services.mwlib.nslave.http.port":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":8898,"description":"Port to listen to when serving files from cache.","readOnly":false,"type":"integer"},"services.mwlib.nslave.http.url":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":"http://localhost:8898/cache","description":"Specify URL for accessing generated files from cache.\nThe Collection extension of Mediawiki won't be able to\ndownload files without it.\n","readOnly":false,"type":"string"},"services.mwlib.nslave.numprocs":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":10,"description":"Number of parallel jobs to be executed.","readOnly":false,"type":"integer"},"services.mwlib.nslave.user":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":"nobody","description":"User to run as.","readOnly":false,"type":"string"},"services.mwlib.qserve.address":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":"127.0.0.1","description":"Specify network interface to listen on.","readOnly":false,"type":"string"},"services.mwlib.qserve.allow":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":["127.0.0.1"],"description":"List of allowed client IPs. Empty means any.","readOnly":false,"type":"list of strings"},"services.mwlib.qserve.datadir":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":"/var/lib/mwlib-qserve","description":"qserve data directory (FIXME: unused?)","readOnly":false,"type":"path"},"services.mwlib.qserve.enable":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":false,"description":"A job queue server used to distribute and manage\njobs. You should start one qserve instance\nfor each machine that is supposed to render pdf\nfiles. Unless you’re operating the Wikipedia\ninstallation, one machine should suffice.\n","readOnly":false,"type":"boolean"},"services.mwlib.qserve.port":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":14311,"description":"Specify port to listen on.","readOnly":false,"type":"integer"},"services.mwlib.qserve.user":{"declarations":["nixos/modules/services/misc/mwlib.nix"],"default":"nobody","description":"User to run as.","readOnly":false,"type":"string"},"services.mysql.dataDir":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"/var/mysql","description":"Location where MySQL stores its table files","readOnly":false,"type":"path"},"services.mysql.enable":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":false,"description":"\n          Whether to enable the MySQL server.\n        ","readOnly":false,"type":"boolean"},"services.mysql.extraOptions":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"","description":"Provide extra options to the MySQL configuration file.\n\nPlease note, that these options are added to the\n<literal>[mysqld]</literal> section so you don't need to explicitly\nstate it again.\n","example":"key_buffer_size = 6G\ntable_cache = 1600\nlog-error = /var/log/mysql_err.log\n","readOnly":false,"type":"string"},"services.mysql.initialDatabases":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":[],"description":"List of database names and their initial schemas that should be used to create databases on the first startup of MySQL","example":[{"name":"foodatabase","schema":{"_type":"literalExample","text":"./foodatabase.sql"}},{"name":"bardatabase","schema":{"_type":"literalExample","text":"./bardatabase.sql"}}],"readOnly":false,"type":"unspecified"},"services.mysql.initialScript":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":null,"description":"A file containing SQL statements to be executed on the first startup. Can be used for granting certain permissions on the database","readOnly":false,"type":"unspecified"},"services.mysql.package":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"pkgs.mysql","description":"\n          Which MySQL derivation to use.\n        ","example":{"_type":"literalExample","text":"pkgs.mysql55"},"readOnly":false,"type":"package"},"services.mysql.pidDir":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"/run/mysqld","description":"Location of the file which stores the PID of the MySQL server","readOnly":false,"type":"unspecified"},"services.mysql.port":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":3306,"description":"Port of MySQL","readOnly":false,"type":"integer"},"services.mysql.replication.masterHost":{"declarations":["nixos/modules/services/databases/mysql.nix"],"description":"Hostname of the MySQL master server","readOnly":false,"type":"string"},"services.mysql.replication.masterPassword":{"declarations":["nixos/modules/services/databases/mysql.nix"],"description":"Password of the MySQL replication user","readOnly":false,"type":"string"},"services.mysql.replication.masterPort":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":3306,"description":"Port number on which the MySQL master server runs","readOnly":false,"type":"integer"},"services.mysql.replication.masterUser":{"declarations":["nixos/modules/services/databases/mysql.nix"],"description":"Username of the MySQL replication user","readOnly":false,"type":"string"},"services.mysql.replication.role":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"none","description":"Role of the MySQL server instance.","readOnly":false,"type":"one of \"master\", \"slave\", \"none\""},"services.mysql.replication.serverId":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":1,"description":"Id of the MySQL server instance. This number must be unique for each instance","readOnly":false,"type":"integer"},"services.mysql.replication.slaveHost":{"declarations":["nixos/modules/services/databases/mysql.nix"],"description":"Hostname of the MySQL slave server","readOnly":false,"type":"string"},"services.mysql.rootPassword":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":null,"description":"Path to a file containing the root password, modified on the first startup. Not specifying a root password will leave the root password empty.","readOnly":false,"type":"unspecified"},"services.mysql.user":{"declarations":["nixos/modules/services/databases/mysql.nix"],"default":"mysql","description":"User account under which MySQL runs","readOnly":false,"type":"string"},"services.mysql55":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.mysql</option>.","readOnly":false,"type":"unspecified"},"services.mysqlBackup.databases":{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":[],"description":"List of database names to dump.\n","readOnly":false,"type":"unspecified"},"services.mysqlBackup.enable":{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":false,"description":"Whether to enable MySQL backups.\n","readOnly":false,"type":"unspecified"},"services.mysqlBackup.location":{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":"/var/backup/mysql","description":"Location to put the gzipped MySQL database dumps.\n","readOnly":false,"type":"unspecified"},"services.mysqlBackup.period":{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":"15 01 * * *","description":"This option defines (in the format used by cron) when the\ndatabases should be dumped.\nThe default is to update at 01:15 (at night) every day.\n","readOnly":false,"type":"unspecified"},"services.mysqlBackup.singleTransaction":{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":false,"description":"Whether to create database dump in a single transaction\n","readOnly":false,"type":"unspecified"},"services.mysqlBackup.user":{"declarations":["nixos/modules/services/backup/mysql-backup.nix"],"default":"mysql","description":"User to be used to perform backup.\n","readOnly":false,"type":"unspecified"},"services.nagios.cgiConfigFile":{"declarations":["nixos/modules/services/monitoring/nagios.nix"],"default":"nagiosCGICfgFile","description":"\n          Derivation for the configuration file of Nagios CGI scripts\n          that can be used in web servers for running the Nagios web interface.\n        ","readOnly":false,"type":"package"},"services.nagios.enable":{"declarations":["nixos/modules/services/monitoring/nagios.nix"],"default":false,"description":"\n          Whether to use <link\n          xlink:href='http://www.nagios.org/'>Nagios</link> to monitor\n          your system or network.\n        ","readOnly":false,"type":"unspecified"},"services.nagios.enableWebInterface":{"declarations":["nixos/modules/services/monitoring/nagios.nix"],"default":false,"description":"\n          Whether to enable the Nagios web interface.  You should also\n          enable Apache (<option>services.httpd.enable</option>).\n        ","readOnly":false,"type":"unspecified"},"services.nagios.mainConfigFile":{"declarations":["nixos/modules/services/monitoring/nagios.nix"],"default":"nagiosCfgFile","description":"\n          Derivation for the main configuration file of Nagios.\n        ","readOnly":false,"type":"package"},"services.nagios.objectDefs":{"declarations":["nixos/modules/services/monitoring/nagios.nix"],"description":"\n          A list of Nagios object configuration files that must define\n          the hosts, host groups, services and contacts for the\n          network that you want Nagios to monitor.\n        ","readOnly":false,"type":"unspecified"},"services.nagios.plugins":{"declarations":["nixos/modules/services/monitoring/nagios.nix"],"default":"[pkgs.nagiosPluginsOfficial pkgs.ssmtp]","description":"\n          Packages to be added to the Nagios <envar>PATH</envar>.\n          Typically used to add plugins, but can be anything.\n        ","readOnly":false,"type":"list of packages"},"services.nagios.urlPath":{"declarations":["nixos/modules/services/monitoring/nagios.nix"],"default":"/nagios","description":"\n          The URL path under which the Nagios web interface appears.\n          That is, you can access the Nagios web interface through\n          <literal>http://<replaceable>server</replaceable>/<replaceable>urlPath</replaceable></literal>.\n        ","readOnly":false,"type":"unspecified"},"services.namecoind.enable":{"declarations":["nixos/modules/services/networking/namecoind.nix"],"default":false,"description":"Whether to run namecoind.\n","readOnly":false,"type":"boolean"},"services.namecoind.generate":{"declarations":["nixos/modules/services/networking/namecoind.nix"],"default":false,"description":"Whether to generate (mine) Namecoins.\n","readOnly":false,"type":"boolean"},"services.namecoind.rpcCertificate":{"declarations":["nixos/modules/services/networking/namecoind.nix"],"default":null,"description":"Certificate file for securing RPC connections.\n","example":"/etc/namecoin/server.cert","readOnly":false,"type":"null or path"},"services.namecoind.rpcKey":{"declarations":["nixos/modules/services/networking/namecoind.nix"],"default":null,"description":"Key file for securing RPC connections.\n","example":"/etc/namecoin/server.pem","readOnly":false,"type":"null or path"},"services.namecoind.userFile":{"declarations":["nixos/modules/services/networking/namecoind.nix"],"default":null,"description":"File containing the user name and user password to\nauthenticate RPC connections to namecoind.\nThe content of the file is of the form:\n<literal>\nUSER=namecoin\nPASSWORD=secret\n</literal>\nThe ownership of the file has to be namecoin:namecoin,\nand the permissions must be 0640.\n","example":"/etc/namecoin/user","readOnly":false,"type":"null or path"},"services.namecoind.wallet":{"declarations":["nixos/modules/services/networking/namecoind.nix"],"description":"Wallet file. The ownership of the file has to be\nnamecoin:namecoin, and the permissions must be 0640.\n","example":"/etc/namecoin/wallet.dat","readOnly":false,"type":"path"},"services.neo4j.boltPort":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":7687,"description":"Neo4j port to listen for BOLT traffic.","readOnly":false,"type":"integer"},"services.neo4j.certDir":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":"/var/lib/neo4j/certificates","description":"Neo4j TLS certificates directory.","readOnly":false,"type":"path"},"services.neo4j.dataDir":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":"/var/lib/neo4j","description":"Neo4j data directory.","readOnly":false,"type":"path"},"services.neo4j.enable":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":false,"description":"Whether to enable neo4j.","readOnly":false,"type":"boolean"},"services.neo4j.enableBolt":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":true,"description":"Enable bolt for Neo4j.","readOnly":false,"type":"boolean"},"services.neo4j.enableHttps":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":false,"description":"Enable https for Neo4j.","readOnly":false,"type":"boolean"},"services.neo4j.extraServerConfig":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":"","description":"Extra configuration for neo4j server.","readOnly":false,"type":"string"},"services.neo4j.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.neo4j.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.neo4j.httpsPort":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":7473,"description":"Neo4j port to listen for HTTPS traffic.","readOnly":false,"type":"integer"},"services.neo4j.listenAddress":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":"127.0.0.1","description":"Neo4j listen address.","readOnly":false,"type":"string"},"services.neo4j.package":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":"pkgs.neo4j","description":"Neo4j package to use.","readOnly":false,"type":"package"},"services.neo4j.port":{"declarations":["nixos/modules/services/databases/neo4j.nix"],"default":7474,"description":"Neo4j port to listen for HTTP traffic.","readOnly":false,"type":"integer"},"services.netatalk.enable":{"declarations":["nixos/modules/services/network-filesystems/netatalk.nix"],"default":false,"description":"Whether to enable the Netatalk AFP fileserver.","readOnly":false,"type":"unspecified"},"services.netatalk.extmap":{"declarations":["nixos/modules/services/network-filesystems/netatalk.nix"],"default":"","description":"\t  File name extension mappings.\n\t  See <literal>man extmap.conf</literal> for more information.\n","readOnly":false,"type":"string"},"services.netatalk.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/netatalk.nix"],"default":"","description":"Lines of configuration to add to the <literal>[Global]</literal> section.\nSee <literal>man apf.conf</literal> for more information.\n","example":"uam list = uams_guest.so","readOnly":false,"type":"string"},"services.netatalk.homes.basedirRegex":{"declarations":["nixos/modules/services/network-filesystems/netatalk.nix"],"description":"Regex which matches the parent directory of the user homes.","example":"/home","readOnly":false,"type":"unspecified"},"services.netatalk.homes.enable":{"declarations":["nixos/modules/services/network-filesystems/netatalk.nix"],"default":false,"description":"Enable sharing of the UNIX server user home directories.","readOnly":false,"type":"unspecified"},"services.netatalk.homes.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/netatalk.nix"],"default":"","description":"Lines of configuration to add to the <literal>[Homes]</literal> section.\nSee <literal>man apf.conf</literal> for more information.\n","readOnly":false,"type":"string"},"services.netatalk.homes.path":{"declarations":["nixos/modules/services/network-filesystems/netatalk.nix"],"default":"","description":"Share not the whole user home but this subdirectory path.","example":"afp-data","readOnly":false,"type":"unspecified"},"services.netatalk.port":{"declarations":["nixos/modules/services/network-filesystems/netatalk.nix"],"default":548,"description":"TCP port to be used for AFP.","readOnly":false,"type":"unspecified"},"services.netatalk.volumes":{"declarations":["nixos/modules/services/network-filesystems/netatalk.nix"],"default":{},"description":"Set of AFP volumes to export.\nSee <literal>man apf.conf</literal> for more information.\n","example":{"srv":{"hosts allow":"10.1.0.0/16 10.2.1.100 2001:0db8:1234::/48","path":"/srv","read only":true}},"readOnly":false,"type":"attribute set of attribute set of unspecifiedss"},"services.networking.websockify.enable":{"declarations":["nixos/modules/services/networking/websockify.nix"],"default":false,"description":"Whether to enable websockify to forward websocket connections to TCP connections.","readOnly":false,"type":"boolean"},"services.networking.websockify.portMap":{"declarations":["nixos/modules/services/networking/websockify.nix"],"default":{},"description":"Ports to map by default.","readOnly":false,"type":"attribute set of integers"},"services.networking.websockify.sslCert":{"declarations":["nixos/modules/services/networking/websockify.nix"],"description":"Path to the SSL certificate.","readOnly":false,"type":"path"},"services.networking.websockify.sslKey":{"declarations":["nixos/modules/services/networking/websockify.nix"],"default":"config.services.networking.websockify.sslCert","description":"Path to the SSL key.","readOnly":false,"type":"path"},"services.nfs.lockdPort":{"declarations":["nixos/modules/tasks/filesystems/nfs.nix"],"default":null,"description":"Use a fixed port for the NFS lock manager kernel module\n(<literal>lockd/nlockmgr</literal>).  This is useful if the\nNFS server is behind a firewall.\n","example":4001,"readOnly":false,"type":"unspecified"},"services.nfs.server.createMountPoints":{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":false,"description":"Whether to create the mount points in the exports file at startup time.","readOnly":false,"type":"unspecified"},"services.nfs.server.enable":{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":false,"description":"Whether to enable the kernel's NFS server.\n","readOnly":false,"type":"unspecified"},"services.nfs.server.exports":{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":"","description":"Contents of the /etc/exports file.  See\n<citerefentry><refentrytitle>exports</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for the format.\n","readOnly":false,"type":"unspecified"},"services.nfs.server.hostName":{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":null,"description":"Hostname or address on which NFS requests will be accepted.\nDefault is all.  See the <option>-H</option> option in\n<citerefentry><refentrytitle>nfsd</refentrytitle>\n<manvolnum>8</manvolnum></citerefentry>.\n","readOnly":false,"type":"unspecified"},"services.nfs.server.lockdPort":{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":0,"description":"Fix the lockd port number. This can help setting firewall rules for NFS.\n","readOnly":false,"type":"unspecified"},"services.nfs.server.mountdPort":{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":null,"description":"Use fixed port for rpc.mountd, useful if server is behind firewall.\n","example":4002,"readOnly":false,"type":"unspecified"},"services.nfs.server.nproc":{"declarations":["nixos/modules/services/network-filesystems/nfsd.nix"],"default":8,"description":"Number of NFS server threads.  Defaults to the recommended value of 8.\n","readOnly":false,"type":"unspecified"},"services.nfs.statdPort":{"declarations":["nixos/modules/tasks/filesystems/nfs.nix"],"default":null,"description":"Use a fixed port for <command>rpc.statd</command>. This is\nuseful if the NFS server is behind a firewall.\n","example":4000,"readOnly":false,"type":"unspecified"},"services.nginx.appendConfig":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"Configuration lines appended to the generated Nginx\nconfiguration file. Commonly used by different modules\nproviding http snippets. <option>appendConfig</option>\ncan be specified more than once and it's value will be\nconcatenated (contrary to <option>config</option> which\ncan be set only once).\n","readOnly":false,"type":"string"},"services.nginx.appendHttpConfig":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"\n          Configuration lines to be appended to the generated http block.\n          This is mutually exclusive with using config and httpConfig for\n          specifying the whole http block verbatim.\n        ","readOnly":false,"type":"string"},"services.nginx.clientMaxBodySize":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"10m","description":"Set nginx global client_max_body_size.","readOnly":false,"type":"string"},"services.nginx.config":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"\n          Verbatim nginx.conf configuration.\n          This is mutually exclusive with the structured configuration\n          via virtualHosts and the recommendedXyzSettings configuration\n          options. See appendConfig for appending to the generated http block.\n        ","readOnly":false,"type":"unspecified"},"services.nginx.enable":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"Whether to enable Nginx Web Server.","example":true,"readOnly":false,"type":"boolean"},"services.nginx.eventsConfig":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"Configuration lines to be set inside the events block.\n","readOnly":false,"type":"string"},"services.nginx.group":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"nginx","description":"Group account under which nginx runs.","readOnly":false,"type":"string"},"services.nginx.httpConfig":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"\n          Configuration lines to be set inside the http block.\n          This is mutually exclusive with the structured configuration\n          via virtualHosts and the recommendedXyzSettings configuration\n          options. See appendHttpConfig for appending to the generated http block.\n        ","readOnly":false,"type":"string"},"services.nginx.package":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"pkgs.nginx","description":"\n          Nginx package to use.\n        ","readOnly":false,"type":"package"},"services.nginx.recommendedGzipSettings":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"\n          Enable recommended gzip settings.\n        ","readOnly":false,"type":"boolean"},"services.nginx.recommendedOptimisation":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"\n          Enable recommended optimisation settings.\n        ","readOnly":false,"type":"boolean"},"services.nginx.recommendedProxySettings":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"\n          Enable recommended proxy settings.\n        ","readOnly":false,"type":"boolean"},"services.nginx.recommendedTlsSettings":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"\n          Enable recommended TLS settings.\n        ","readOnly":false,"type":"boolean"},"services.nginx.serverTokens":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"Show nginx version in headers and error pages.","readOnly":false,"type":"boolean"},"services.nginx.sslCiphers":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"EECDH+aRSA+AESGCM:EDH+aRSA:EECDH+aRSA:+AES256:+AES128:+SHA1:!CAMELLIA:!SEED:!3DES:!DES:!RC4:!eNULL","description":"Ciphers to choose from when negotiating tls handshakes.","readOnly":false,"type":"string"},"services.nginx.sslDhparam":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":null,"description":"Path to DH parameters file.","example":"/path/to/dhparams.pem","readOnly":false,"type":"null or path"},"services.nginx.sslProtocols":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"TLSv1.2","description":"Allowed TLS protocol versions.","example":"TLSv1 TLSv1.1 TLSv1.2","readOnly":false,"type":"string"},"services.nginx.stateDir":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"/var/spool/nginx","description":"\n          Directory holding all state for nginx to run.\n        ","readOnly":false,"type":"unspecified"},"services.nginx.statusPage":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"\n          Enable status page reachable from localhost on http://127.0.0.1/nginx_status.\n        ","readOnly":false,"type":"boolean"},"services.nginx.user":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"nginx","description":"User account under which nginx runs.","readOnly":false,"type":"string"},"services.nginx.virtualHosts":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":{"localhost":{}},"description":"Declarative vhost config","example":{"_type":"literalExample","text":"{\n  \"hydra.example.com\" = {\n    forceSSL = true;\n    enableACME = true;\n    locations.\"/\" = {\n      proxyPass = \"http://localhost:3000\";\n    };\n  };\n};\n"},"readOnly":false,"type":"attribute set of submodules"},"services.nginx.virtualHosts.<name>.acmeFallbackHost":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":null,"description":"Host which to proxy requests to if acme challenge is not found. Useful\nif you want multiple hosts to be able to verify the same domain name.\n","readOnly":false,"type":"null or string"},"services.nginx.virtualHosts.<name>.acmeRoot":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"/var/lib/acme/acme-challenge","description":"Directory to store certificates and keys managed by the ACME service.","readOnly":false,"type":"string"},"services.nginx.virtualHosts.<name>.basicAuth":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":{},"description":"Basic Auth protection for a vhost.\n\nWARNING: This is implemented to store the password in plain text in the\nnix store.\n","example":{"_type":"literalExample","text":"{\n  user = \"password\";\n};\n"},"readOnly":false,"type":"attribute set of strings"},"services.nginx.virtualHosts.<name>.default":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"Makes this vhost the default.\n","readOnly":false,"type":"boolean"},"services.nginx.virtualHosts.<name>.enableACME":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"Whether to ask Let's Encrypt to sign a certificate for this vhost.","readOnly":false,"type":"boolean"},"services.nginx.virtualHosts.<name>.enableSSL":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"Whether to enable SSL (https) support.","readOnly":false,"type":"boolean"},"services.nginx.virtualHosts.<name>.extraConfig":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"These lines go to the end of the vhost verbatim.\n","readOnly":false,"type":"string"},"services.nginx.virtualHosts.<name>.forceSSL":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":false,"description":"Whether to always redirect to https.","readOnly":false,"type":"boolean"},"services.nginx.virtualHosts.<name>.globalRedirect":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":null,"description":"If set, all requests for this host are redirected permanently to\nthe given URL.\n","example":"http://newserver.example.org/","readOnly":false,"type":"null or string"},"services.nginx.virtualHosts.<name>.locations":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":{},"description":"Declarative location config","example":{"_type":"literalExample","text":"{\n  \"/\" = {\n    proxyPass = \"http://localhost:3000\";\n  };\n};\n"},"readOnly":false,"type":"attribute set of submodules"},"services.nginx.virtualHosts.<name>.locations.<name>.extraConfig":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":"","description":"These lines go to the end of the location verbatim.\n","readOnly":false,"type":"string"},"services.nginx.virtualHosts.<name>.locations.<name>.index":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":null,"description":"Adds index directive.\n","example":"index.php index.html","readOnly":false,"type":"null or string"},"services.nginx.virtualHosts.<name>.locations.<name>.proxyPass":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":null,"description":"Adds proxy_pass directive.\n","example":"http://www.example.org/","readOnly":false,"type":"null or string"},"services.nginx.virtualHosts.<name>.locations.<name>.root":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":null,"description":"Root directory for requests.\n","example":"/your/root/directory","readOnly":false,"type":"null or path"},"services.nginx.virtualHosts.<name>.locations.<name>.tryFiles":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":null,"description":"Adds try_files directive.\n","example":"$uri =404","readOnly":false,"type":"null or string"},"services.nginx.virtualHosts.<name>.port":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":null,"description":"Port for the server. Defaults to 80 for http\nand 443 for https (i.e. when enableSSL is set).\n","readOnly":false,"type":"null or integer"},"services.nginx.virtualHosts.<name>.root":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":null,"description":"The path of the web root directory.\n","example":"/data/webserver/docs","readOnly":false,"type":"null or path"},"services.nginx.virtualHosts.<name>.serverAliases":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"default":[],"description":"Additional names of virtual hosts served by this virtual host configuration.\n","example":["www.example.org","example.org"],"readOnly":false,"type":"list of strings"},"services.nginx.virtualHosts.<name>.sslCertificate":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"description":"Path to server SSL certificate.","example":"/var/host.cert","readOnly":false,"type":"path"},"services.nginx.virtualHosts.<name>.sslCertificateKey":{"declarations":["nixos/modules/services/web-servers/nginx/default.nix"],"description":"Path to server SSL certificate key.","example":"/var/host.key","readOnly":false,"type":"path"},"services.ngircd.config":{"declarations":["nixos/modules/services/networking/ngircd.nix"],"description":"The ngircd configuration (see ngircd.conf(5)).","readOnly":false,"type":"string"},"services.ngircd.enable":{"declarations":["nixos/modules/services/networking/ngircd.nix"],"default":false,"description":"Whether to enable the ngircd IRC server.","example":true,"readOnly":false,"type":"boolean"},"services.ngircd.package":{"declarations":["nixos/modules/services/networking/ngircd.nix"],"default":"pkgs.ngircd","description":"The ngircd package.","readOnly":false,"type":"package"},"services.nix-serve.bindAddress":{"declarations":["nixos/modules/services/networking/nix-serve.nix"],"default":"0.0.0.0","description":"IP address where nix-serve will bind its listening socket.\n","readOnly":false,"type":"string"},"services.nix-serve.enable":{"declarations":["nixos/modules/services/networking/nix-serve.nix"],"default":false,"description":"Whether to enable nix-serve, the standalone Nix binary cache server.","example":true,"readOnly":false,"type":"boolean"},"services.nix-serve.extraParams":{"declarations":["nixos/modules/services/networking/nix-serve.nix"],"default":"","description":"Extra command line parameters for nix-serve.\n","readOnly":false,"type":"string"},"services.nix-serve.port":{"declarations":["nixos/modules/services/networking/nix-serve.nix"],"default":5000,"description":"Port number where nix-serve will listen on.\n","readOnly":false,"type":"integer"},"services.nix-serve.secretKeyFile":{"declarations":["nixos/modules/services/networking/nix-serve.nix"],"default":null,"description":"The path to the file used for signing derivation data.\n","readOnly":false,"type":"null or string"},"services.nixbot.botName":{"declarations":["nixos/modules/services/web-apps/nixbot.nix"],"default":"nixbot","description":"The bot's github user account name.","readOnly":false,"type":"string"},"services.nixbot.enable":{"declarations":["nixos/modules/services/web-apps/nixbot.nix"],"default":false,"description":"Whether to enable nixbot.","example":true,"readOnly":false,"type":"boolean"},"services.nixbot.githubToken":{"declarations":["nixos/modules/services/web-apps/nixbot.nix"],"description":"The bot's github user account token.","example":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","readOnly":false,"type":"string"},"services.nixbot.hydraJobsetsRepo":{"declarations":["nixos/modules/services/web-apps/nixbot.nix"],"description":"The github repository to push the hydra jobset definitions to.","example":"nixos/hydra-jobsets","readOnly":false,"type":"string"},"services.nixbot.prRepo":{"declarations":["nixos/modules/services/web-apps/nixbot.nix"],"description":"The github repository to push the testing branches to.","example":"nixos/nixpkgs-pr","readOnly":false,"type":"string"},"services.nixbot.publicUrl":{"declarations":["nixos/modules/services/web-apps/nixbot.nix"],"description":"The public URL the bot is reachable at (Github hook endpoint).","example":"https://nixbot.nixos.org","readOnly":false,"type":"string"},"services.nixbot.repo":{"declarations":["nixos/modules/services/web-apps/nixbot.nix"],"description":"The github repository to check for PRs.","example":"nixos/nixpkgs","readOnly":false,"type":"string"},"services.nixbot.repoDir":{"declarations":["nixos/modules/services/web-apps/nixbot.nix"],"default":"/var/lib/nixbot","description":"The directory the repositories are stored in.","readOnly":false,"type":"path"},"services.nixcloud-reverse-proxy.enable":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/reverse-proxy.nix"],"default":false,"description":"Whether to enable nixcloud-reverse-proxy.","example":true,"readOnly":false,"type":"boolean"},"services.nixcloud-reverse-proxy.ports":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/reverse-proxy.nix"],"default":[80,443],"description":"ports where the reverse proxy listens for incoming http/https requests","readOnly":false,"type":"list of integers"},"services.nixcloud.mediawiki":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":{},"description":"","readOnly":false,"type":"attribute set of submodules"},"services.nixcloud.mediawiki.<name>.dbName":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"mediawiki","description":"Name of the database that holds the MediaWiki data.","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.dbPassword":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"The password of the database user.  Warning: this is stored in\ncleartext in the Nix store!\n","example":"foobar","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.dbServer":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"The location of the database server.  Leave empty to use a\ndatabase server running on the same machine through a Unix\ndomain socket.\n","example":"10.0.2.2","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.dbType":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"postgres","description":"Database type.","example":"mysql","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.dbUser":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"mediawiki","description":"The user name for accessing the database.","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.defaultSkin":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"Set this value to change the default skin used by MediaWiki.","example":"nostalgia","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.emergencyContact":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"asdf","description":"Emergency contact e-mail address.  Defaults to the Apache\nadmin address.\n","example":"admin@example.com","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.enable":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":false,"description":"Enable/Disable the webservice.","readOnly":false,"type":"boolean"},"services.nixcloud.mediawiki.<name>.enableUploads":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":false,"description":"Whether to enable file uploads.","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.extraConfig":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"Any additional text to be appended to MediaWiki's\nconfiguration file.  This is a PHP script.  For configuration\nsettings, see <link xlink:href='http://www.mediawiki.org/wiki/Manual:Configuration_settings'/>.\n","example":"$wgEnableEmail = false;\n","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.group":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"The group name which executes this webservice.","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.logo":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"The URL of the site's logo (which should be a 135x135px image).","example":"/images/logo.png","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.passwordSender":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"asdf","description":"E-mail address from which password confirmations originate.\nDefaults to the Apache admin address.\n","example":"password@example.com","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.proxyOptions.domain":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"description":"","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.proxyOptions.path":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"description":"","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.proxyOptions.port":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"description":"","readOnly":false,"type":"integer"},"services.nixcloud.mediawiki.<name>.siteName":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"MediaWiki","description":"Name of the wiki","example":"Foobar Wiki","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.skins":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":[],"description":"List of paths whose content is copied to the ‘skins’\nsubdirectory of the MediaWiki installation.\n","readOnly":false,"type":"list of paths"},"services.nixcloud.mediawiki.<name>.stateDir":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"Can't be changed and will be set to '/var/lib/${uniqueName}' as for example: '/var/lib/owncloud-instance1'.","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.uniqueName":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"Can't be changed and will be set to '${wsName}-'${name}' as for example: 'owncloud-instance1'.","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.uploadDir":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"You must specify `uploadDir`.","description":"The directory that stores uploaded files.","example":"/data/mediawiki-upload","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.urlPrefix":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"/w","description":"The URL prefix under which the Mediawiki service appears. Currently we prepend the `proxyOptions.path` before it so the reverse proxy knows where to route the requests.\n","readOnly":false,"type":"unspecified"},"services.nixcloud.mediawiki.<name>.user":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"The user name which executes this webservice.","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.webserver.documentRoot":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"Points to the document root of the webservice.","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.webserver.enableMellon":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":false,"description":"Whether to enable the mod_auth_mellon module.","readOnly":false,"type":"boolean"},"services.nixcloud.mediawiki.<name>.webserver.enablePHP":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":false,"description":"Whether to enable the PHP module.","readOnly":false,"type":"boolean"},"services.nixcloud.mediawiki.<name>.webserver.extraConfig":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"Cnfiguration lines appended to the generated Apache\nconfiguration file. Note that this mechanism may not work\nwhen <option>configFile</option> is overridden.\n","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.webserver.extraModules":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":[],"description":"Additional Apache modules to be used.  These can be\nspecified as a string in the case of modules distributed\nwith Apache, or as an attribute set specifying the\n<varname>name</varname> and <varname>path</varname> of the\nmodule.\n","example":{"_type":"literalExample","text":"[ \"proxy_connect\" { name = \"php5\"; path = \"${pkgs.php}/modules/libphp5.so\"; } ]"},"readOnly":false,"type":"list of unspecifieds"},"services.nixcloud.mediawiki.<name>.webserver.extraPath":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":[],"description":"Used to add useful scripts for webservice management into the system profile.","readOnly":false,"type":"list of paths"},"services.nixcloud.mediawiki.<name>.webserver.extraServiceDependencies":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":["postgresql.service"],"description":"Makes it easy to replace postgresql by mysql and depend on the service before we start the webservice.","example":["postgresql.service"],"readOnly":false,"type":"list of strings"},"services.nixcloud.mediawiki.<name>.webserver.logFormat":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"agent","description":"Can be set to `combined`, `common`, `referer`, `agent` or `none`.\n","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.webserver.logPerVirtualHost":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":false,"description":"If enabled, each virtual host gets its own\n<filename>access_log</filename> and\n<filename>error_log</filename>, namely suffixed by the\n<option>hostName</option> of the virtual host.\n","readOnly":false,"type":"boolean"},"services.nixcloud.mediawiki.<name>.webserver.maxClients":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":150,"description":"Maximum number of httpd processes (prefork)","example":8,"readOnly":false,"type":"integer"},"services.nixcloud.mediawiki.<name>.webserver.maxRequestsPerChild":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":0,"description":"Maximum number of httpd requests answered per httpd child (prefork), 0 means unlimited","example":500,"readOnly":false,"type":"integer"},"services.nixcloud.mediawiki.<name>.webserver.multiProcessingModule":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"prefork","description":"Multi-processing module to be used by Apache.  Available\nmodules are <literal>prefork</literal> (the default;\nhandles each request in a separate child process),\n<literal>worker</literal> (hybrid approach that starts a\nnumber of child processes each running a number of\nthreads) and <literal>event</literal> (a recent variant of\n<literal>worker</literal> that handles persistent\nconnections more efficiently).\n","example":"worker","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.webserver.package":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"pkgs.apacheHttpd","description":"Overridable attribute of the Apache HTTP Server package to use.\n","readOnly":false,"type":"package"},"services.nixcloud.mediawiki.<name>.webserver.phpOptions":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"Options appended to the PHP configuration file <filename>php.ini</filename>.","example":"date.timezone = \"CET\"\n","readOnly":false,"type":"string"},"services.nixcloud.mediawiki.<name>.webserver.phpPackage":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"pkgs.php","description":"Overridable attribute of the PHP package to use.\n","readOnly":false,"type":"package"},"services.nixcloud.mediawiki.<name>.webserver.startupScript":{"declarations":["/home/joachim/Desktop/projects/nixcloud/nixcloud-webservices-abstraction/all-nixcloud-services.nix"],"default":"","description":"A webservice can prepare the environment (files in the FS and data in databases) with this hook.","readOnly":false,"type":"string"},"services.nixosManual.browser":{"declarations":["nixos/modules/services/misc/nixos-manual.nix"],"default":"${pkgs.w3m-nox}/bin/w3m","description":"Browser used to show the manual.\n","readOnly":false,"type":"path"},"services.nixosManual.enable":{"declarations":["nixos/modules/services/misc/nixos-manual.nix"],"default":true,"description":"Whether to build the NixOS manual pages.\n","readOnly":false,"type":"boolean"},"services.nixosManual.showManual":{"declarations":["nixos/modules/services/misc/nixos-manual.nix"],"default":false,"description":"Whether to show the NixOS manual on one of the virtual\nconsoles.\n","readOnly":false,"type":"boolean"},"services.nixosManual.ttyNumber":{"declarations":["nixos/modules/services/misc/nixos-manual.nix"],"default":8,"description":"Virtual console on which to show the manual.\n","readOnly":false,"type":"integer"},"services.nntp-proxy.enable":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":false,"description":"Whether to enable NNTP-Proxy.","example":true,"readOnly":false,"type":"boolean"},"services.nntp-proxy.listenAddress":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":"127.0.0.1","description":"Proxy listen address (IPv6 literal addresses need to be enclosed in \"[\" and \"]\" characters)\n","example":"[::]","readOnly":false,"type":"string"},"services.nntp-proxy.port":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":5555,"description":"Proxy listen port\n","readOnly":false,"type":"integer"},"services.nntp-proxy.prohibitPosting":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":true,"description":"Whether to prohibit posting to the upstream server\n","readOnly":false,"type":"boolean"},"services.nntp-proxy.sslCert":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":"cert.pem","description":"Proxy ssl certificate path\n","example":"/path/to/your/cert.file","readOnly":false,"type":"string"},"services.nntp-proxy.sslKey":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":"key.pem","description":"Proxy ssl key path\n","example":"/path/to/your/key.file","readOnly":false,"type":"string"},"services.nntp-proxy.upstreamMaxConnections":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":20,"description":"Upstream server maximum allowed concurrent connections\n","readOnly":false,"type":"integer"},"services.nntp-proxy.upstreamPassword":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":"","description":"Upstream server password\n","readOnly":false,"type":"string"},"services.nntp-proxy.upstreamPort":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":563,"description":"Upstream server port\n","readOnly":false,"type":"integer"},"services.nntp-proxy.upstreamServer":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":"","description":"Upstream server address\n","example":"ssl-eu.astraweb.com","readOnly":false,"type":"string"},"services.nntp-proxy.upstreamUser":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":"","description":"Upstream server username\n","readOnly":false,"type":"string"},"services.nntp-proxy.users":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":{},"description":"NNTP-Proxy user configuration\n","example":{"_type":"literalExample","text":"\"user1\" = {\n  passwordHash = \"$6$1l0t5Kn2Dk$appzivc./9l/kjq57eg5UCsBKlcfyCr0zNWYNerKoPsI1d7eAwiT0SVsOVx/CTgaBNT/u4fi2vN.iGlPfv1ek0\";\n  maxConnections = 5;\n};\n\"anotheruser\" = {\n  passwordHash = \"$6$6lwEsWB.TmsS$W7m1riUx4QrA8pKJz8hvff0dnF1NwtZXgdjmGqA1Dx2MDPj07tI9GNcb0SWlMglE.2/hBgynDdAd/XqqtRqVQ0\";\n  maxConnections = 7;\n};\n"},"readOnly":false,"type":"attribute set of submodules"},"services.nntp-proxy.users.<name>.maxConnections":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":1,"description":"Maximum number of concurrent connections to the proxy for this user\n","readOnly":false,"type":"integer"},"services.nntp-proxy.users.<name>.passwordHash":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":null,"description":"SHA-512 password hash (can be generated by\n<code>mkpasswd -m sha-512 &lt;password&gt;</code>)\n","example":"$6$GtzE7FrpE$wwuVgFYU.TZH4Rz.Snjxk9XGua89IeVwPQ/fEUD8eujr40q5Y021yhn0aNcsQ2Ifw.BLclyzvzgegopgKcneL0","readOnly":false,"type":"string"},"services.nntp-proxy.users.<name>.username":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":null,"description":"Username\n","readOnly":false,"type":"string"},"services.nntp-proxy.verbosity":{"declarations":["nixos/modules/services/networking/nntp-proxy.nix"],"default":"info","description":"Verbosity level\n","example":"error","readOnly":false,"type":"one of \"error\", \"warning\", \"notice\", \"info\", \"debug\""},"services.nscd.config":{"declarations":["nixos/modules/services/system/nscd.nix"],"default":"server-user             nscd\nthreads                 1\nparanoia                no\ndebug-level             0\n\nenable-cache            passwd          yes\npositive-time-to-live   passwd          600\nnegative-time-to-live   passwd          20\nsuggested-size          passwd          211\ncheck-files             passwd          yes\npersistent              passwd          no\nshared                  passwd          yes\n\nenable-cache            group           yes\npositive-time-to-live   group           3600\nnegative-time-to-live   group           60\nsuggested-size          group           211\ncheck-files             group           yes\npersistent              group           no\nshared                  group           yes\n\nenable-cache            hosts           yes\npositive-time-to-live   hosts           600\nnegative-time-to-live   hosts           5\nsuggested-size          hosts           211\ncheck-files             hosts           yes\npersistent              hosts           no\nshared                  hosts           yes\n","description":"Configuration to use for Name Service Cache Daemon.","readOnly":false,"type":"string"},"services.nscd.enable":{"declarations":["nixos/modules/services/system/nscd.nix"],"default":true,"description":"Whether to enable the Name Service Cache Daemon.","readOnly":false,"type":"boolean"},"services.nsd.bind8Stats":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":false,"description":"Whether to enable BIND8 like statistics.","example":true,"readOnly":false,"type":"boolean"},"services.nsd.enable":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":false,"description":"Whether to enable NSD authoritative DNS server.","example":true,"readOnly":false,"type":"boolean"},"services.nsd.extraConfig":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"Extra nsd config.\n","readOnly":false,"type":"string"},"services.nsd.hideVersion":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":true,"description":"Whether NSD should answer VERSION.BIND and VERSION.SERVER CHAOS class queries.\n","readOnly":false,"type":"boolean"},"services.nsd.identity":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"unidentified server","description":"Identify the server (CH TXT ID.SERVER entry).\n","readOnly":false,"type":"string"},"services.nsd.interfaces":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":["127.0.0.0","::1"],"description":"What addresses the server should listen to.\n","readOnly":false,"type":"list of strings"},"services.nsd.ipFreebind":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":false,"description":"Whether to bind to nonlocal addresses and interfaces that are down.\nSimilar to ip-transparent.\n","readOnly":false,"type":"boolean"},"services.nsd.ipTransparent":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":false,"description":"Allow binding to non local addresses.\n","readOnly":false,"type":"boolean"},"services.nsd.ipv4":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":true,"description":"Whether to listen on IPv4 connections.\n","readOnly":false,"type":"boolean"},"services.nsd.ipv4EDNSSize":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":4096,"description":"Preferred EDNS buffer size for IPv4.\n","readOnly":false,"type":"integer"},"services.nsd.ipv6":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":true,"description":"Whether to listen on IPv6 connections.\n","readOnly":false,"type":"boolean"},"services.nsd.ipv6EDNSSize":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":4096,"description":"Preferred EDNS buffer size for IPv6.\n","readOnly":false,"type":"integer"},"services.nsd.keys":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":{},"description":"Define your TSIG keys here.\n","example":{"_type":"literalExample","text":"{ \"tsig.example.org\" = {\n    algorithm = \"hmac-md5\";\n    keyFile = \"/path/to/my/key\";\n  };\n}\n"},"readOnly":false,"type":"attribute set of submodules"},"services.nsd.keys.<name>.algorithm":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"hmac-sha256","description":"Authentication algorithm for this key.\n","readOnly":false,"type":"string"},"services.nsd.keys.<name>.keyFile":{"declarations":["nixos/modules/services/networking/nsd.nix"],"description":"Path to the file which contains the actual base64 encoded\nkey. The key will be copied into \"/var/lib/nsd/private\" before\nNSD starts. The copied file is only accessibly by the NSD\nuser.\n","readOnly":false,"type":"path"},"services.nsd.logTimeAscii":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":true,"description":"Log time in ascii, if false then in unix epoch seconds.\n","readOnly":false,"type":"boolean"},"services.nsd.nsid":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"NSID identity (hex string, or \"ascii_somestring\").\n","readOnly":false,"type":"null or string"},"services.nsd.port":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":53,"description":"Port the service should bind do.\n","readOnly":false,"type":"integer"},"services.nsd.ratelimit.enable":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":false,"description":"Whether to enable ratelimit capabilities.","example":true,"readOnly":false,"type":"boolean"},"services.nsd.ratelimit.ipv4PrefixLength":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"IPv4 prefix length. Addresses are grouped by netblock.\n","readOnly":false,"type":"null or integer"},"services.nsd.ratelimit.ipv6PrefixLength":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"IPv6 prefix length. Addresses are grouped by netblock.\n","readOnly":false,"type":"null or integer"},"services.nsd.ratelimit.ratelimit":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":200,"description":"Max qps allowed from any query source.\n0 means unlimited. With an verbosity of 2 blocked and\nunblocked subnets will be logged.\n","readOnly":false,"type":"integer"},"services.nsd.ratelimit.size":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":1000000,"description":"Size of the hashtable. More buckets use more memory but lower\nthe chance of hash hash collisions.\n","readOnly":false,"type":"integer"},"services.nsd.ratelimit.slip":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"Number of packets that get discarded before replying a SLIP response.\n0 disables SLIP responses. 1 will make every response a SLIP response.\n","readOnly":false,"type":"null or integer"},"services.nsd.ratelimit.whitelistRatelimit":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":2000,"description":"Max qps allowed from whitelisted sources.\n0 means unlimited. Set the rrl-whitelist option for specific\nqueries to apply this limit instead of the default to them.\n","readOnly":false,"type":"integer"},"services.nsd.remoteControl.controlCertFile":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"/etc/nsd/nsd_control.pem","description":"Path to the client certificate signed with the server certificate.\nThis file is used by nsd-control and generated by nsd-control-setup.\n","readOnly":false,"type":"path"},"services.nsd.remoteControl.controlKeyFile":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"/etc/nsd/nsd_control.key","description":"Path to the client private key, which is used by nsd-control\nbut not by the server. This file is generated by nsd-control-setup.\n","readOnly":false,"type":"path"},"services.nsd.remoteControl.enable":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":false,"description":"Whether to enable remote control via nsd-control.","example":true,"readOnly":false,"type":"boolean"},"services.nsd.remoteControl.interfaces":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":["127.0.0.1","::1"],"description":"Which interfaces NSD should bind to for remote control.\n","readOnly":false,"type":"list of strings"},"services.nsd.remoteControl.port":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":8952,"description":"Port number for remote control operations (uses TLS over TCP).\n","readOnly":false,"type":"integer"},"services.nsd.remoteControl.serverCertFile":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"/etc/nsd/nsd_server.pem","description":"Path to the server self signed certificate, which is used by the server\nbut and by nsd-control. This file is generated by nsd-control-setup.\n","readOnly":false,"type":"path"},"services.nsd.remoteControl.serverKeyFile":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"/etc/nsd/nsd_server.key","description":"Path to the server private key, which is used by the server\nbut not by nsd-control. This file is generated by nsd-control-setup.\n","readOnly":false,"type":"path"},"services.nsd.reuseport":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":true,"description":"Whether to enable SO_REUSEPORT on all used sockets. This lets multiple\nprocesses bind to the same port. This speeds up operation especially\nif the server count is greater than one and makes fast restarts less\nprone to fail\n","readOnly":false,"type":"boolean"},"services.nsd.rootServer":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":false,"description":"Whether this server will be a root server (a DNS root server, you\nusually don't want that).\n","readOnly":false,"type":"boolean"},"services.nsd.roundRobin":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":false,"description":"Whether to enable round robin rotation of records.","example":true,"readOnly":false,"type":"boolean"},"services.nsd.serverCount":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":1,"description":"Number of NSD servers to fork. Put the number of CPUs to use here.\n","readOnly":false,"type":"integer"},"services.nsd.statistics":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"Statistics are produced every number of seconds. Prints to log.\nIf null no statistics are logged.\n","readOnly":false,"type":"null or integer"},"services.nsd.tcpCount":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":100,"description":"Maximum number of concurrent TCP connections per server.\n","readOnly":false,"type":"integer"},"services.nsd.tcpQueryCount":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":0,"description":"Maximum number of queries served on a single TCP connection.\n0 means no maximum.\n","readOnly":false,"type":"integer"},"services.nsd.tcpTimeout":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":120,"description":"TCP timeout in seconds.\n","readOnly":false,"type":"integer"},"services.nsd.verbosity":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":0,"description":"Verbosity level.\n","readOnly":false,"type":"integer"},"services.nsd.version":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"The version string replied for CH TXT version.server and version.bind\nqueries. Will use the compiled package version on null.\nSee hideVersion for enabling/disabling this responses.\n","readOnly":false,"type":"null or string"},"services.nsd.xfrdReloadTimeout":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":1,"description":"Number of seconds between reloads triggered by xfrd.\n","readOnly":false,"type":"integer"},"services.nsd.zonefilesCheck":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":true,"description":"Whether to check mtime of all zone files on start and sighup.\n","readOnly":false,"type":"boolean"},"services.nsd.zones":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":{},"description":"Define your zones here. Zones can cascade other zones and therefore\ninherit settings from parent zones. Look at the definition of\nchildren to learn about inheritance and child zones.\nThe given example will define 3 zones (example.(com|org|net).). Both\nexample.com. and example.org. inherit their configuration from\nserverGroup1.\n","example":{"_type":"literalExample","text":"{ \"serverGroup1\" = {\n    provideXFR = [ \"10.1.2.3 NOKEY\" ];\n    children = {\n      \"example.com.\" = {\n        data = ''\n          $ORIGIN example.com.\n          $TTL    86400\n          @ IN SOA a.ns.example.com. admin.example.com. (\n          ...\n        '';\n      };\n      \"example.org.\" = {\n        data = ''\n          $ORIGIN example.org.\n          $TTL    86400\n          @ IN SOA a.ns.example.com. admin.example.com. (\n          ...\n        '';\n      };\n    };\n  };\n\n  \"example.net.\" = {\n    provideXFR = [ \"10.3.2.1 NOKEY\" ];\n    data = ''\n      ...\n    '';\n  };\n}\n"},"readOnly":false,"type":"attribute set of submodules"},"services.nsd.zones.<name>.allowAXFRFallback":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":true,"description":"If NSD as secondary server should be allowed to AXFR if the primary\nserver does not allow IXFR.\n","readOnly":false,"type":"boolean"},"services.nsd.zones.<name>.allowNotify":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":[],"description":"Listed primary servers are allowed to notify this secondary server.\n<screen><![CDATA[\nFormat: <ip> <key-name | NOKEY | BLOCKED>\n\n<ip> either a plain IPv4/IPv6 address or range. Valid patters for ranges:\n* 10.0.0.0/24            # via subnet size\n* 10.0.0.0&255.255.255.0 # via subnet mask\n* 10.0.0.1-10.0.0.254    # via range\n\nA optional port number could be added with a '@':\n* 2001:1234::1@1234\n\n<key-name | NOKEY | BLOCKED>\n* <key-name> will use the specified TSIG key\n* NOKEY      no TSIG signature is required\n* BLOCKED    notifies from non-listed or blocked IPs will be ignored\n* ]]></screen>\n","example":["192.0.2.0/24 NOKEY","10.0.0.1-10.0.0.5 my_tsig_key_name","10.0.3.4&255.255.0.0 BLOCKED"],"readOnly":false,"type":"list of strings"},"services.nsd.zones.<name>.children":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":{},"description":"Children zones inherit all options of their parents. Attributes\ndefined in a child will overwrite the ones of its parent. Only\nleaf zones will be actually served. This way it's possible to\ndefine maybe zones which share most attributes without\nduplicating everything. This mechanism replaces nsd's patterns\nin a save and functional way.\n","readOnly":false,"type":"unspecified"},"services.nsd.zones.<name>.data":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":"","description":"The actual zone data. This is the content of your zone file.\nUse imports or pkgs.lib.readFile if you don't want this data in your config file.\n","example":"","readOnly":false,"type":"string"},"services.nsd.zones.<name>.maxRefreshSecs":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"Limit refresh time for secondary zones. This is the timer which\nchecks to see if the zone has to be refetched when it expires.\nNormally the value from the SOA record is used, but this  option\nrestricts that value.\n","readOnly":false,"type":"null or integer"},"services.nsd.zones.<name>.maxRetrySecs":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"Limit retry time for secondary zones. This is the timeout after\na failed fetch attempt for the zone. Normally the value from\nthe SOA record is used, but this option restricts that value.\n","readOnly":false,"type":"null or integer"},"services.nsd.zones.<name>.minRefreshSecs":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"Limit refresh time for secondary zones.\n","readOnly":false,"type":"null or integer"},"services.nsd.zones.<name>.minRetrySecs":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"Limit retry time for secondary zones.\n","readOnly":false,"type":"null or integer"},"services.nsd.zones.<name>.notify":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":[],"description":"This primary server will notify all given secondary servers about\nzone changes.\n<screen><![CDATA[\nFormat: <ip> <key-name | NOKEY>\n\n<ip> a plain IPv4/IPv6 address with on optional port number (ip@port)\n\n<key-name | NOKEY>\n* <key-name> sign notifies with the specified key\n* NOKEY      don't sign notifies\n]]></screen>\n","example":["10.0.0.1@3721 my_key","::5 NOKEY"],"readOnly":false,"type":"list of strings"},"services.nsd.zones.<name>.notifyRetry":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":5,"description":"Specifies the number of retries for failed notifies. Set this along with notify.\n","readOnly":false,"type":"integer"},"services.nsd.zones.<name>.outgoingInterface":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"This address will be used for zone-transfere requests if configured\nas a secondary server or notifications in case of a primary server.\nSupply either a plain IPv4 or IPv6 address with an optional port\nnumber (ip@port).\n","example":"2000::1@1234","readOnly":false,"type":"null or string"},"services.nsd.zones.<name>.provideXFR":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":[],"description":"Allow these IPs and TSIG to transfer zones, addr TSIG|NOKEY|BLOCKED\naddress range 192.0.2.0/24, 1.2.3.4&amp;255.255.0.0, 3.0.2.20-3.0.2.40\n","example":["192.0.2.0/24 NOKEY","192.0.2.0/24 my_tsig_key_name"],"readOnly":false,"type":"list of strings"},"services.nsd.zones.<name>.requestXFR":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":[],"description":"Format: <code>[AXFR|UDP] &lt;ip-address&gt; &lt;key-name | NOKEY&gt;</code>\n","example":[],"readOnly":false,"type":"list of strings"},"services.nsd.zones.<name>.rrlWhitelist":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":[],"description":"Whitelists the given rrl-types.\n","readOnly":false,"type":"list of one of \"nxdomain\", \"error\", \"referral\", \"any\", \"rrsig\", \"wildcard\", \"nodata\", \"dnskey\", \"positive\", \"all\"s"},"services.nsd.zones.<name>.zoneStats":{"declarations":["nixos/modules/services/networking/nsd.nix"],"default":null,"description":"When set to something distinct to null NSD is able to collect\nstatistics per zone. All statistics of this zone(s) will be added\nto the group specified by this given name. Use \"%s\" to use the zones\nname as the group. The groups are output from nsd-control stats\nand stats_noreset.\n","example":"%s","readOnly":false,"type":"null or string"},"services.ntopng.configText":{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":"","description":"Overridable configuration file contents to use for ntopng. By\ndefault, use the contents automatically generated by NixOS.\n","example":"--interface=any\n--http-port=3000\n--disable-login\n","readOnly":false,"type":"string"},"services.ntopng.enable":{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":false,"description":"Enable ntopng, a high-speed web-based traffic analysis and flow\ncollection tool.\n\nWith the default configuration, ntopng monitors all network\ninterfaces and displays its findings at http://localhost:3000. Default username and password is admin/admin.\n\nSee the ntopng(8) manual page and http://www.ntop.org/products/ntop/\nfor more info.\n\nNote that enabling ntopng will also enable redis (key-value\ndatabase server) for persistent data storage.\n","readOnly":false,"type":"boolean"},"services.ntopng.extraConfig":{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":"","description":"Configuration lines that will be appended to the generated ntopng\nconfiguration file. Note that this mechanism does not work when the\nmanual <option>configText</option> option is used.\n","readOnly":false,"type":"string"},"services.ntopng.http-port":{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":3000,"description":"Sets the HTTP port of the embedded web server.\n","readOnly":false,"type":"integer"},"services.ntopng.interfaces":{"declarations":["nixos/modules/services/networking/ntopng.nix"],"default":["any"],"description":"List of interfaces to monitor. Use \"any\" to monitor all interfaces.\n","example":["eth0","wlan0"],"readOnly":false,"type":"list of strings"},"services.ntp.enable":{"declarations":["nixos/modules/services/networking/ntpd.nix"],"default":true,"description":"Whether to synchronise your machine's time using the NTP\nprotocol.\n","readOnly":false,"type":"unspecified"},"services.ntp.extraFlags":{"declarations":["nixos/modules/services/networking/ntpd.nix"],"default":[],"description":"Extra flags passed to the ntpd command.","readOnly":false,"type":"list of strings"},"services.ntp.servers":{"declarations":["nixos/modules/services/networking/ntpd.nix"],"default":["0.nixos.pool.ntp.org","1.nixos.pool.ntp.org","2.nixos.pool.ntp.org","3.nixos.pool.ntp.org"],"description":"The set of NTP servers from which to synchronise.\n","readOnly":false,"type":"unspecified"},"services.nylon.acceptInterface":{"declarations":["nixos/modules/services/networking/nylon.nix"],"default":"lo","description":"Tell nylon which interface to listen for client requests on, default is \"lo\".\n","readOnly":false,"type":"string"},"services.nylon.allowedIPRanges":{"declarations":["nixos/modules/services/networking/nylon.nix"],"default":["192.168.0.0/16","127.0.0.1/8","172.16.0.1/12","10.0.0.0/8"],"description":"Allowed client IP ranges are evaluated first, defaults to ARIN IPv4 private ranges:\n  [ \"192.168.0.0/16\" \"127.0.0.0/8\" \"172.16.0.0/12\" \"10.0.0.0/8\" ]\n","readOnly":false,"type":"list of strings"},"services.nylon.bindInterface":{"declarations":["nixos/modules/services/networking/nylon.nix"],"default":"enp3s0f0","description":"Tell nylon which interface to use as an uplink, default is \"enp3s0f0\".\n","readOnly":false,"type":"string"},"services.nylon.deniedIPRanges":{"declarations":["nixos/modules/services/networking/nylon.nix"],"default":["0.0.0.0/0"],"description":"Denied client IP ranges, these gets evaluated after the allowed IP ranges, defaults to all IPv4 addresses:\n  [ \"0.0.0.0/0\" ]\nTo block all other access than the allowed.\n","readOnly":false,"type":"list of strings"},"services.nylon.enable":{"declarations":["nixos/modules/services/networking/nylon.nix"],"default":false,"description":"Enables nylon as a running service upon activation.\n","readOnly":false,"type":"boolean"},"services.nylon.logging":{"declarations":["nixos/modules/services/networking/nylon.nix"],"default":false,"description":"Enable logging, default is no logging.\n","readOnly":false,"type":"boolean"},"services.nylon.nrConnections":{"declarations":["nixos/modules/services/networking/nylon.nix"],"default":10,"description":"The number of allowed simultaneous connections to the daemon, default 10.\n","readOnly":false,"type":"integer"},"services.nylon.port":{"declarations":["nixos/modules/services/networking/nylon.nix"],"default":1080,"description":"What port to listen for client requests, default is 1080.\n","readOnly":false,"type":"integer"},"services.nylon.verbosity":{"declarations":["nixos/modules/services/networking/nylon.nix"],"default":false,"description":"Enable verbose output, default is to not be verbose.\n","readOnly":false,"type":"boolean"},"services.nzbget.enable":{"declarations":["nixos/modules/services/misc/nzbget.nix"],"default":false,"description":"Whether to enable NZBGet.","example":true,"readOnly":false,"type":"boolean"},"services.nzbget.group":{"declarations":["nixos/modules/services/misc/nzbget.nix"],"default":"nzbget","description":"Group under which NZBGet runs","readOnly":false,"type":"string"},"services.nzbget.package":{"declarations":["nixos/modules/services/misc/nzbget.nix"],"default":"pkgs.nzbget","description":"The NZBGet package to use","readOnly":false,"type":"package"},"services.nzbget.user":{"declarations":["nixos/modules/services/misc/nzbget.nix"],"default":"nzbget","description":"User account under which NZBGet runs","readOnly":false,"type":"string"},"services.oauth2_proxy.approvalPrompt":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":"force","description":"OAuth approval_prompt.\n","readOnly":false,"type":"one of \"force\", \"auto\""},"services.oauth2_proxy.azure.resource":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"description":"The resource that is protected.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.azure.tenant":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":"common","description":"Go to a tenant-specific or common (tenant-independent) endpoint.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.basicAuthPassword":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"The password to set when passing the HTTP Basic Auth header.\n","readOnly":false,"type":"null or string"},"services.oauth2_proxy.clientID":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"description":"The OAuth Client ID.\n","example":"123456.apps.googleusercontent.com","readOnly":false,"type":"string"},"services.oauth2_proxy.clientSecret":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"description":"The OAuth Client Secret.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.cookie.domain":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"An optional cookie domain to force cookies to.\n","example":".yourcompany.com","readOnly":false,"type":"null or string"},"services.oauth2_proxy.cookie.expire":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":"168h0m0s","description":"Expire timeframe for cookie.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.cookie.httpOnly":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":true,"description":"Set HttpOnly cookie flag.\n","readOnly":false,"type":"boolean"},"services.oauth2_proxy.cookie.name":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":"_oauth2_proxy","description":"The name of the cookie that the oauth_proxy creates.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.cookie.refresh":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"Refresh the cookie after this duration; 0 to disable.\n","example":"168h0m0s","readOnly":false,"type":"null or string"},"services.oauth2_proxy.cookie.secret":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"description":"The seed string for secure cookies.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.cookie.secure":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":true,"description":"Set secure (HTTPS) cookie flag.\n","readOnly":false,"type":"boolean"},"services.oauth2_proxy.customTemplatesDir":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"Path to custom HTML templates.\n","readOnly":false,"type":"null or path"},"services.oauth2_proxy.email.addresses":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"Line-separated email addresses that are allowed to authenticate.\n","readOnly":false,"type":"null or string"},"services.oauth2_proxy.email.domains":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":[],"description":"Authenticate emails with the specified domains. Use\n<literal>*</literal> to authenticate any email.\n","readOnly":false,"type":"list of strings"},"services.oauth2_proxy.enable":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":false,"description":"Whether to enable oauth2_proxy.","example":true,"readOnly":false,"type":"boolean"},"services.oauth2_proxy.github.org":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"Restrict logins to members of this organisation.\n","readOnly":false,"type":"null or string"},"services.oauth2_proxy.github.team":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"Restrict logins to members of this team.\n","readOnly":false,"type":"null or string"},"services.oauth2_proxy.google.adminEmail":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"description":"The Google Admin to impersonate for API calls.\n\nOnly users with access to the Admin APIs can access the Admin SDK\nDirectory API, thus the service account needs to impersonate one of\nthose users to access the Admin SDK Directory API.\n\nSee <link xlink:href=\"https://developers.google.com/admin-sdk/directory/v1/guides/delegation#delegate_domain-wide_authority_to_your_service_account\" />.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.google.groups":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":[],"description":"Restrict logins to members of these Google groups.\n","readOnly":false,"type":"list of strings"},"services.oauth2_proxy.google.serviceAccountJSON":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"description":"The path to the service account JSON credentials.\n","readOnly":false,"type":"path"},"services.oauth2_proxy.htpasswd.displayForm":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":true,"description":"Display username / password login form if an htpasswd file is provided.\n","readOnly":false,"type":"boolean"},"services.oauth2_proxy.htpasswd.file":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"Additionally authenticate against a htpasswd file. Entries must be\ncreated with <literal>htpasswd -s</literal> for SHA encryption.\n","readOnly":false,"type":"null or path"},"services.oauth2_proxy.httpAddress":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":"127.0.0.1:4180","description":"HTTPS listening address.  This module does not expose the port by\ndefault. If you want this URL to be accessible to other machines, please\nadd the port to <literal>networking.firewall.allowedTCPPorts</literal>.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.loginURL":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"Authentication endpoint.\n\nYou only need to set this if you are using a self-hosted provider (e.g.\nGithub Enterprise). If you're using a publicly hosted provider\n(e.g github.com), then the default works.\n","example":"https://provider.example.com/oauth/authorize","readOnly":false,"type":"null or string"},"services.oauth2_proxy.package":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":"pkgs.oauth2_proxy","description":"The package that provides oauth2_proxy.\n","readOnly":false,"type":"package"},"services.oauth2_proxy.passAccessToken":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":false,"description":"Pass OAuth access_token to upstream via X-Forwarded-Access-Token header.\n","readOnly":false,"type":"boolean"},"services.oauth2_proxy.passBasicAuth":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":true,"description":"Pass HTTP Basic Auth, X-Forwarded-User and X-Forwarded-Email information to upstream.\n","readOnly":false,"type":"boolean"},"services.oauth2_proxy.passHostHeader":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":true,"description":"Pass the request Host Header to upstream.\n","readOnly":false,"type":"boolean"},"services.oauth2_proxy.profileURL":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"\tProfile access endpoint.\n","readOnly":false,"type":"null or string"},"services.oauth2_proxy.provider":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":"google","description":"OAuth provider.\n","readOnly":false,"type":"one of \"google\", \"github\", \"azure\", \"gitlab\", \"linkedin\", \"myusa\""},"services.oauth2_proxy.proxyPrefix":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":"/oauth2","description":"The url root path that this proxy should be nested under.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.redeemURL":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"Token redemption endpoint.\n\nYou only need to set this if you are using a self-hosted provider (e.g.\nGithub Enterprise). If you're using a publicly hosted provider\n(e.g github.com), then the default works.\n","example":"https://provider.example.com/oauth/token","readOnly":false,"type":"null or string"},"services.oauth2_proxy.redirectURL":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"The OAuth2 redirect URL.\n","example":"https://internalapp.yourcompany.com/oauth2/callback","readOnly":false,"type":"null or string"},"services.oauth2_proxy.requestLogging":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":true,"description":"Log requests to stdout.\n","readOnly":false,"type":"boolean"},"services.oauth2_proxy.scope":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"OAuth scope specification.\n","readOnly":false,"type":"null or string"},"services.oauth2_proxy.signatureKey":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"GAP-Signature request signature key.\n","example":"sha1:secret0","readOnly":false,"type":"null or string"},"services.oauth2_proxy.skipAuthRegexes":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":[],"description":"Skip authentication for requests matching any of these regular\nexpressions.\n","readOnly":false,"type":"list of strings"},"services.oauth2_proxy.tls.certificate":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"description":"Path to certificate file.\n","readOnly":false,"type":"path"},"services.oauth2_proxy.tls.enable":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":false,"description":"Whether to serve over TLS.\n","readOnly":false,"type":"boolean"},"services.oauth2_proxy.tls.httpsAddress":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":":443","description":"<literal>addr:port</literal> to listen on for HTTPS clients.\n\nRemember to add <literal>port</literal> to\n<literal>allowedTCPPorts</literal> if you want other machines to be\nable to connect to it.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.tls.key":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"description":"Path to private key file.\n","readOnly":false,"type":"path"},"services.oauth2_proxy.upstream":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"description":"The http url(s) of the upstream endpoint or <literal>file://</literal>\npaths for static files. Routing is based on the path.\n","readOnly":false,"type":"string"},"services.oauth2_proxy.validateURL":{"declarations":["nixos/modules/services/security/oauth2_proxy.nix"],"default":null,"description":"Access token validation endpoint.\n\nYou only need to set this if you are using a self-hosted provider (e.g.\nGithub Enterprise). If you're using a publicly hosted provider\n(e.g github.com), then the default works.\n","example":"https://provider.example.com/user/emails","readOnly":false,"type":"null or string"},"services.octoprint.enable":{"declarations":["nixos/modules/services/misc/octoprint.nix"],"default":false,"description":"Whether to enable OctoPrint, web interface for 3D printers.","example":true,"readOnly":false,"type":"boolean"},"services.octoprint.extraConfig":{"declarations":["nixos/modules/services/misc/octoprint.nix"],"default":{},"description":"Extra options which are added to OctoPrint's YAML configuration file.","readOnly":false,"type":"attribute set"},"services.octoprint.group":{"declarations":["nixos/modules/services/misc/octoprint.nix"],"default":"octoprint","description":"Group for the daemon.","readOnly":false,"type":"string"},"services.octoprint.host":{"declarations":["nixos/modules/services/misc/octoprint.nix"],"default":"0.0.0.0","description":"Host to bind OctoPrint to.\n","readOnly":false,"type":"string"},"services.octoprint.plugins":{"declarations":["nixos/modules/services/misc/octoprint.nix"],"default":"plugins: []","description":"Additional plugins.","example":{"_type":"literalExample","text":"plugins: [ m3d-fio ]"},"readOnly":false,"type":"unspecified"},"services.octoprint.port":{"declarations":["nixos/modules/services/misc/octoprint.nix"],"default":5000,"description":"Port to bind OctoPrint to.\n","readOnly":false,"type":"integer"},"services.octoprint.stateDir":{"declarations":["nixos/modules/services/misc/octoprint.nix"],"default":"/var/lib/octoprint","description":"State directory of the daemon.","readOnly":false,"type":"path"},"services.octoprint.user":{"declarations":["nixos/modules/services/misc/octoprint.nix"],"default":"octoprint","description":"User for the daemon.","readOnly":false,"type":"string"},"services.offlineimap.enable":{"declarations":["nixos/modules/services/mail/offlineimap.nix"],"default":false,"description":"Whether to enable Offlineimap, a software to dispose your mailbox(es) as a local Maildir(s)..","example":true,"readOnly":false,"type":"boolean"},"services.offlineimap.install":{"declarations":["nixos/modules/services/mail/offlineimap.nix"],"default":false,"description":"Whether to install a user service for Offlineimap. Once\nthe service is started, emails will be fetched automatically.\n\nThe service must be manually started for each user with\n\"systemctl --user start offlineimap\" or globally through\n<varname>services.offlineimap.enable</varname>.\n","example":true,"readOnly":false,"type":"boolean"},"services.offlineimap.onCalendar":{"declarations":["nixos/modules/services/mail/offlineimap.nix"],"default":"*:0/3","description":"How often is offlineimap started. Default is '*:0/3' meaning every 3 minutes. See systemd.time(7) for more information about the format.","readOnly":false,"type":"string"},"services.offlineimap.package":{"declarations":["nixos/modules/services/mail/offlineimap.nix"],"default":"pkgs.offlineimap","description":"Offlineimap derivation to use.","readOnly":false,"type":"package"},"services.offlineimap.path":{"declarations":["nixos/modules/services/mail/offlineimap.nix"],"default":[],"description":"List of derivations to put in Offlineimap's path.","example":{"_type":"literalExample","text":"[ pkgs.pass pkgs.bash pkgs.notmuch ]"},"readOnly":false,"type":"list of paths"},"services.offlineimap.timeoutStartSec":{"declarations":["nixos/modules/services/mail/offlineimap.nix"],"default":"120sec","description":"How long waiting for offlineimap before killing it. Default is '120sec' meaning every 2 minutes. See systemd.time(7) for more information about the format.","readOnly":false,"type":"string"},"services.oidentd.enable":{"declarations":["nixos/modules/services/networking/oidentd.nix"],"default":false,"description":"Whether to enable ‘oidentd’, an implementation of the Ident\nprotocol (RFC 1413).  It allows remote systems to identify the\nname of the user associated with a TCP connection.\n","readOnly":false,"type":"boolean"},"services.openafsClient.cacheDirectory":{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":"/var/cache/openafs","description":"Cache directory.","readOnly":false,"type":"unspecified"},"services.openafsClient.cacheSize":{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":"100000","description":"Cache size.","readOnly":false,"type":"unspecified"},"services.openafsClient.cellName":{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":"grand.central.org","description":"Cell name.","readOnly":false,"type":"unspecified"},"services.openafsClient.crypt":{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":false,"description":"Whether to enable (weak) protocol encryption.","readOnly":false,"type":"unspecified"},"services.openafsClient.enable":{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":false,"description":"Whether to enable the OpenAFS client.","readOnly":false,"type":"unspecified"},"services.openafsClient.sparse":{"declarations":["nixos/modules/services/network-filesystems/openafs-client/default.nix"],"default":false,"description":"Minimal cell list in /afs.","readOnly":false,"type":"unspecified"},"services.opendkim.configFile":{"declarations":["nixos/modules/services/mail/opendkim.nix"],"default":null,"description":"Additional opendkim configuration.","readOnly":false,"type":"null or path"},"services.opendkim.domains":{"declarations":["nixos/modules/services/mail/opendkim.nix"],"default":"csl:nixos","description":"Local domains set (see <literal>opendkim(8)</literal> for more information on datasets).\nMessages from them are signed, not verified.\n","example":"csl:example.com,mydomain.net","readOnly":false,"type":"string"},"services.opendkim.enable":{"declarations":["nixos/modules/services/mail/opendkim.nix"],"default":false,"description":"Whether to enable the OpenDKIM sender authentication system.","readOnly":false,"type":"boolean"},"services.opendkim.group":{"declarations":["nixos/modules/services/mail/opendkim.nix"],"default":"opendkim","description":"Group for the daemon.","readOnly":false,"type":"string"},"services.opendkim.keyFile":{"declarations":["nixos/modules/services/mail/opendkim.nix"],"description":"Secret key file used for signing messages.","readOnly":false,"type":"path"},"services.opendkim.selector":{"declarations":["nixos/modules/services/mail/opendkim.nix"],"description":"Selector to use when signing.","readOnly":false,"type":"string"},"services.opendkim.socket":{"declarations":["nixos/modules/services/mail/opendkim.nix"],"default":"local:/run/opendkim/opendkim.sock","description":"Socket which is used for communication with OpenDKIM.","readOnly":false,"type":"string"},"services.opendkim.user":{"declarations":["nixos/modules/services/mail/opendkim.nix"],"default":"opendkim","description":"User for the daemon.","readOnly":false,"type":"string"},"services.openfire.enable":{"declarations":["nixos/modules/services/networking/openfire.nix"],"default":false,"description":"\n          Whether to enable OpenFire XMPP server.\n        ","readOnly":false,"type":"unspecified"},"services.openfire.usePostgreSQL":{"declarations":["nixos/modules/services/networking/openfire.nix"],"default":true,"description":"\n          Whether you use PostgreSQL service for your storage back-end.\n        ","readOnly":false,"type":"unspecified"},"services.openldap.configDir":{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":null,"description":"Use this optional config directory instead of using slapd.conf","example":"/var/db/slapd.d","readOnly":false,"type":"null or path"},"services.openldap.dataDir":{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":"/var/db/openldap","description":"The database directory.","readOnly":false,"type":"string"},"services.openldap.enable":{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":false,"description":"\n          Whether to enable the ldap server.\n        ","example":true,"readOnly":false,"type":"boolean"},"services.openldap.extraConfig":{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":"","description":"\n          slapd.conf configuration\n        ","example":{"_type":"literalExample","text":"''\ninclude ${pkgs.openldap.out}/etc/openldap/schema/core.schema\ninclude ${pkgs.openldap.out}/etc/openldap/schema/cosine.schema\ninclude ${pkgs.openldap.out}/etc/openldap/schema/inetorgperson.schema\ninclude ${pkgs.openldap.out}/etc/openldap/schema/nis.schema\n\ndatabase bdb \nsuffix dc=example,dc=org \nrootdn cn=admin,dc=example,dc=org \n# NOTE: change after first start\nrootpw secret\ndirectory /var/db/openldap\n''\n"},"readOnly":false,"type":"string"},"services.openldap.group":{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":"openldap","description":"Group account under which slapd runs.","readOnly":false,"type":"string"},"services.openldap.urlList":{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":["ldap:///"],"description":"URL list slapd should listen on.","example":["ldaps:///"],"readOnly":false,"type":"list of strings"},"services.openldap.user":{"declarations":["nixos/modules/services/databases/openldap.nix"],"default":"openldap","description":"User account under which slapd runs.","readOnly":false,"type":"string"},"services.openntpd.enable":{"declarations":["nixos/modules/services/networking/openntpd.nix"],"default":false,"description":"Whether to enable OpenNTP time synchronization server.","example":true,"readOnly":false,"type":"boolean"},"services.openntpd.extraConfig":{"declarations":["nixos/modules/services/networking/openntpd.nix"],"default":"","description":"Additional text appended to <filename>openntpd.conf</filename>.\n","example":"listen on 127.0.0.1 \nlisten on ::1 \n","readOnly":false,"type":"string"},"services.openntpd.extraOptions":{"declarations":["nixos/modules/services/networking/openntpd.nix"],"default":"","description":"Extra options used when launching openntpd.\n","example":"-s","readOnly":false,"type":"string"},"services.openntpd.servers":{"declarations":["nixos/modules/services/networking/openntpd.nix"],"default":["0.nixos.pool.ntp.org","1.nixos.pool.ntp.org","2.nixos.pool.ntp.org","3.nixos.pool.ntp.org"],"description":"The set of NTP servers from which to synchronise.\n","readOnly":false,"type":"list of strings"},"services.opensmtpd.addSendmailToSystemPath":{"declarations":["nixos/modules/services/mail/opensmtpd.nix"],"default":true,"description":"Whether to add OpenSMTPD's sendmail binary to the\nsystem path or not.\n","readOnly":false,"type":"boolean"},"services.opensmtpd.enable":{"declarations":["nixos/modules/services/mail/opensmtpd.nix"],"default":false,"description":"Whether to enable the OpenSMTPD server.","readOnly":false,"type":"boolean"},"services.opensmtpd.extraServerArgs":{"declarations":["nixos/modules/services/mail/opensmtpd.nix"],"default":[],"description":"Extra command line arguments provided when the smtpd process\nis started.\n","example":["-v","-P mta"],"readOnly":false,"type":"list of strings"},"services.opensmtpd.procPackages":{"declarations":["nixos/modules/services/mail/opensmtpd.nix"],"default":[],"description":"Packages to search for filters, tables, queues, and schedulers.\n\nAdd OpenSMTPD-extras here if you want to use the filters, etc. from\nthat package.\n","readOnly":false,"type":"list of packages"},"services.opensmtpd.serverConfiguration":{"declarations":["nixos/modules/services/mail/opensmtpd.nix"],"description":"The contents of the smtpd.conf configuration file. See the\nOpenSMTPD documentation for syntax information.\n","example":"listen on lo\naccept for any deliver to lmtp localhost:24\n","readOnly":false,"type":"string"},"services.openssh.allowSFTP":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":true,"description":"Whether to enable the SFTP subsystem in the SSH daemon.  This\nenables the use of commands such as <command>sftp</command> and\n<command>sshfs</command>.\n","readOnly":false,"type":"boolean"},"services.openssh.authorizedKeysFiles":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":[],"description":"Files from which authorized keys are read.","readOnly":false,"type":"list of strings"},"services.openssh.challengeResponseAuthentication":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":true,"description":"Specifies whether challenge/response authentication is allowed.\n","readOnly":false,"type":"boolean"},"services.openssh.enable":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":false,"description":"Whether to enable the OpenSSH secure shell daemon, which\nallows secure remote logins.\n","readOnly":false,"type":"boolean"},"services.openssh.extraConfig":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"","description":"Verbatim contents of <filename>sshd_config</filename>.","readOnly":false,"type":"string"},"services.openssh.forwardX11":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":false,"description":"Whether to allow X11 connections to be forwarded.\n","readOnly":false,"type":"boolean"},"services.openssh.gatewayPorts":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"no","description":"Specifies whether remote hosts are allowed to connect to\nports forwarded for the client.  See\n<citerefentry><refentrytitle>sshd_config</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.\n","readOnly":false,"type":"string"},"services.openssh.hostKeys":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":[{"bits":4096,"path":"/etc/ssh/ssh_host_rsa_key","type":"rsa"},{"path":"/etc/ssh/ssh_host_ed25519_key","type":"ed25519"}],"description":"NixOS can automatically generate SSH host keys.  This option\nspecifies the path, type and size of each key.  See\n<citerefentry><refentrytitle>ssh-keygen</refentrytitle>\n<manvolnum>1</manvolnum></citerefentry> for supported types\nand sizes.\n","readOnly":false,"type":"list of attribute sets"},"services.openssh.knownHosts":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>programs.ssh.knownHosts</option>.","readOnly":false,"type":"unspecified"},"services.openssh.listenAddresses":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":[],"description":"List of addresses and ports to listen on (ListenAddress directive\nin config). If port is not specified for address sshd will listen\non all ports specified by <literal>ports</literal> option.\nNOTE: this will override default listening on all local addresses and port 22.\nNOTE: setting this option won't automatically enable given ports\nin firewall configuration.\n","example":[{"addr":"192.168.3.1","port":22},{"addr":"0.0.0.0","port":64022}],"readOnly":false,"type":"list of submodules"},"services.openssh.listenAddresses.*.addr":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":null,"description":"Host, IPv4 or IPv6 address to listen to.\n","readOnly":false,"type":"null or string"},"services.openssh.listenAddresses.*.port":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":null,"description":"Port to listen to.\n","readOnly":false,"type":"null or integer"},"services.openssh.moduliFile":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"description":"Path to <literal>moduli</literal> file to install in\n<literal>/etc/ssh/moduli</literal>. If this option is unset, then\nthe <literal>moduli</literal> file shipped with OpenSSH will be used.\n","example":"services.openssh.moduliFile = /etc/my-local-ssh-moduli;","readOnly":false,"type":"path"},"services.openssh.passwordAuthentication":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":true,"description":"Specifies whether password authentication is allowed.\n","readOnly":false,"type":"boolean"},"services.openssh.permitRootLogin":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":"prohibit-password","description":"Whether the root user can login using ssh.\n","readOnly":false,"type":"one of \"yes\", \"without-password\", \"prohibit-password\", \"forced-commands-only\", \"no\""},"services.openssh.ports":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":[22],"description":"Specifies on which ports the SSH daemon listens.\n","readOnly":false,"type":"list of integers"},"services.openssh.startWhenNeeded":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":false,"description":"If set, <command>sshd</command> is socket-activated; that\nis, instead of having it permanently running as a daemon,\nsystemd will start an instance for each incoming connection.\n","readOnly":false,"type":"boolean"},"services.opentracker.enable":{"declarations":["nixos/modules/services/torrent/opentracker.nix"],"default":false,"description":"Whether to enable opentracker.","example":true,"readOnly":false,"type":"boolean"},"services.opentracker.extraOptions":{"declarations":["nixos/modules/services/torrent/opentracker.nix"],"default":"","description":"Configuration Arguments for opentracker\nSee https://erdgeist.org/arts/software/opentracker/ for all params\n","readOnly":false,"type":"string"},"services.opentracker.package":{"declarations":["nixos/modules/services/torrent/opentracker.nix"],"default":"pkgs.opentracker","description":"opentracker package to use\n","readOnly":false,"type":"package"},"services.opentsdb.config":{"declarations":["nixos/modules/services/databases/opentsdb.nix"],"default":"tsd.core.auto_create_metrics = true\ntsd.http.request.enable_chunked  = true\n","description":"The contents of OpenTSDB's configuration file\n","readOnly":false,"type":"string"},"services.opentsdb.enable":{"declarations":["nixos/modules/services/databases/opentsdb.nix"],"default":false,"description":"Whether to run OpenTSDB.\n","readOnly":false,"type":"boolean"},"services.opentsdb.group":{"declarations":["nixos/modules/services/databases/opentsdb.nix"],"default":"opentsdb","description":"Group account under which OpenTSDB runs.\n","readOnly":false,"type":"string"},"services.opentsdb.package":{"declarations":["nixos/modules/services/databases/opentsdb.nix"],"default":"pkgs.opentsdb","description":"OpenTSDB package to use.\n","example":{"_type":"literalExample","text":"pkgs.opentsdb"},"readOnly":false,"type":"package"},"services.opentsdb.port":{"declarations":["nixos/modules/services/databases/opentsdb.nix"],"default":4242,"description":"Which port OpenTSDB listens on.\n","readOnly":false,"type":"integer"},"services.opentsdb.user":{"declarations":["nixos/modules/services/databases/opentsdb.nix"],"default":"opentsdb","description":"User account under which OpenTSDB runs.\n","readOnly":false,"type":"string"},"services.openvpn.servers":{"declarations":["nixos/modules/services/networking/openvpn.nix"],"default":{},"description":"Each attribute of this option defines a systemd service that\nruns an OpenVPN instance.  These can be OpenVPN servers or\nclients.  The name of each systemd service is\n<literal>openvpn-<replaceable>name</replaceable>.service</literal>,\nwhere <replaceable>name</replaceable> is the corresponding\nattribute name.\n","example":{"_type":"literalExample","text":"{\n  server = {\n    config = ''\n      # Simplest server configuration: http://openvpn.net/index.php/documentation/miscellaneous/static-key-mini-howto.html.\n      # server :\n      dev tun\n      ifconfig 10.8.0.1 10.8.0.2\n      secret /root/static.key\n    '';\n    up = \"ip route add ...\";\n    down = \"ip route del ...\";\n  };\n\n  client = {\n    config = ''\n      client\n      remote vpn.example.org\n      dev tun\n      proto tcp-client\n      port 8080\n      ca /root/.vpn/ca.crt\n      cert /root/.vpn/alice.crt\n      key /root/.vpn/alice.key\n    '';\n    up = \"echo nameserver $nameserver | ${pkgs.openresolv}/sbin/resolvconf -m 0 -a $dev\";\n    down = \"${pkgs.openresolv}/sbin/resolvconf -d $dev\";\n  };\n}\n"},"readOnly":false,"type":"attribute set of submodules"},"services.openvpn.servers.<name>.autoStart":{"declarations":["nixos/modules/services/networking/openvpn.nix"],"default":true,"description":"Whether this OpenVPN instance should be started automatically.","readOnly":false,"type":"boolean"},"services.openvpn.servers.<name>.config":{"declarations":["nixos/modules/services/networking/openvpn.nix"],"description":"Configuration of this OpenVPN instance.  See\n<citerefentry><refentrytitle>openvpn</refentrytitle><manvolnum>8</manvolnum></citerefentry>\nfor details.\n","readOnly":false,"type":"string"},"services.openvpn.servers.<name>.down":{"declarations":["nixos/modules/services/networking/openvpn.nix"],"default":"","description":"Shell commands executed when the instance is shutting down.\n","readOnly":false,"type":"string"},"services.openvpn.servers.<name>.up":{"declarations":["nixos/modules/services/networking/openvpn.nix"],"default":"","description":"Shell commands executed when the instance is starting.\n","readOnly":false,"type":"string"},"services.openvpn.servers.<name>.updateResolvConf":{"declarations":["nixos/modules/services/networking/openvpn.nix"],"default":false,"description":"Use the script from the update-resolv-conf package to automatically\nupdate resolv.conf with the DNS information provided by openvpn. The\nscript will be run after the \"up\" commands and before the \"down\" commands.\n","readOnly":false,"type":"boolean"},"services.ostinato.enable":{"declarations":["nixos/modules/services/networking/ostinato.nix"],"default":false,"description":"Whether to enable Ostinato agent-controller (Drone).","example":true,"readOnly":false,"type":"boolean"},"services.ostinato.port":{"declarations":["nixos/modules/services/networking/ostinato.nix"],"default":7878,"description":"Port to listen on.\n","readOnly":false,"type":"integer"},"services.ostinato.portList.exclude":{"declarations":["nixos/modules/services/networking/ostinato.nix"],"default":[],"description":"A list of ports does not appear on the port list managed by drone.\n","example":"[ \"usbmon*\" \"eth0\" ]","readOnly":false,"type":"list of strings"},"services.ostinato.portList.include":{"declarations":["nixos/modules/services/networking/ostinato.nix"],"default":[],"description":"For a port to pass the filter and appear on the port list managed\nby drone, it be allowed by this include list.\n","example":"[ \"eth*\" \"lo*\" ]","readOnly":false,"type":"list of strings"},"services.ostinato.rateAccuracy":{"declarations":["nixos/modules/services/networking/ostinato.nix"],"default":"High","description":"To ensure that the actual transmit rate is as close as possible to\nthe configured transmit rate, Drone runs a busy-wait loop.\nWhile this provides the maximum accuracy possible, the CPU\nutilization is 100% while the transmit is on. You can however,\nsacrifice the accuracy to reduce the CPU load.\n","readOnly":false,"type":"one of \"High\", \"Low\""},"services.ostinato.rpcServer.address":{"declarations":["nixos/modules/services/networking/ostinato.nix"],"default":"0.0.0.0","description":"By default, the Drone RPC server will listen on all interfaces and\nlocal IPv4 adresses for incoming connections from clients.  Specify\na single IPv4 or IPv6 address if you want to restrict that.\nTo listen on any IPv6 address, use ::\n","readOnly":false,"type":"string"},"services.packagekit.enable":{"declarations":["nixos/modules/services/misc/packagekit.nix"],"default":false,"description":"Whether to enable PackageKit provides a cross-platform D-Bus abstraction layer for\ninstalling software. Software utilizing PackageKit can install\nsoftware regardless of the package manager.\n.","example":true,"readOnly":false,"type":"boolean"},"services.panamax.APIPort":{"declarations":["nixos/modules/services/cluster/panamax.nix"],"default":3000,"description":"Panamax UI listening port.\n","readOnly":false,"type":"integer"},"services.panamax.UIPort":{"declarations":["nixos/modules/services/cluster/panamax.nix"],"default":8888,"description":"Panamax UI listening port.\n","readOnly":false,"type":"integer"},"services.panamax.dataDir":{"declarations":["nixos/modules/services/cluster/panamax.nix"],"default":"/var/lib/panamax","description":"Data dir for Panamax.\n","readOnly":false,"type":"string"},"services.panamax.enable":{"declarations":["nixos/modules/services/cluster/panamax.nix"],"default":false,"description":"Whether to enable Panamax service.\n","readOnly":false,"type":"boolean"},"services.panamax.fleetctlEndpoint":{"declarations":["nixos/modules/services/cluster/panamax.nix"],"default":"http://127.0.0.1:2379","description":"Panamax fleetctl endpoint.\n","readOnly":false,"type":"string"},"services.panamax.journalEndpoint":{"declarations":["nixos/modules/services/cluster/panamax.nix"],"default":"http://127.0.0.1:19531","description":"Panamax journal endpoint.\n","readOnly":false,"type":"string"},"services.panamax.secretKey":{"declarations":["nixos/modules/services/cluster/panamax.nix"],"default":"SomethingVeryLong.","description":"Panamax secret key (do change this).\n","readOnly":false,"type":"string"},"services.parsoid.enable":{"declarations":["nixos/modules/services/misc/parsoid.nix"],"default":false,"description":"Whether to enable Parsoid -- bidirectional\nwikitext parser.\n","readOnly":false,"type":"boolean"},"services.parsoid.extraConfig":{"declarations":["nixos/modules/services/misc/parsoid.nix"],"default":{},"description":"Extra configuration to add to parsoid configuration.\n","readOnly":false,"type":"attribute set"},"services.parsoid.interface":{"declarations":["nixos/modules/services/misc/parsoid.nix"],"default":"127.0.0.1","description":"Interface to listen on.\n","readOnly":false,"type":"string"},"services.parsoid.port":{"declarations":["nixos/modules/services/misc/parsoid.nix"],"default":8000,"description":"Port to listen on.\n","readOnly":false,"type":"integer"},"services.parsoid.wikis":{"declarations":["nixos/modules/services/misc/parsoid.nix"],"description":"Used MediaWiki API endpoints.\n","example":["http://localhost/api.php"],"readOnly":false,"type":"list of string or attribute sets"},"services.parsoid.workers":{"declarations":["nixos/modules/services/misc/parsoid.nix"],"default":2,"description":"Number of Parsoid workers.\n","readOnly":false,"type":"integer"},"services.pcscd.enable":{"declarations":["nixos/modules/services/hardware/pcscd.nix"],"default":false,"description":"Whether to enable PCSC-Lite daemon.","example":true,"readOnly":false,"type":"boolean"},"services.pcscd.plugins":{"declarations":["nixos/modules/services/hardware/pcscd.nix"],"default":"[ pkgs.ccid ]","description":"Plugin packages to be used for PCSC-Lite.","example":{"_type":"literalExample","text":"[ pkgs.pcsc-cyberjack ]"},"readOnly":false,"type":"list of packages"},"services.pcscd.readerConfig":{"declarations":["nixos/modules/services/hardware/pcscd.nix"],"default":"","description":"Configuration for devices that aren't hotpluggable.\n\nSee <citerefentry><refentrytitle>reader.conf</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for valid options.\n","example":"FRIENDLYNAME      \"Some serial reader\"\nDEVICENAME        /dev/ttyS0\nLIBPATH           /path/to/serial_reader.so\nCHANNELID         1\n","readOnly":false,"type":"string"},"services.pdnsd.cacheDir":{"declarations":["nixos/modules/services/networking/pdnsd.nix"],"default":"/var/cache/pdnsd","description":"Directory holding the pdnsd cache","readOnly":false,"type":"string"},"services.pdnsd.enable":{"declarations":["nixos/modules/services/networking/pdnsd.nix"],"default":false,"description":"Whether to enable pdnsd.","example":true,"readOnly":false,"type":"boolean"},"services.pdnsd.extraConfig":{"declarations":["nixos/modules/services/networking/pdnsd.nix"],"default":"","description":"Extra configuration directives that should be added to\n<literal>pdnsd.conf</literal>.\n","readOnly":false,"type":"string"},"services.pdnsd.globalConfig":{"declarations":["nixos/modules/services/networking/pdnsd.nix"],"default":"","description":"Global configuration that should be added to the global directory\nof <literal>pdnsd.conf</literal>.\n","readOnly":false,"type":"string"},"services.pdnsd.serverConfig":{"declarations":["nixos/modules/services/networking/pdnsd.nix"],"default":"","description":"Server configuration that should be added to the server directory\nof <literal>pdnsd.conf</literal>.\n","readOnly":false,"type":"string"},"services.peerflix.downloadDir":{"declarations":["nixos/modules/services/torrent/peerflix.nix"],"default":"/var/lib/peerflix/torrents","description":"Peerflix temporary download directory.","readOnly":false,"type":"path"},"services.peerflix.enable":{"declarations":["nixos/modules/services/torrent/peerflix.nix"],"default":false,"description":"Whether to enable peerflix service.","readOnly":false,"type":"boolean"},"services.peerflix.stateDir":{"declarations":["nixos/modules/services/torrent/peerflix.nix"],"default":"/var/lib/peerflix","description":"Peerflix state directory.","readOnly":false,"type":"path"},"services.phd.enable":{"declarations":["nixos/modules/services/misc/phd.nix"],"default":false,"description":"\n          Enable daemons for phabricator.\n        ","readOnly":false,"type":"unspecified"},"services.phpfpm.extraConfig":{"declarations":["nixos/modules/services/web-servers/phpfpm/default.nix"],"default":"","description":"Extra configuration that should be put in the global section of\nthe PHP-FPM configuration file. Do not specify the options\n<literal>error_log</literal> or\n<literal>daemonize</literal> here, since they are generated by\nNixOS.\n","readOnly":false,"type":"string"},"services.phpfpm.phpOptions":{"declarations":["nixos/modules/services/web-servers/phpfpm/default.nix"],"default":"","description":"Options appended to the PHP configuration file <filename>php.ini</filename>.","example":"date.timezone = \"CET\"\n","readOnly":false,"type":"string"},"services.phpfpm.phpPackage":{"declarations":["nixos/modules/services/web-servers/phpfpm/default.nix"],"default":"pkgs.php","description":"The PHP package to use for running the PHP-FPM service.\n","readOnly":false,"type":"package"},"services.phpfpm.poolConfigs":{"declarations":["nixos/modules/services/web-servers/phpfpm/default.nix"],"default":{},"description":"A mapping between PHP-FPM pool names and their configurations.\nSee the documentation on <literal>php-fpm.conf</literal> for\ndetails on configuration directives. If no pools are defined,\nthe phpfpm service is disabled.\n","example":{"_type":"literalExample","text":"{ mypool = ''\n    listen = /run/phpfpm/mypool\n    user = nobody\n    pm = dynamic\n    pm.max_children = 75\n    pm.start_servers = 10\n    pm.min_spare_servers = 5\n    pm.max_spare_servers = 20\n    pm.max_requests = 500\n  '';\n}\n"},"readOnly":false,"type":"attribute set of strings"},"services.phpfpm.pools":{"declarations":["nixos/modules/services/web-servers/phpfpm/default.nix"],"default":{},"description":"PHP-FPM pools. If no pools or poolConfigs are defined, the PHP-FPM\nservice is disabled.\n","example":{"_type":"literalExample","text":"{\n  mypool = {\n    listen = \"/path/to/unix/socket\";\n    extraConfig = ''\n      user = nobody\n      pm = dynamic\n      pm.max_children = 75\n      pm.start_servers = 10\n      pm.min_spare_servers = 5\n      pm.max_spare_servers = 20\n      pm.max_requests = 500\n    '';\n  }\n}"},"readOnly":false,"type":"attribute set of submodules"},"services.phpfpm.pools.<name>.extraConfig":{"declarations":["nixos/modules/services/web-servers/phpfpm/default.nix"],"description":"Extra lines that go into the pool configuration.\nSee the documentation on <literal>php-fpm.conf</literal> for\ndetails on configuration directives.\n","example":"user = nobody\npm = dynamic\npm.max_children = 75\npm.start_servers = 10\npm.min_spare_servers = 5\npm.max_spare_servers = 20\npm.max_requests = 500\n","readOnly":false,"type":"string"},"services.phpfpm.pools.<name>.listen":{"declarations":["nixos/modules/services/web-servers/phpfpm/default.nix"],"description":"The address on which to accept FastCGI requests.\n","example":"/path/to/unix/socket","readOnly":false,"type":"string"},"services.physlock.disableSysRq":{"declarations":["nixos/modules/services/security/physlock.nix"],"default":true,"description":"Whether to disable SysRq when locked with physlock.\n","readOnly":false,"type":"boolean"},"services.physlock.enable":{"declarations":["nixos/modules/services/security/physlock.nix"],"default":false,"description":"Whether to enable the <command>physlock</command> screen locking mechanism.\n\nEnable this and then run <command>systemctl start physlock</command>\nto securely lock the screen.\n\nThis will switch to a new virtual terminal, turn off console\nswitching and disable SysRq mechanism (when\n<option>services.physlock.disableSysRq</option> is set)\nuntil the root or <option>services.physlock.user</option>\npassword is given.\n","readOnly":false,"type":"boolean"},"services.physlock.lockOn.extraTargets":{"declarations":["nixos/modules/services/security/physlock.nix"],"default":[],"description":"Other targets to lock the screen just before.\n\nUseful if you want to e.g. both autologin to X11 so that\nyour <filename>~/.xsession</filename> gets executed and\nstill to have the screen locked so that the system can be\nbooted relatively unattended.\n","example":["display-manager.service"],"readOnly":false,"type":"list of strings"},"services.physlock.lockOn.hibernate":{"declarations":["nixos/modules/services/security/physlock.nix"],"default":true,"description":"Whether to lock screen with physlock just before hibernate.\n","readOnly":false,"type":"boolean"},"services.physlock.lockOn.suspend":{"declarations":["nixos/modules/services/security/physlock.nix"],"default":true,"description":"Whether to lock screen with physlock just before suspend.\n","readOnly":false,"type":"boolean"},"services.physlock.user":{"declarations":["nixos/modules/services/security/physlock.nix"],"default":null,"description":"User whose password will be used to unlock the screen on par\nwith the root password.\n","readOnly":false,"type":"null or string"},"services.plex.dataDir":{"declarations":["nixos/modules/services/misc/plex.nix"],"default":"/var/lib/plex","description":"The directory where Plex stores its data files.","readOnly":false,"type":"string"},"services.plex.enable":{"declarations":["nixos/modules/services/misc/plex.nix"],"default":false,"description":"Whether to enable Plex Media Server.","example":true,"readOnly":false,"type":"boolean"},"services.plex.extraPlugins":{"declarations":["nixos/modules/services/misc/plex.nix"],"default":[],"description":"A list of paths to extra plugin bundles to install in Plex's plugin\ndirectory. Every time the systemd unit for Plex starts up, all of the\nsymlinks in Plex's plugin directory will be cleared and this module\nwill symlink all of the paths specified here to that directory. If\nthis behavior is undesired, set <option>managePlugins</option> to\nfalse.\n","readOnly":false,"type":"list of paths"},"services.plex.group":{"declarations":["nixos/modules/services/misc/plex.nix"],"default":"plex","description":"Group under which Plex runs.","readOnly":false,"type":"string"},"services.plex.managePlugins":{"declarations":["nixos/modules/services/misc/plex.nix"],"default":true,"description":"If set to true, this option will cause all of the symlinks in Plex's\nplugin directory to be removed and symlinks for paths specified in\n<option>extraPlugins</option> to be added.\n","readOnly":false,"type":"boolean"},"services.plex.package":{"declarations":["nixos/modules/services/misc/plex.nix"],"default":"pkgs.plex","description":"The Plex package to use. Plex subscribers may wish to use their own\npackage here, pointing to subscriber-only server versions.\n","readOnly":false,"type":"package"},"services.plex.user":{"declarations":["nixos/modules/services/misc/plex.nix"],"default":"plex","description":"User account under which Plex runs.","readOnly":false,"type":"string"},"services.polipo.allowedClients":{"declarations":["nixos/modules/services/networking/polipo.nix"],"default":["127.0.0.1","::1"],"description":"List of IP addresses or network addresses that may connect to Polipo.\n","example":["127.0.0.1","::1","134.157.168.0/24","2001:660:116::/48"],"readOnly":false,"type":"list of strings"},"services.polipo.enable":{"declarations":["nixos/modules/services/networking/polipo.nix"],"default":false,"description":"Whether to run the polipo caching web proxy.","readOnly":false,"type":"boolean"},"services.polipo.extraConfig":{"declarations":["nixos/modules/services/networking/polipo.nix"],"default":"","description":"Polio configuration. Contents will be added \nverbatim to the configuration file.\n","readOnly":false,"type":"string"},"services.polipo.parentProxy":{"declarations":["nixos/modules/services/networking/polipo.nix"],"default":"","description":"Hostname and port number of an HTTP parent proxy;\nit should have the form ‘host:port’.\n","example":"localhost:8124","readOnly":false,"type":"string"},"services.polipo.proxyAddress":{"declarations":["nixos/modules/services/networking/polipo.nix"],"default":"127.0.0.1","description":"IP address on which Polipo will listen.","readOnly":false,"type":"string"},"services.polipo.proxyPort":{"declarations":["nixos/modules/services/networking/polipo.nix"],"default":8123,"description":"TCP port on which Polipo will listen.","readOnly":false,"type":"integer"},"services.polipo.socksParentProxy":{"declarations":["nixos/modules/services/networking/polipo.nix"],"default":"","description":"Hostname and port number of an SOCKS parent proxy;\nit should have the form ‘host:port’.\n","example":"localhost:9050","readOnly":false,"type":"string"},"services.postfix.aliasFiles":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":{},"description":"Aliases' tables to be compiled and placed into /var/lib/postfix/conf.","readOnly":false,"type":"attribute set of paths"},"services.postfix.destination":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":null,"description":"\n          Full (!) list of domains we deliver locally. Leave blank for\n          acceptable Postfix default.\n        ","example":["localhost"],"readOnly":false,"type":"null or list of strings"},"services.postfix.dnsBlacklistOverrides":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"contents of check_client_access for overriding dnsBlacklists","readOnly":false,"type":"unspecified"},"services.postfix.dnsBlacklists":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":[],"description":"dns blacklist servers to use with smtpd_client_restrictions","readOnly":false,"type":"list of strings"},"services.postfix.domain":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Domain to use. Leave blank to use hostname minus first component.\n        ","readOnly":false,"type":"string"},"services.postfix.enable":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":false,"description":"Whether to run the Postfix mail server.","readOnly":false,"type":"boolean"},"services.postfix.enableSmtp":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":true,"description":"Whether to enable smtp in master.cf.","readOnly":false,"type":"unspecified"},"services.postfix.enableSubmission":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":false,"description":"Whether to enable smtp submission","readOnly":false,"type":"boolean"},"services.postfix.extraAliases":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Additional entries to put verbatim into aliases file, cf. man-page aliases(8).\n        ","readOnly":false,"type":"string"},"services.postfix.extraConfig":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Extra lines to be added verbatim to the main.cf configuration file.\n        ","readOnly":false,"type":"string"},"services.postfix.extraMasterConf":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"Extra lines to append to the generated master.cf file.","example":"submission inet n - n - - smtpd","readOnly":false,"type":"string"},"services.postfix.group":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"postfix","description":"What to call the Postfix group (must be used only for postfix).","readOnly":false,"type":"string"},"services.postfix.hostname":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Hostname to use. Leave blank to use just the hostname of machine.\n          It should be FQDN.\n        ","readOnly":false,"type":"string"},"services.postfix.lookupMX":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":false,"description":"\n          Whether relay specified is just domain whose MX must be used.\n        ","readOnly":false,"type":"boolean"},"services.postfix.mapFiles":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":{},"description":"Maps to be compiled and placed into /var/lib/postfix/conf.","readOnly":false,"type":"attribute set of paths"},"services.postfix.networks":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":null,"description":"\n          Net masks for trusted - allowed to relay mail to third parties -\n          hosts. Leave empty to use mynetworks_style configuration or use\n          default (localhost-only).\n        ","example":["192.168.0.1/24"],"readOnly":false,"type":"null or list of strings"},"services.postfix.networksStyle":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Name of standard way of trusted network specification to use,\n          leave blank if you specify it explicitly or if you want to use\n          default (localhost-only).\n        ","readOnly":false,"type":"string"},"services.postfix.origin":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Origin to use in outgoing e-mail. Leave blank to use hostname.\n        ","readOnly":false,"type":"string"},"services.postfix.postmasterAlias":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"root","description":"Who should receive postmaster e-mail.","readOnly":false,"type":"string"},"services.postfix.recipientDelimiter":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Delimiter for address extension: so mail to user+test can be handled by ~user/.forward+test\n        ","example":"+","readOnly":false,"type":"string"},"services.postfix.relayDomains":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":null,"description":"\n          List of domains we agree to relay to. Default is empty.\n        ","example":["localdomain"],"readOnly":false,"type":"null or list of strings"},"services.postfix.relayHost":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Mail relay for outbound mail.\n        ","readOnly":false,"type":"string"},"services.postfix.rootAlias":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Who should receive root e-mail. Blank for no redirection.\n        ","readOnly":false,"type":"string"},"services.postfix.setSendmail":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":true,"description":"Whether to set the system sendmail to postfix's.","readOnly":false,"type":"boolean"},"services.postfix.setgidGroup":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"postdrop","description":"\n          How to call postfix setgid group (for postdrop). Should\n          be uniquely used group.\n        ","readOnly":false,"type":"string"},"services.postfix.sslCACert":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"SSL certificate of CA.","readOnly":false,"type":"string"},"services.postfix.sslCert":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"SSL certificate to use.","readOnly":false,"type":"string"},"services.postfix.sslKey":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"SSL key to use.","readOnly":false,"type":"string"},"services.postfix.submissionOptions":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":{"milter_macro_daemon_name":"ORIGINATING","smtpd_client_restrictions":"permit_sasl_authenticated,reject","smtpd_sasl_auth_enable":"yes","smtpd_tls_security_level":"encrypt"},"description":"Options for the submission config in master.cf","example":{"milter_macro_daemon_name":"ORIGINATING","smtpd_client_restrictions":"permit_sasl_authenticated,reject","smtpd_sasl_auth_enable":"yes","smtpd_sasl_type":"dovecot","smtpd_tls_security_level":"encrypt"},"readOnly":false,"type":"attribute set"},"services.postfix.transport":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Entries for the transport map, cf. man-page transport(8).\n        ","readOnly":false,"type":"unspecified"},"services.postfix.user":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"postfix","description":"What to call the Postfix user (must be used only for postfix).","readOnly":false,"type":"string"},"services.postfix.virtual":{"declarations":["nixos/modules/services/mail/postfix.nix"],"default":"","description":"\n          Entries for the virtual alias map, cf. man-page virtual(8).\n        ","readOnly":false,"type":"string"},"services.postgresql.authentication":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Defines how users authenticate themselves to the server. By\ndefault, \"trust\" access to local users will always be granted\nalong with any other custom options. If you do not want this,\nset this option using \"lib.mkForce\" to override this\nbehaviour.\n","readOnly":false,"type":"string"},"services.postgresql.dataDir":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"/var/db/postgresql","description":"Data directory for PostgreSQL.\n","readOnly":false,"type":"path"},"services.postgresql.enable":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":false,"description":"Whether to run PostgreSQL.\n","readOnly":false,"type":"boolean"},"services.postgresql.enableTCPIP":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":false,"description":"Whether PostgreSQL should listen on all network interfaces.\nIf disabled, the database can only be accessed via its Unix\ndomain socket or via TCP connections to localhost.\n","readOnly":false,"type":"boolean"},"services.postgresql.extraConfig":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Additional text to be appended to <filename>postgresql.conf</filename>.","readOnly":false,"type":"string"},"services.postgresql.extraPlugins":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":[],"description":"When this list contains elements a new store path is created.\nPostgreSQL and the elements are symlinked into it. Then pg_config,\npostgres and pg_ctl are copied to make them use the new\n$out/lib directory as pkglibdir. This makes it possible to use postgis\nwithout patching the .sql files which reference $libdir/postgis-1.5.\n","example":{"_type":"literalExample","text":"[ (pkgs.postgis.override { postgresql = pkgs.postgresql94; }).v_2_1_4 ]"},"readOnly":false,"type":"list of paths"},"services.postgresql.identMap":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":"","description":"Defines the mapping from system users to database users.\n","readOnly":false,"type":"string"},"services.postgresql.initialScript":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":null,"description":"A file containing SQL statements to execute on first startup.\n","readOnly":false,"type":"null or path"},"services.postgresql.package":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"description":"PostgreSQL package to use.\n","example":{"_type":"literalExample","text":"pkgs.postgresql92"},"readOnly":false,"type":"package"},"services.postgresql.port":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":5432,"description":"The port on which PostgreSQL listens.\n","readOnly":false,"type":"integer"},"services.postgresql.recoveryConfig":{"declarations":["nixos/modules/services/databases/postgresql.nix"],"default":null,"description":"Contents of the <filename>recovery.conf</filename> file.\n","readOnly":false,"type":"null or string"},"services.postgresqlBackup.databases":{"declarations":["nixos/modules/services/backup/postgresql-backup.nix"],"default":[],"description":"List of database names to dump.\n","readOnly":false,"type":"unspecified"},"services.postgresqlBackup.enable":{"declarations":["nixos/modules/services/backup/postgresql-backup.nix"],"default":false,"description":"Whether to enable PostgreSQL dumps.\n","readOnly":false,"type":"unspecified"},"services.postgresqlBackup.location":{"declarations":["nixos/modules/services/backup/postgresql-backup.nix"],"default":"/var/backup/postgresql","description":"Location to put the gzipped PostgreSQL database dumps.\n","readOnly":false,"type":"unspecified"},"services.postgresqlBackup.period":{"declarations":["nixos/modules/services/backup/postgresql-backup.nix"],"default":"15 01 * * *","description":"This option defines (in the format used by cron) when the\ndatabases should be dumped.\nThe default is to update at 01:15 (at night) every day.\n","readOnly":false,"type":"unspecified"},"services.postgrey.enable":{"declarations":["nixos/modules/services/mail/postgrey.nix"],"default":false,"description":"Whether to run the Postgrey daemon","readOnly":false,"type":"boolean"},"services.postgrey.greylistText":{"declarations":["nixos/modules/services/mail/postgrey.nix"],"default":"Greylisted for %%s seconds","description":"Response status text for greylisted messages","readOnly":false,"type":"string"},"services.postgrey.inetAddr":{"declarations":["nixos/modules/services/mail/postgrey.nix"],"default":null,"description":"The inet address to bind to. If none given, bind to /var/run/postgrey.sock","example":"127.0.0.1","readOnly":false,"type":"null or string"},"services.postgrey.inetPort":{"declarations":["nixos/modules/services/mail/postgrey.nix"],"default":10030,"description":"The tcp port to bind to","readOnly":false,"type":"integer"},"services.postsrsd.domain":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"description":"Domain name for rewrite","readOnly":false,"type":"string"},"services.postsrsd.enable":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"default":false,"description":"Whether to enable the postsrsd SRS server for Postfix.","readOnly":false,"type":"boolean"},"services.postsrsd.excludeDomains":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"default":[],"description":"Origin domains to exclude from rewriting in addition to primary domain","readOnly":false,"type":"list of strings"},"services.postsrsd.forwardPort":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"default":10001,"description":"Port for the forward SRS lookup","readOnly":false,"type":"integer"},"services.postsrsd.group":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"default":"postsrsd","description":"Group for the daemon","readOnly":false,"type":"string"},"services.postsrsd.reversePort":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"default":10002,"description":"Port for the reverse SRS lookup","readOnly":false,"type":"integer"},"services.postsrsd.secretsFile":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"default":"/var/lib/postsrsd/postsrsd.secret","description":"Secret keys used for signing and verification","readOnly":false,"type":"path"},"services.postsrsd.separator":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"default":"=","description":"First separator character in generated addresses","readOnly":false,"type":"one of \"-\", \"=\", \"+\""},"services.postsrsd.timeout":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"default":1800,"description":"Timeout for idle client connections in seconds","readOnly":false,"type":"integer"},"services.postsrsd.user":{"declarations":["nixos/modules/services/mail/postsrsd.nix"],"default":"postsrsd","description":"User for the daemon","readOnly":false,"type":"string"},"services.powerdns.enable":{"declarations":["nixos/modules/services/networking/powerdns.nix"],"default":false,"description":"Whether to enable Powerdns domain name server.","example":true,"readOnly":false,"type":"boolean"},"services.powerdns.extraConfig":{"declarations":["nixos/modules/services/networking/powerdns.nix"],"default":"launch=bind","description":"Extra lines to be added verbatim to pdns.conf.\nPowerdns will chroot to /var/lib/powerdns.\nSo any file, powerdns is supposed to be read,\nshould be in /var/lib/powerdns and needs to specified\nrelative to the chroot.\n","readOnly":false,"type":"string"},"services.pptpd.clientIpRange":{"declarations":["nixos/modules/services/networking/pptpd.nix"],"default":"10.124.124.2-11","description":"The range from which client IPs are drawn.","readOnly":false,"type":"string"},"services.pptpd.enable":{"declarations":["nixos/modules/services/networking/pptpd.nix"],"default":false,"description":"Whether to enable Whether pptpd should be run on startup..","example":true,"readOnly":false,"type":"boolean"},"services.pptpd.extraPppdOptions":{"declarations":["nixos/modules/services/networking/pptpd.nix"],"default":"","description":"Adds extra lines to the pppd options file.","example":"ms-dns 8.8.8.8\nms-dns 8.8.4.4\n","readOnly":false,"type":"string"},"services.pptpd.extraPptpdOptions":{"declarations":["nixos/modules/services/networking/pptpd.nix"],"default":"","description":"Adds extra lines to the pptpd configuration file.","readOnly":false,"type":"string"},"services.pptpd.maxClients":{"declarations":["nixos/modules/services/networking/pptpd.nix"],"default":10,"description":"The maximum number of simultaneous connections.","readOnly":false,"type":"integer"},"services.pptpd.serverIp":{"declarations":["nixos/modules/services/networking/pptpd.nix"],"default":"10.124.124.1","description":"The server-side IP address.","readOnly":false,"type":"string"},"services.prayer.enable":{"declarations":["nixos/modules/services/networking/prayer.nix"],"default":false,"description":"Whether to run the prayer webmail http server.\n","readOnly":false,"type":"unspecified"},"services.prayer.extraConfig":{"declarations":["nixos/modules/services/networking/prayer.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the configuration file.\n","readOnly":false,"type":"string"},"services.prayer.port":{"declarations":["nixos/modules/services/networking/prayer.nix"],"default":"2080","description":"Port the prayer http server is listening to.\n","readOnly":false,"type":"unspecified"},"services.prey.apiKey":{"declarations":["nixos/modules/security/prey.nix"],"description":"<literal>API key</literal> obtained from\n<link xlink:href=\"https://panel.preyproject.com/profile\" />.\n","readOnly":false,"type":"string"},"services.prey.deviceKey":{"declarations":["nixos/modules/security/prey.nix"],"description":"<literal>Device key</literal> obtained by visiting\n<link xlink:href=\"https://panel.preyproject.com/devices\" />\nand clicking on your device.\n","readOnly":false,"type":"string"},"services.prey.enable":{"declarations":["nixos/modules/security/prey.nix"],"default":false,"description":"Enables the <link xlink:href=\"http://preyproject.com/\" />\nshell client. Be sure to specify both API and device keys.\nOnce enabled, a <command>cron</command> job will run every 15\nminutes to report status information.\n","readOnly":false,"type":"boolean"},"services.printing.browsedConf":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"","description":"The contents of the configuration. file of the CUPS Browsed daemon\n(<filename>cups-browsed.conf</filename>)\n","example":"BrowsePoll cups.example.com\n","readOnly":false,"type":"string"},"services.printing.browsing":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":false,"description":"Specifies whether shared printers are advertised.\n","readOnly":false,"type":"boolean"},"services.printing.clientConf":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"","description":"The contents of the client configuration.\n(<filename>client.conf</filename>)\n","example":"ServerName server.example.com\nEncryption Never\n","readOnly":false,"type":"string"},"services.printing.defaultShared":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":false,"description":"Specifies whether local printers are shared by default.\n","readOnly":false,"type":"boolean"},"services.printing.drivers":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":[],"description":"CUPS drivers to use. Drivers provided by CUPS, cups-filters, Ghostscript\nand Samba are added unconditionally. For adding Gutenprint, see\n<literal>gutenprint</literal>.\n","example":{"_type":"literalExample","text":"[ pkgs.splix ]"},"readOnly":false,"type":"list of paths"},"services.printing.enable":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":false,"description":"Whether to enable printing support through the CUPS daemon.\n","readOnly":false,"type":"boolean"},"services.printing.extraConf":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"","description":"Extra contents of the configuration file of the CUPS daemon\n(<filename>cupsd.conf</filename>).\n","example":"BrowsePoll cups.example.com\nLogLevel debug\n","readOnly":false,"type":"string"},"services.printing.extraFilesConf":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"","description":"Extra contents of the configuration file of the CUPS daemon\n(<filename>cups-files.conf</filename>).\n","readOnly":false,"type":"string"},"services.printing.gutenprint":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":false,"description":"Whether to enable Gutenprint drivers for CUPS. This includes auto-updating\nGutenprint PPD files.\n","readOnly":false,"type":"boolean"},"services.printing.listenAddresses":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":["127.0.0.1:631"],"description":"A list of addresses and ports on which to listen.\n","example":["*:631"],"readOnly":false,"type":"list of strings"},"services.printing.snmpConf":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"Address @LOCAL\n","description":"The contents of <filename>/etc/cups/snmp.conf</filename>. See \"man\ncups-snmp.conf\" for a complete description.\n","readOnly":false,"type":"string"},"services.printing.tempDir":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":"/tmp","description":"CUPSd temporary directory.\n","example":"/tmp/cups","readOnly":false,"type":"path"},"services.printing.webInterface":{"declarations":["nixos/modules/services/printing/cupsd.nix"],"default":true,"description":"Specifies whether the web interface is enabled.\n","readOnly":false,"type":"boolean"},"services.privoxy.actionsFiles":{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":["match-all.action","default.action"],"description":"List of paths to Privoxy action files.\nThese paths may either be absolute or relative to the privoxy configuration directory.\n","example":["match-all.action","default.action","/etc/privoxy/user.action"],"readOnly":false,"type":"list of strings"},"services.privoxy.enable":{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":false,"description":"Whether to enable the Privoxy non-caching filtering proxy.\n","readOnly":false,"type":"boolean"},"services.privoxy.enableEditActions":{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":false,"description":"Whether or not the web-based actions file editor may be used.\n","readOnly":false,"type":"boolean"},"services.privoxy.extraConfig":{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the configuration file.\n","readOnly":false,"type":"string"},"services.privoxy.filterFiles":{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":["default.filter"],"description":"List of paths to Privoxy filter files.\nThese paths may either be absolute or relative to the privoxy configuration directory.\n","example":["default.filter","/etc/privoxy/user.filter"],"readOnly":false,"type":"list of strings"},"services.privoxy.listenAddress":{"declarations":["nixos/modules/services/networking/privoxy.nix"],"default":"127.0.0.1:8118","description":"Address the proxy server is listening to.\n","readOnly":false,"type":"string"},"services.prometheus.alertmanager.configuration":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":{},"description":"Alertmanager configuration as nix attribute set.\n","readOnly":false,"type":"attribute set"},"services.prometheus.alertmanager.enable":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":false,"description":"Whether to enable Prometheus Alertmanager.","example":true,"readOnly":false,"type":"boolean"},"services.prometheus.alertmanager.group":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":"nogroup","description":"Group under which Alertmanager shall be run.\n","readOnly":false,"type":"string"},"services.prometheus.alertmanager.listenAddress":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":null,"description":"Address to listen on for the web interface and API.\n","readOnly":false,"type":"null or string"},"services.prometheus.alertmanager.logFormat":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":null,"description":"If set use a syslog logger or JSON logging.\n","readOnly":false,"type":"null or string"},"services.prometheus.alertmanager.logLevel":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":"warn","description":"Only log messages with the given severity or above.\n","readOnly":false,"type":"one of \"debug\", \"info\", \"warn\", \"error\", \"fatal\""},"services.prometheus.alertmanager.openFirewall":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":false,"description":"Open port in firewall for incoming connections.\n","readOnly":false,"type":"boolean"},"services.prometheus.alertmanager.port":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":9093,"description":"Port to listen on for the web interface and API.\n","readOnly":false,"type":"integer"},"services.prometheus.alertmanager.user":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":"nobody","description":"User name under which Alertmanager shall be run.\n","readOnly":false,"type":"string"},"services.prometheus.alertmanager.webExternalUrl":{"declarations":["nixos/modules/services/monitoring/prometheus/alertmanager.nix"],"default":null,"description":"The URL under which Alertmanager is externally reachable (for example, if Alertmanager is served via a reverse proxy).\nUsed for generating relative and absolute links back to Alertmanager itself.\nIf the URL has a path portion, it will be used to prefix all HTTP endoints served by Alertmanager.\nIf omitted, relevant URL components will be derived automatically.\n","readOnly":false,"type":"null or string"},"services.prometheus.alertmanagerNotificationQueueCapacity":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":10000,"description":"The capacity of the queue for pending alert manager notifications.\n","readOnly":false,"type":"integer"},"services.prometheus.alertmanagerTimeout":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":10,"description":"Alert manager HTTP API timeout (in seconds).\n","readOnly":false,"type":"integer"},"services.prometheus.alertmanagerURL":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"List of Alertmanager URLs to send notifications to.\n","readOnly":false,"type":"list of strings"},"services.prometheus.dataDir":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"/var/lib/prometheus","description":"Directory to store Prometheus metrics data.\n","readOnly":false,"type":"path"},"services.prometheus.enable":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":false,"description":"Enable the Prometheus monitoring daemon.\n","readOnly":false,"type":"boolean"},"services.prometheus.extraFlags":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"Extra commandline options when launching Prometheus.\n","readOnly":false,"type":"list of strings"},"services.prometheus.globalConfig":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":{},"description":"Parameters that are valid in all  configuration contexts. They\nalso serve as defaults for other configuration sections\n","readOnly":false,"type":"submodule"},"services.prometheus.globalConfig.evaluation_interval":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"1m","description":"How frequently to evaluate rules by default.\n","readOnly":false,"type":"string"},"services.prometheus.globalConfig.labels":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":{},"description":"The labels to add to any timeseries that this Prometheus instance\nscrapes.\n","readOnly":false,"type":"attribute set of strings"},"services.prometheus.globalConfig.scrape_interval":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"1m","description":"How frequently to scrape targets by default.\n","readOnly":false,"type":"string"},"services.prometheus.globalConfig.scrape_timeout":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"10s","description":"How long until a scrape request times out.\n","readOnly":false,"type":"string"},"services.prometheus.listenAddress":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"0.0.0.0:9090","description":"Address to listen on for the web interface, API, and telemetry.\n","readOnly":false,"type":"string"},"services.prometheus.nodeExporter.enable":{"declarations":["nixos/modules/services/monitoring/prometheus/node-exporter.nix"],"default":false,"description":"Whether to enable prometheus node exporter.","example":true,"readOnly":false,"type":"boolean"},"services.prometheus.nodeExporter.enabledCollectors":{"declarations":["nixos/modules/services/monitoring/prometheus/node-exporter.nix"],"default":[],"description":"Collectors to enable, additionally to the defaults.\n","example":"[ \"systemd\" ]","readOnly":false,"type":"list of strings"},"services.prometheus.nodeExporter.extraFlags":{"declarations":["nixos/modules/services/monitoring/prometheus/node-exporter.nix"],"default":[],"description":"Extra commandline options when launching the node exporter.\n","readOnly":false,"type":"list of strings"},"services.prometheus.nodeExporter.listenAddress":{"declarations":["nixos/modules/services/monitoring/prometheus/node-exporter.nix"],"default":"0.0.0.0","description":"Address to listen on.\n","readOnly":false,"type":"string"},"services.prometheus.nodeExporter.port":{"declarations":["nixos/modules/services/monitoring/prometheus/node-exporter.nix"],"default":9100,"description":"Port to listen on.\n","readOnly":false,"type":"integer"},"services.prometheus.ruleFiles":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"Any additional rules files to include in this configuration.\n","readOnly":false,"type":"list of paths"},"services.prometheus.rules":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"Alerting and/or Recording rules to evaluate at runtime.\n","readOnly":false,"type":"list of strings"},"services.prometheus.scrapeConfigs":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"A list of scrape configurations.\n","readOnly":false,"type":"list of submodules"},"services.prometheus.scrapeConfigs.*.basic_auth":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":null,"description":"Optional http login credentials for metrics scraping.\n","readOnly":false,"type":"null or submodule"},"services.prometheus.scrapeConfigs.*.basic_auth.password":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"HTTP password\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.basic_auth.username":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"HTTP username\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.consul_sd_configs":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"List of Consul service discovery configurations.\n","readOnly":false,"type":"list of submodules"},"services.prometheus.scrapeConfigs.*.consul_sd_configs.*.datacenter":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"Consul datacenter","readOnly":false,"type":"null or string"},"services.prometheus.scrapeConfigs.*.consul_sd_configs.*.password":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"Consul password","readOnly":false,"type":"null or string"},"services.prometheus.scrapeConfigs.*.consul_sd_configs.*.scheme":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"Consul scheme","readOnly":false,"type":"null or string"},"services.prometheus.scrapeConfigs.*.consul_sd_configs.*.server":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"Consul server to query.","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.consul_sd_configs.*.services":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"A list of services for which targets are retrieved.\n","readOnly":false,"type":"list of strings"},"services.prometheus.scrapeConfigs.*.consul_sd_configs.*.tag_separator":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":",","description":"The string by which Consul tags are joined into the tag label.\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.consul_sd_configs.*.token":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"Consul token","readOnly":false,"type":"null or string"},"services.prometheus.scrapeConfigs.*.consul_sd_configs.*.username":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"Consul username","readOnly":false,"type":"null or string"},"services.prometheus.scrapeConfigs.*.dns_sd_configs":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"List of DNS service discovery configurations.\n","readOnly":false,"type":"list of submodules"},"services.prometheus.scrapeConfigs.*.dns_sd_configs.*.names":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"A list of DNS SRV record names to be queried.\n","readOnly":false,"type":"list of strings"},"services.prometheus.scrapeConfigs.*.dns_sd_configs.*.refresh_interval":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"30s","description":"The time after which the provided names are refreshed.\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.file_sd_configs":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"List of file service discovery configurations.\n","readOnly":false,"type":"list of submodules"},"services.prometheus.scrapeConfigs.*.file_sd_configs.*.files":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"Patterns for files from which target groups are extracted. Refer\nto the Prometheus documentation for permitted filename patterns\nand formats.\n\n","readOnly":false,"type":"list of strings"},"services.prometheus.scrapeConfigs.*.file_sd_configs.*.refresh_interval":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"30s","description":"Refresh interval to re-read the files.\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.job_name":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"The job name assigned to scraped metrics by default.\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.metrics_path":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"/metrics","description":"The HTTP resource path on which to fetch metrics from targets.\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.relabel_configs":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"List of relabel configurations.\n","readOnly":false,"type":"list of submodules"},"services.prometheus.scrapeConfigs.*.relabel_configs.*.action":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"replace","description":"Action to perform based on regex matching.\n","readOnly":false,"type":"one of \"replace\", \"keep\", \"drop\""},"services.prometheus.scrapeConfigs.*.relabel_configs.*.regex":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"(.*)","description":"Regular expression against which the extracted value is matched.\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.relabel_configs.*.replacement":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"$1","description":"Replacement value against which a regex replace is performed if the\nregular expression matches.\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.relabel_configs.*.separator":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":";","description":"Separator placed between concatenated source label values.\n","readOnly":false,"type":"string"},"services.prometheus.scrapeConfigs.*.relabel_configs.*.source_labels":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"The source labels select values from existing labels. Their content\nis concatenated using the configured separator and matched against\nthe configured regular expression.\n","readOnly":false,"type":"list of strings"},"services.prometheus.scrapeConfigs.*.relabel_configs.*.target_label":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":null,"description":"Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions.\n","readOnly":false,"type":"null or string"},"services.prometheus.scrapeConfigs.*.scheme":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":"http","description":"The URL scheme with which to fetch metrics from targets.\n","readOnly":false,"type":"one of \"http\", \"https\""},"services.prometheus.scrapeConfigs.*.scrape_interval":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":null,"description":"How frequently to scrape targets from this job. Defaults to the\nglobally configured default.\n","readOnly":false,"type":"null or string"},"services.prometheus.scrapeConfigs.*.scrape_timeout":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":null,"description":"Per-target timeout when scraping this job. Defaults to the\nglobally configured default.\n","readOnly":false,"type":"null or string"},"services.prometheus.scrapeConfigs.*.static_configs":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"default":[],"description":"List of labeled target groups for this job.\n","readOnly":false,"type":"list of submodules"},"services.prometheus.scrapeConfigs.*.static_configs.*.labels":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"Labels assigned to all metrics scraped from the targets.\n","readOnly":false,"type":"attribute set of strings"},"services.prometheus.scrapeConfigs.*.static_configs.*.targets":{"declarations":["nixos/modules/services/monitoring/prometheus/default.nix"],"description":"The targets specified by the target group.\n","readOnly":false,"type":"list of strings"},"services.prosody.admins":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":[],"description":"List of administrators of the current host","example":["admin1@example.com","admin2@example.com"],"readOnly":false,"type":"unspecified"},"services.prosody.allowRegistration":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":false,"description":"Allow account creation","readOnly":false,"type":"unspecified"},"services.prosody.enable":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":false,"description":"Whether to enable the prosody server","readOnly":false,"type":"unspecified"},"services.prosody.extraConfig":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":"","description":"Additional prosody configuration","readOnly":false,"type":"string"},"services.prosody.extraModules":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":[],"description":"Enable custom modules","readOnly":false,"type":"unspecified"},"services.prosody.modules.bosh":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":false,"description":"Enable BOSH clients, aka 'Jabber over HTTP'","readOnly":false,"type":"unspecified"},"services.prosody.modules.console":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":false,"description":"telnet to port 5582","readOnly":false,"type":"unspecified"},"services.prosody.modules.dialback":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"s2s dialback support","readOnly":false,"type":"unspecified"},"services.prosody.modules.disco":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"Service discovery","readOnly":false,"type":"unspecified"},"services.prosody.modules.httpserver":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":false,"description":"Serve static files from a directory over HTTP","readOnly":false,"type":"unspecified"},"services.prosody.modules.legacyauth":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"Legacy authentication. Only used by some old clients and bots","readOnly":false,"type":"unspecified"},"services.prosody.modules.ping":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"Replies to XMPP pings with pongs","readOnly":false,"type":"unspecified"},"services.prosody.modules.roster":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"Allow users to have a roster","readOnly":false,"type":"unspecified"},"services.prosody.modules.saslauth":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"Authentication for clients and servers. Recommended if you want to log in.","readOnly":false,"type":"unspecified"},"services.prosody.modules.time":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"Let others know the time here on this server","readOnly":false,"type":"unspecified"},"services.prosody.modules.tls":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"Add support for secure TLS on c2s/s2s connections","readOnly":false,"type":"unspecified"},"services.prosody.modules.uptime":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"Report how long server has been running","readOnly":false,"type":"unspecified"},"services.prosody.modules.version":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":true,"description":"Replies to server version requests","readOnly":false,"type":"unspecified"},"services.prosody.modules.websocket":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":false,"description":"Enable WebSocket support","readOnly":false,"type":"unspecified"},"services.prosody.ssl":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":null,"description":"Paths to SSL files","readOnly":false,"type":"unspecified"},"services.prosody.virtualHosts":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":{"localhost":{"domain":"localhost","enabled":true}},"description":"Define the virtual hosts","example":{"myhost":{"domain":"my-xmpp-example-host.org","enabled":true}},"readOnly":false,"type":"list or attribute set of submodules"},"services.prosody.virtualHosts.<name?>.domain":{"declarations":["nixos/modules/services/networking/prosody.nix"],"description":"Domain name","readOnly":false,"type":"string"},"services.prosody.virtualHosts.<name?>.enabled":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":false,"description":"Whether to enable the virtual host","readOnly":false,"type":"unspecified"},"services.prosody.virtualHosts.<name?>.extraConfig":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":"","description":"Additional virtual host specific configuration","readOnly":false,"type":"unspecified"},"services.prosody.virtualHosts.<name?>.ssl":{"declarations":["nixos/modules/services/networking/prosody.nix"],"default":null,"description":"Paths to SSL files","readOnly":false,"type":"unspecified"},"services.psd.browsers":{"declarations":["nixos/modules/services/desktops/profile-sync-daemon.nix"],"default":[],"description":"A list of browsers to sync. Available choices are:\n\nchromium chromium-dev conkeror.mozdev.org epiphany firefox\nfirefox-trunk google-chrome google-chrome-beta google-chrome-unstable\nheftig-aurora icecat luakit midori opera opera-developer opera-beta\nqupzilla palemoon rekonq seamonkey\n\nAn empty list will enable all browsers.\n","example":["chromium","firefox"],"readOnly":false,"type":"list of strings"},"services.psd.daemonFile":{"declarations":["nixos/modules/services/desktops/profile-sync-daemon.nix"],"default":"/run/psd","description":"Where the pid and backup configuration files will be stored.\n","readOnly":false,"type":"string"},"services.psd.enable":{"declarations":["nixos/modules/services/desktops/profile-sync-daemon.nix"],"default":false,"description":"Whether to enable the Profile Sync daemon.\n","readOnly":false,"type":"boolean"},"services.psd.resyncTimer":{"declarations":["nixos/modules/services/desktops/profile-sync-daemon.nix"],"default":"1h","description":"The amount of time to wait before syncing browser profiles back to the\ndisk.\n\nTakes a systemd.unit time span. The time unit defaults to seconds if\nomitted.\n","example":"1h 30min","readOnly":false,"type":"string"},"services.psd.users":{"declarations":["nixos/modules/services/desktops/profile-sync-daemon.nix"],"default":[],"description":"A list of users whose browser profiles should be sync'd to tmpfs.\n","example":["demo"],"readOnly":false,"type":"list of strings"},"services.psd.volatile":{"declarations":["nixos/modules/services/desktops/profile-sync-daemon.nix"],"default":"/run/psd-profiles","description":"The directory where browser profiles should reside(this should be\nmounted as a tmpfs). Do not include a trailing backslash.\n","readOnly":false,"type":"string"},"services.pumpio.address":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":"localhost","description":"Web server listen address.\n","readOnly":false,"type":"string"},"services.pumpio.dbHost":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":"localhost","description":"The database host to connect to.","readOnly":false,"type":"string"},"services.pumpio.dbName":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":"pumpio","description":"The name of the database to use.","readOnly":false,"type":"string"},"services.pumpio.dbPassword":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"The password corresponding to dbUser.  Warning: this is\nstored in cleartext in the Nix store!\n","readOnly":false,"type":"null or string"},"services.pumpio.dbPort":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":27017,"description":"The port that the database is listening on.","readOnly":false,"type":"integer"},"services.pumpio.dbUser":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"The username. Defaults to null, meaning no authentication.\n","readOnly":false,"type":"null or string"},"services.pumpio.disableRegistration":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":false,"description":"Disables registering new users on the site through the Web\nor the API.\n","readOnly":false,"type":"boolean"},"services.pumpio.driver":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":"mongodb","description":"Type of database. Corresponds to a nodejs databank driver.","readOnly":false,"type":"one of \"mongodb\", \"disk\", \"lrucache\", \"memcached\", \"redis\""},"services.pumpio.driverParams":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":{},"description":"Extra parameters for the driver.","readOnly":false,"type":"unspecified"},"services.pumpio.enable":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":false,"description":"Whether to enable Pump.io social streams server.","example":true,"readOnly":false,"type":"boolean"},"services.pumpio.extraConfig":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":{},"description":"Extra configuration options which are serialized to json and added\nto the pump.io.json config file.\n","readOnly":false,"type":"unspecified"},"services.pumpio.favicon":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"Local filesystem path to the favicon.ico file to use. This\nwill be served as \"/favicon.ico\" by the server.\n","readOnly":false,"type":"null or path"},"services.pumpio.firehose":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":"ofirehose.com","description":"Firehose host running the ofirehose software. Defaults to\n\"ofirehose.com\". Public notices will be ping this firehose\nserver and from there go out to search engines and the\nworld. If you want to disconnect from the public web, set\nthis to something falsy.\n","readOnly":false,"type":"string"},"services.pumpio.hostname":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"The hostname of the server, used for generating\nURLs. Defaults to \"localhost\" which doesn't do much for you.\n","readOnly":false,"type":"null or string"},"services.pumpio.owner":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":"","description":"Name of owning entity, if you want to link to it.","example":"Awesome Inc.","readOnly":false,"type":"string"},"services.pumpio.ownerURL":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":"","description":"URL of owning entity, if you want to link to it.","example":"https://pump.io","readOnly":false,"type":"string"},"services.pumpio.port":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":31337,"description":"Port to listen on. Defaults to 31337, which is suitable for\nrunning behind a reverse proxy. For a standalone server,\nuse 443.\n","readOnly":false,"type":"integer"},"services.pumpio.requireEmail":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":false,"description":"Require an e-mail address to register.","readOnly":false,"type":"boolean"},"services.pumpio.secret":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"description":"A session-generating secret, server-wide password.  Warning:\nthis is stored in cleartext in the Nix store!\n","example":"my dog has fleas","readOnly":false,"type":"string"},"services.pumpio.site":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"description":"Name of the server","example":"Awesome Sauce","readOnly":false,"type":"string"},"services.pumpio.smtpFrom":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"Email address to use in the \"From:\" header of outgoing\nnotifications. Defaults to 'no-reply@' plus the site\nhostname.\n","readOnly":false,"type":"null or string"},"services.pumpio.smtpHost":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"Server to use for sending transactional email. If it's not\nset up, no email is sent and features like password recovery\nand email notification won't work.\n","example":"localhost","readOnly":false,"type":"null or string"},"services.pumpio.smtpPassword":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"Password to use to connect to SMTP server. Might not be\nnecessary for some servers.  Warning: this is stored in\ncleartext in the Nix store!\n","readOnly":false,"type":"null or string"},"services.pumpio.smtpPort":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":25,"description":"Port to connect to on SMTP server.\n","readOnly":false,"type":"integer"},"services.pumpio.smtpUseSSL":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":false,"description":"Only use SSL with the SMTP server. By default, a SSL\nconnection is negotiated using TLS. You may need to change\nthe smtpPort value if you set this.\n","readOnly":false,"type":"boolean"},"services.pumpio.smtpUser":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"Username to use to connect to SMTP server. Might not be\nnecessary for some servers.\n","readOnly":false,"type":"null or string"},"services.pumpio.spamClientId":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"OAuth pair for spam server.","readOnly":false,"type":"null or string"},"services.pumpio.spamClientSecret":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"OAuth pair for spam server.  Warning: this is\nstored in cleartext in the Nix store!\n","readOnly":false,"type":"null or string"},"services.pumpio.spamHost":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":null,"description":"Host running activityspam software to use to test updates\nfor spam.\n","readOnly":false,"type":"null or string"},"services.pumpio.sslCert":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":"","description":"The path to the server certificate. The certificate is\nrequired, but it can be self-signed.\n","example":"/var/lib/pump.io/myserver.crt","readOnly":false,"type":"path"},"services.pumpio.sslKey":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":"","description":"The path to the server certificate private key. The\ncertificate is required, but it can be self-signed.\n","example":"/var/lib/pump.io/myserver.key","readOnly":false,"type":"path"},"services.pumpio.urlPort":{"declarations":["nixos/modules/services/web-apps/pump.io.nix"],"default":443,"description":"Port to use for generating URLs. This basically has to be\neither 80 or 443 because the host-meta and Webfinger\nprotocols don't make any provision for HTTP/HTTPS servers\nrunning on other ports.\n","readOnly":false,"type":"integer"},"services.quagga.babel.config":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"","description":"babeld configuration statements.\n","example":"","readOnly":false,"type":"string"},"services.quagga.babel.configFile":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"Configuration file to use for Quagga babeld.\nBy default the NixOS generated files are used.\n","example":"/etc/quagga/babeld.conf","readOnly":false,"type":"null or path"},"services.quagga.babel.enable":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":false,"description":"Whether to enable the Quagga BABEL routing protocol.","example":true,"readOnly":false,"type":"boolean"},"services.quagga.babel.vtyListenAddress":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"127.0.0.1","description":"Address to bind to for the VTY interface.\n","readOnly":false,"type":"string"},"services.quagga.babel.vtyListenPort":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","readOnly":false,"type":"null or integer"},"services.quagga.bgp.config":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"","description":"bgpd configuration statements.\n","example":"router bgp 65001\n  neighbor 10.0.0.1 remote-as 65001\n","readOnly":false,"type":"string"},"services.quagga.bgp.configFile":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"Configuration file to use for Quagga bgpd.\nBy default the NixOS generated files are used.\n","example":"/etc/quagga/bgpd.conf","readOnly":false,"type":"null or path"},"services.quagga.bgp.enable":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":false,"description":"Whether to enable the Quagga BGP routing protocol.","example":true,"readOnly":false,"type":"boolean"},"services.quagga.bgp.vtyListenAddress":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"127.0.0.1","description":"Address to bind to for the VTY interface.\n","readOnly":false,"type":"string"},"services.quagga.bgp.vtyListenPort":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","readOnly":false,"type":"null or integer"},"services.quagga.isis.config":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"","description":"isisd configuration statements.\n","example":"","readOnly":false,"type":"string"},"services.quagga.isis.configFile":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"Configuration file to use for Quagga isisd.\nBy default the NixOS generated files are used.\n","example":"/etc/quagga/isisd.conf","readOnly":false,"type":"null or path"},"services.quagga.isis.enable":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":false,"description":"Whether to enable the Quagga ISIS routing protocol.","example":true,"readOnly":false,"type":"boolean"},"services.quagga.isis.vtyListenAddress":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"127.0.0.1","description":"Address to bind to for the VTY interface.\n","readOnly":false,"type":"string"},"services.quagga.isis.vtyListenPort":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","readOnly":false,"type":"null or integer"},"services.quagga.ospf.config":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"","description":"ospfd configuration statements.\n","example":"router ospf\n  network 10.0.0.0/8 area 0\n","readOnly":false,"type":"string"},"services.quagga.ospf.configFile":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"Configuration file to use for Quagga ospfd.\nBy default the NixOS generated files are used.\n","example":"/etc/quagga/ospfd.conf","readOnly":false,"type":"null or path"},"services.quagga.ospf.enable":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":false,"description":"Whether to enable the Quagga OSPF routing protocol.","example":true,"readOnly":false,"type":"boolean"},"services.quagga.ospf.vtyListenAddress":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"127.0.0.1","description":"Address to bind to for the VTY interface.\n","readOnly":false,"type":"string"},"services.quagga.ospf.vtyListenPort":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","readOnly":false,"type":"null or integer"},"services.quagga.ospf6.config":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"","description":"ospf6d configuration statements.\n","example":"","readOnly":false,"type":"string"},"services.quagga.ospf6.configFile":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"Configuration file to use for Quagga ospf6d.\nBy default the NixOS generated files are used.\n","example":"/etc/quagga/ospf6d.conf","readOnly":false,"type":"null or path"},"services.quagga.ospf6.enable":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":false,"description":"Whether to enable the Quagga OSPF6 routing protocol.","example":true,"readOnly":false,"type":"boolean"},"services.quagga.ospf6.vtyListenAddress":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"127.0.0.1","description":"Address to bind to for the VTY interface.\n","readOnly":false,"type":"string"},"services.quagga.ospf6.vtyListenPort":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","readOnly":false,"type":"null or integer"},"services.quagga.pim.config":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"","description":"pimd configuration statements.\n","example":"","readOnly":false,"type":"string"},"services.quagga.pim.configFile":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"Configuration file to use for Quagga pimd.\nBy default the NixOS generated files are used.\n","example":"/etc/quagga/pimd.conf","readOnly":false,"type":"null or path"},"services.quagga.pim.enable":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":false,"description":"Whether to enable the Quagga PIM routing protocol.","example":true,"readOnly":false,"type":"boolean"},"services.quagga.pim.vtyListenAddress":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"127.0.0.1","description":"Address to bind to for the VTY interface.\n","readOnly":false,"type":"string"},"services.quagga.pim.vtyListenPort":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","readOnly":false,"type":"null or integer"},"services.quagga.rip.config":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"","description":"ripd configuration statements.\n","example":"router rip\n  network 10.0.0.0/8\n","readOnly":false,"type":"string"},"services.quagga.rip.configFile":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"Configuration file to use for Quagga ripd.\nBy default the NixOS generated files are used.\n","example":"/etc/quagga/ripd.conf","readOnly":false,"type":"null or path"},"services.quagga.rip.enable":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":false,"description":"Whether to enable the Quagga RIP routing protocol.","example":true,"readOnly":false,"type":"boolean"},"services.quagga.rip.vtyListenAddress":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"127.0.0.1","description":"Address to bind to for the VTY interface.\n","readOnly":false,"type":"string"},"services.quagga.rip.vtyListenPort":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","readOnly":false,"type":"null or integer"},"services.quagga.ripng.config":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"","description":"ripngd configuration statements.\n","example":"","readOnly":false,"type":"string"},"services.quagga.ripng.configFile":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"Configuration file to use for Quagga ripngd.\nBy default the NixOS generated files are used.\n","example":"/etc/quagga/ripngd.conf","readOnly":false,"type":"null or path"},"services.quagga.ripng.enable":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":false,"description":"Whether to enable the Quagga RIPNG routing protocol.","example":true,"readOnly":false,"type":"boolean"},"services.quagga.ripng.vtyListenAddress":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"127.0.0.1","description":"Address to bind to for the VTY interface.\n","readOnly":false,"type":"string"},"services.quagga.ripng.vtyListenPort":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","readOnly":false,"type":"null or integer"},"services.quagga.zebra.config":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"","description":"zebra configuration statements.\n","example":"","readOnly":false,"type":"string"},"services.quagga.zebra.configFile":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"Configuration file to use for Quagga zebra.\nBy default the NixOS generated files are used.\n","example":"/etc/quagga/zebra.conf","readOnly":false,"type":"null or path"},"services.quagga.zebra.enable":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":false,"description":"Whether to enable the Zebra routing manager.\n\nThe Zebra routing manager is automatically enabled\nif any routing protocols are configured.\n","example":true,"readOnly":false,"type":"boolean"},"services.quagga.zebra.vtyListenAddress":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":"127.0.0.1","description":"Address to bind to for the VTY interface.\n","readOnly":false,"type":"string"},"services.quagga.zebra.vtyListenPort":{"declarations":["nixos/modules/services/networking/quagga.nix"],"default":null,"description":"TCP Port to bind to for the VTY interface.\n","readOnly":false,"type":"null or integer"},"services.quassel-webserver.backlogLimit":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":100,"description":"Amount of backlogs to fetch per buffer after first retrieval","readOnly":false,"type":"integer"},"services.quassel-webserver.enable":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":false,"description":"Whether to enable the quassel webclient service","readOnly":false,"type":"boolean"},"services.quassel-webserver.forceHostAndPort":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":false,"description":"Force the users to use the quasselCoreHost and quasselCorePort defaults","readOnly":false,"type":"boolean"},"services.quassel-webserver.initialBacklogLimit":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":20,"description":"Amount of backlogs to fetch per buffer on connection","readOnly":false,"type":"integer"},"services.quassel-webserver.pkg":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":"pkgs.quassel-webserver","description":"The quassel-webserver package","readOnly":false,"type":"package"},"services.quassel-webserver.port":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":60443,"description":"The port the quassel webserver should listen on","readOnly":false,"type":"integer"},"services.quassel-webserver.prefixPath":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":"","description":"Configure this if you use a reverse proxy. Must start with a '/'","example":"/quassel","readOnly":false,"type":"string"},"services.quassel-webserver.quasselCoreHost":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":"","description":"The default host of the quassel core","readOnly":false,"type":"string"},"services.quassel-webserver.quasselCorePort":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":4242,"description":"The default quassel core port","readOnly":false,"type":"integer"},"services.quassel-webserver.secureCore":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":true,"description":"Connect to the core using SSL","readOnly":false,"type":"boolean"},"services.quassel-webserver.theme":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":"default","description":"default or darksolarized","readOnly":false,"type":"string"},"services.quassel-webserver.useHttps":{"declarations":["nixos/modules/services/web-apps/quassel-webserver.nix"],"default":true,"description":"Whether the quassel webserver connection should be a https connection","readOnly":false,"type":"boolean"},"services.quassel.dataDir":{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":"/home/quassel/.config/quassel-irc.org","description":"The directory holding configuration files, the SQlite database and the SSL Cert.\n","readOnly":false,"type":"unspecified"},"services.quassel.enable":{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":false,"description":"Whether to run the Quassel IRC client daemon.\n","readOnly":false,"type":"unspecified"},"services.quassel.interfaces":{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":["127.0.0.1"],"description":"The interfaces the Quassel daemon will be listening to.  If `[ 127.0.0.1 ]',\nonly clients on the local host can connect to it; if `[ 0.0.0.0 ]', clients\ncan access it from any network interface.\n","readOnly":false,"type":"unspecified"},"services.quassel.package":{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":"pkgs.kde4.quasselDaemon","description":"The package of the quassel daemon.\n","example":{"_type":"literalExample","text":"pkgs.quasselDaemon"},"readOnly":false,"type":"package"},"services.quassel.portNumber":{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":4242,"description":"The port number the Quassel daemon will be listening to.\n","readOnly":false,"type":"unspecified"},"services.quassel.user":{"declarations":["nixos/modules/services/networking/quassel.nix"],"default":null,"description":"The existing user the Quassel daemon should run as. If left empty, a default \"quassel\" user will be created.\n","readOnly":false,"type":"unspecified"},"services.rabbitmq.config":{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":"","description":"Verbatim configuration file contents.\nSee http://www.rabbitmq.com/configure.html\n","readOnly":false,"type":"string"},"services.rabbitmq.cookie":{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":"","description":"Erlang cookie is a string of arbitrary length which must\nbe the same for several nodes to be allowed to communicate.\nLeave empty to generate automatically.\n","readOnly":false,"type":"string"},"services.rabbitmq.dataDir":{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":"/var/lib/rabbitmq","description":"Data directory for rabbitmq.\n","readOnly":false,"type":"path"},"services.rabbitmq.enable":{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":false,"description":"Whether to enable the RabbitMQ server, an Advanced Message\nQueuing Protocol (AMQP) broker.\n","readOnly":false,"type":"unspecified"},"services.rabbitmq.listenAddress":{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":"127.0.0.1","description":"IP address on which RabbitMQ will listen for AMQP\nconnections.  Set to the empty string to listen on all\ninterfaces.  Note that RabbitMQ creates a user named\n<literal>guest</literal> with password\n<literal>guest</literal> by default, so you should delete\nthis user if you intend to allow external access.\n","example":"","readOnly":false,"type":"string"},"services.rabbitmq.plugins":{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":[],"description":"The names of plugins to enable","readOnly":false,"type":"list of strings"},"services.rabbitmq.port":{"declarations":["nixos/modules/services/amqp/rabbitmq.nix"],"default":5672,"description":"Port on which RabbitMQ will listen for AMQP connections.\n","readOnly":false,"type":"integer"},"services.racoon.config":{"declarations":["nixos/modules/services/networking/racoon.nix"],"default":"","description":"Contents of racoon configuration file.","readOnly":false,"type":"string"},"services.racoon.configPath":{"declarations":["nixos/modules/services/networking/racoon.nix"],"default":"/etc/racoon/racoon.conf","description":"Location of racoon config if config is not provided.","readOnly":false,"type":"path"},"services.racoon.enable":{"declarations":["nixos/modules/services/networking/racoon.nix"],"default":false,"description":"Whether to enable racoon.","example":true,"readOnly":false,"type":"boolean"},"services.radicale.config":{"declarations":["nixos/modules/services/networking/radicale.nix"],"default":"","description":"Radicale configuration, this will set the service\nconfiguration file\n","readOnly":false,"type":"string"},"services.radicale.enable":{"declarations":["nixos/modules/services/networking/radicale.nix"],"default":false,"description":"Enable Radicale CalDAV and CardDAV server\n","readOnly":false,"type":"boolean"},"services.radvd.config":{"declarations":["nixos/modules/services/networking/radvd.nix"],"description":"The contents of the radvd configuration file.\n","example":"interface eth0 {\n  AdvSendAdvert on;\n  prefix 2001:db8:1234:5678::/64 { };\n};\n","readOnly":false,"type":"unspecified"},"services.radvd.enable":{"declarations":["nixos/modules/services/networking/radvd.nix"],"default":false,"description":"Whether to enable the Router Advertisement Daemon\n(<command>radvd</command>), which provides link-local\nadvertisements of IPv6 router addresses and prefixes using\nthe Neighbor Discovery Protocol (NDP).  This enables\nstateless address autoconfiguration in IPv6 clients on the\nnetwork.\n","readOnly":false,"type":"unspecified"},"services.rdnssd.enable":{"declarations":["nixos/modules/services/networking/rdnssd.nix"],"default":false,"description":"Whether to enable the RDNSS daemon\n(<command>rdnssd</command>), which configures DNS servers in\n<filename>/etc/resolv.conf</filename> from RDNSS\nadvertisements sent by IPv6 routers.\n","readOnly":false,"type":"unspecified"},"services.redis.appendFsync":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"everysec","description":"How often to fsync the append-only log, options: no, always, everysec.","readOnly":false,"type":"string"},"services.redis.appendOnly":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":false,"description":"By default data is only periodically persisted to disk, enable this option to use an append-only file for improved persistence.","readOnly":false,"type":"boolean"},"services.redis.appendOnlyFilename":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"appendonly.aof","description":"Filename for the append-only file (stored inside of dbpath)","readOnly":false,"type":"string"},"services.redis.bind":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":null,"description":"The IP interface to bind to.","example":"127.0.0.1","readOnly":false,"type":"null or string"},"services.redis.databases":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":16,"description":"Set the number of databases.","readOnly":false,"type":"integer"},"services.redis.dbFilename":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"dump.rdb","description":"The filename where to dump the DB.","readOnly":false,"type":"string"},"services.redis.dbpath":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"/var/lib/redis","description":"The DB will be written inside this directory, with the filename specified using the 'dbFilename' configuration.","readOnly":false,"type":"path"},"services.redis.enable":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":false,"description":"Whether to enable the Redis server.","readOnly":false,"type":"boolean"},"services.redis.extraConfig":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"","description":"Extra configuration options for redis.conf.","readOnly":false,"type":"string"},"services.redis.logLevel":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"notice","description":"Specify the server verbosity level, options: debug, verbose, notice, warning.","example":"debug","readOnly":false,"type":"string"},"services.redis.logfile":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"/dev/null","description":"Specify the log file name. Also 'stdout' can be used to force Redis to log on the standard output.","example":"/var/log/redis.log","readOnly":false,"type":"string"},"services.redis.masterAuth":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":null,"description":"If the master is password protected (using the requirePass configuration)\n        it is possible to tell the slave to authenticate before starting the replication synchronization\n        process, otherwise the master will refuse the slave request.\n        (STORED PLAIN TEXT, WORLD-READABLE IN NIX STORE)","readOnly":false,"type":"unspecified"},"services.redis.openFirewall":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":false,"description":"Whether to open ports in the firewall for the server.\n","readOnly":false,"type":"boolean"},"services.redis.package":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"pkgs.redis","description":"Which Redis derivation to use.","readOnly":false,"type":"package"},"services.redis.pidFile":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"/var/lib/redis/redis.pid","description":"","readOnly":false,"type":"path"},"services.redis.port":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":6379,"description":"The port for Redis to listen to.","readOnly":false,"type":"integer"},"services.redis.requirePass":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":null,"description":"Password for database (STORED PLAIN TEXT, WORLD-READABLE IN NIX STORE)","example":"letmein!","readOnly":false,"type":"null or string"},"services.redis.save":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":[[900,1],[300,10],[60,10000]],"description":"The schedule in which data is persisted to disk, represented as a list of lists where the first element represent the amount of seconds and the second the number of changes.","example":[[900,1],[300,10],[60,10000]],"readOnly":false,"type":"list of list of integerss"},"services.redis.slaveOf":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":null,"description":"An attribute set with two attributes: ip and port to which this redis instance acts as a slave.","example":{"ip":"192.168.1.100","port":6379},"readOnly":false,"type":"unspecified"},"services.redis.slowLogLogSlowerThan":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":10000,"description":"Log queries whose execution take longer than X in milliseconds.","example":1000,"readOnly":false,"type":"integer"},"services.redis.slowLogMaxLen":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":128,"description":"Maximum number of items to keep in slow log.","readOnly":false,"type":"integer"},"services.redis.syslog":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":true,"description":"Enable logging to the system logger.","readOnly":false,"type":"boolean"},"services.redis.unixSocket":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":null,"description":"The path to the socket to bind to.","example":"/var/run/redis.sock","readOnly":false,"type":"null or path"},"services.redis.user":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":"redis","description":"User account under which Redis runs.","readOnly":false,"type":"string"},"services.redis.vmOverCommit":{"declarations":["nixos/modules/services/databases/redis.nix"],"default":false,"description":"Set vm.overcommit_memory to 1 (Suggested for Background Saving: http://redis.io/topics/faq)\n","readOnly":false,"type":"boolean"},"services.redmine.databaseHost":{"declarations":["nixos/modules/services/misc/redmine.nix"],"default":"127.0.0.1","description":"Database hostname","readOnly":false,"type":"string"},"services.redmine.databaseName":{"declarations":["nixos/modules/services/misc/redmine.nix"],"default":"redmine","description":"Database name","readOnly":false,"type":"string"},"services.redmine.databasePassword":{"declarations":["nixos/modules/services/misc/redmine.nix"],"default":"","description":"Database user password","readOnly":false,"type":"string"},"services.redmine.databaseUsername":{"declarations":["nixos/modules/services/misc/redmine.nix"],"default":"redmine","description":"Database user","readOnly":false,"type":"string"},"services.redmine.enable":{"declarations":["nixos/modules/services/misc/redmine.nix"],"default":false,"description":"Enable the redmine service.\n","readOnly":false,"type":"boolean"},"services.redmine.extraConfig":{"declarations":["nixos/modules/services/misc/redmine.nix"],"default":"","description":"Extra configuration in configuration.yml","readOnly":false,"type":"string"},"services.redmine.plugins":{"declarations":["nixos/modules/services/misc/redmine.nix"],"default":{},"description":"Set of plugins","readOnly":false,"type":"attribute set of paths"},"services.redmine.stateDir":{"declarations":["nixos/modules/services/misc/redmine.nix"],"default":"/var/redmine","description":"The state directory, logs and plugins are stored here","readOnly":false,"type":"string"},"services.redmine.themes":{"declarations":["nixos/modules/services/misc/redmine.nix"],"default":{},"description":"Set of themes","readOnly":false,"type":"attribute set of paths"},"services.redshift.brightness.day":{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"1","description":"Screen brightness to apply during the day,\nbetween <literal>0.1</literal> and <literal>1.0</literal>.\n","readOnly":false,"type":"string"},"services.redshift.brightness.night":{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"1","description":"Screen brightness to apply during the night,\nbetween <literal>0.1</literal> and <literal>1.0</literal>.\n","readOnly":false,"type":"string"},"services.redshift.enable":{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":false,"description":"Enable Redshift to change your screen's colour temperature depending on\nthe time of day.\n","example":true,"readOnly":false,"type":"boolean"},"services.redshift.extraOptions":{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":[],"description":"Additional command-line arguments to pass to\n<command>redshift</command>.\n","example":["-v","-m randr"],"readOnly":false,"type":"list of strings"},"services.redshift.latitude":{"declarations":["nixos/modules/services/x11/redshift.nix"],"description":"Your current latitude, between\n<literal>-90.0</literal> and <literal>90.0</literal>.\n","readOnly":false,"type":"string"},"services.redshift.longitude":{"declarations":["nixos/modules/services/x11/redshift.nix"],"description":"Your current longitude, between\nbetween <literal>-180.0</literal> and <literal>180.0</literal>.\n","readOnly":false,"type":"string"},"services.redshift.package":{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":"pkgs.redshift","description":"redshift derivation to use.\n","readOnly":false,"type":"package"},"services.redshift.temperature.day":{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":5500,"description":"Colour temperature to use during the day, between\n<literal>1000</literal> and <literal>25000</literal> K.\n","readOnly":false,"type":"integer"},"services.redshift.temperature.night":{"declarations":["nixos/modules/services/x11/redshift.nix"],"default":3700,"description":"Colour temperature to use at night, between\n<literal>1000</literal> and <literal>25000</literal> K.\n","readOnly":false,"type":"integer"},"services.resolved.dnssec":{"declarations":["nixos/modules/system/boot/resolved.nix"],"default":"allow-downgrade","description":"If true all DNS lookups are DNSSEC-validated locally (excluding LLMNR and Multicast DNS). Note that this mode requires a DNS server that supports DNSSEC. If the DNS server does not properly support DNSSEC all validations will fail.\nIf set to \"allow-downgrade\" DNSSEC validation is attempted, but if the server does not support DNSSEC properly, DNSSEC mode is automatically disabled. Note that this mode makes DNSSEC validation vulnerable to \"downgrade\" attacks, where an attacker might be able to trigger a downgrade to non-DNSSEC mode by synthesizing a DNS response that suggests DNSSEC was not supported.\nIf set to false, DNS lookups are not DNSSEC validated.\n","example":"true","readOnly":false,"type":"one of \"true\", \"allow-downgrade\", \"false\""},"services.resolved.domains":{"declarations":["nixos/modules/system/boot/resolved.nix"],"default":[],"description":"A list of domains. These domains are used as search suffixes when resolving single-label host names (domain names which contain no dot), in order to qualify them into fully-qualified domain names (FQDNs).\nFor compatibility reasons, if this setting is not specified, the search domains listed in /etc/resolv.conf are used instead, if that file exists and any domains are configured in it.\n","example":["example.com"],"readOnly":false,"type":"list of strings"},"services.resolved.enable":{"declarations":["nixos/modules/system/boot/resolved.nix"],"default":false,"description":"Whether to enable the systemd DNS resolver daemon.\n","readOnly":false,"type":"boolean"},"services.resolved.extraConfig":{"declarations":["nixos/modules/system/boot/resolved.nix"],"default":"","description":"Extra config to append to resolved.conf.\n","readOnly":false,"type":"string"},"services.resolved.fallbackDns":{"declarations":["nixos/modules/system/boot/resolved.nix"],"default":[],"description":"A list of IPv4 and IPv6 addresses to use as the fallback DNS servers.\nIf this option is empty, a compiled-in list of DNS servers is used instead.\n","example":["8.8.8.8","2001:4860:4860::8844"],"readOnly":false,"type":"list of strings"},"services.resolved.llmnr":{"declarations":["nixos/modules/system/boot/resolved.nix"],"default":"true","description":"Controls Link-Local Multicast Name Resolution support (RFC 4794) on the local host.\nIf true, enables full LLMNR responder and resolver support.\nIf false, disables both.\nIf set to \"resolve\", only resolution support is enabled, but responding is disabled.\n","example":"false","readOnly":false,"type":"one of \"true\", \"resolve\", \"false\""},"services.riak-cs.anonymousUserCreation":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":false,"description":"Anonymous user creation.\n","readOnly":false,"type":"boolean"},"services.riak-cs.dataDir":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"/var/db/riak-cs","description":"Data directory for Riak CS.\n","readOnly":false,"type":"path"},"services.riak-cs.distributedCookie":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"riak","description":"Cookie for distributed node communication.  All nodes in the\nsame cluster should use the same cookie or they will not be able to\ncommunicate.\n","readOnly":false,"type":"string"},"services.riak-cs.enable":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":false,"description":"Whether to enable riak-cs.","example":true,"readOnly":false,"type":"boolean"},"services.riak-cs.extraAdvancedConfig":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"","description":"Additional text to be appended to <filename>advanced.config</filename>.\n","readOnly":false,"type":"string"},"services.riak-cs.extraConfig":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"","description":"Additional text to be appended to <filename>riak-cs.conf</filename>.\n","readOnly":false,"type":"string"},"services.riak-cs.listener":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"127.0.0.1:8080","description":"Name of Riak CS listening service.\n","readOnly":false,"type":"string"},"services.riak-cs.logDir":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"/var/log/riak-cs","description":"Log directory for Riak CS.\n","readOnly":false,"type":"path"},"services.riak-cs.nodeName":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"riak-cs@127.0.0.1","description":"Name of the Erlang node.\n","readOnly":false,"type":"string"},"services.riak-cs.package":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"pkgs.riak-cs","description":"Riak package to use.\n","example":{"_type":"literalExample","text":"pkgs.riak-cs"},"readOnly":false,"type":"package"},"services.riak-cs.riakHost":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"127.0.0.1:8087","description":"Name of riak hosting service.\n","readOnly":false,"type":"string"},"services.riak-cs.stanchionHost":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":"127.0.0.1:8085","description":"Name of stanchion hosting service.\n","readOnly":false,"type":"string"},"services.riak-cs.stanchionSsl":{"declarations":["nixos/modules/services/databases/riak-cs.nix"],"default":true,"description":"Tell stanchion to use SSL.\n","readOnly":false,"type":"boolean"},"services.riak.dataDir":{"declarations":["nixos/modules/services/databases/riak.nix"],"default":"/var/db/riak","description":"Data directory for Riak.\n","readOnly":false,"type":"path"},"services.riak.distributedCookie":{"declarations":["nixos/modules/services/databases/riak.nix"],"default":"riak","description":"Cookie for distributed node communication.  All nodes in the\nsame cluster should use the same cookie or they will not be able to\ncommunicate.\n","readOnly":false,"type":"string"},"services.riak.enable":{"declarations":["nixos/modules/services/databases/riak.nix"],"default":false,"description":"Whether to enable riak.","example":true,"readOnly":false,"type":"boolean"},"services.riak.extraAdvancedConfig":{"declarations":["nixos/modules/services/databases/riak.nix"],"default":"","description":"Additional text to be appended to <filename>advanced.config</filename>.\n","readOnly":false,"type":"string"},"services.riak.extraConfig":{"declarations":["nixos/modules/services/databases/riak.nix"],"default":"","description":"Additional text to be appended to <filename>riak.conf</filename>.\n","readOnly":false,"type":"string"},"services.riak.logDir":{"declarations":["nixos/modules/services/databases/riak.nix"],"default":"/var/log/riak","description":"Log directory for Riak.\n","readOnly":false,"type":"path"},"services.riak.nodeName":{"declarations":["nixos/modules/services/databases/riak.nix"],"default":"riak@127.0.0.1","description":"Name of the Erlang node.\n","readOnly":false,"type":"string"},"services.riak.package":{"declarations":["nixos/modules/services/databases/riak.nix"],"default":"pkgs.riak","description":"Riak package to use.\n","example":{"_type":"literalExample","text":"pkgs.riak"},"readOnly":false,"type":"package"},"services.riemann-dash.config":{"declarations":["nixos/modules/services/monitoring/riemann-dash.nix"],"description":"Contents added to the end of the riemann-dash configuration file.\n","readOnly":false,"type":"string"},"services.riemann-dash.dataDir":{"declarations":["nixos/modules/services/monitoring/riemann-dash.nix"],"default":"/var/riemann-dash","description":"Location of the riemann-base dir. The dashboard configuration file is\nis stored to this directory. The directory is created automatically on\nservice start, and owner is set to the riemanndash user.\n","readOnly":false,"type":"string"},"services.riemann-dash.enable":{"declarations":["nixos/modules/services/monitoring/riemann-dash.nix"],"default":false,"description":"Enable the riemann-dash dashboard daemon.\n","readOnly":false,"type":"boolean"},"services.riemann-tools.enableHealth":{"declarations":["nixos/modules/services/monitoring/riemann-tools.nix"],"default":false,"description":"Enable the riemann-health daemon.\n","readOnly":false,"type":"boolean"},"services.riemann-tools.riemannHost":{"declarations":["nixos/modules/services/monitoring/riemann-tools.nix"],"default":"127.0.0.1","description":"Address of the host riemann node. Defaults to localhost.\n","readOnly":false,"type":"string"},"services.riemann.config":{"declarations":["nixos/modules/services/monitoring/riemann.nix"],"description":"Contents of the Riemann configuration file.\n","readOnly":false,"type":"string"},"services.riemann.configFiles":{"declarations":["nixos/modules/services/monitoring/riemann.nix"],"default":[],"description":"Extra files containing Riemann configuration. These files will be\nloaded at runtime by Riemann (with Clojure's\n<literal>load-file</literal> function) at the end of the\nconfiguration.\n","readOnly":false,"type":"list of paths"},"services.riemann.enable":{"declarations":["nixos/modules/services/monitoring/riemann.nix"],"default":false,"description":"Enable the Riemann network monitoring daemon.\n","readOnly":false,"type":"boolean"},"services.riemann.extraClasspathEntries":{"declarations":["nixos/modules/services/monitoring/riemann.nix"],"default":[],"description":"Extra entries added to the Java classpath when running Riemann.\n","readOnly":false,"type":"list of strings"},"services.riemann.extraJavaOpts":{"declarations":["nixos/modules/services/monitoring/riemann.nix"],"default":[],"description":"Extra Java options used when launching Riemann.\n","readOnly":false,"type":"list of strings"},"services.rippleDataApi.couchdb.create":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":true,"description":"Whether to create couchdb database needed by ripple data api.","readOnly":false,"type":"boolean"},"services.rippleDataApi.couchdb.db":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":"rippled","description":"Ripple data api couchdb database.","readOnly":false,"type":"string"},"services.rippleDataApi.couchdb.host":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":"localhost","description":"Ripple data api couchdb host.","readOnly":false,"type":"string"},"services.rippleDataApi.couchdb.pass":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":"","description":"Ripple data api couchdb password.","readOnly":false,"type":"string"},"services.rippleDataApi.couchdb.port":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":5984,"description":"Ripple data api couchdb port.","readOnly":false,"type":"integer"},"services.rippleDataApi.couchdb.user":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":"rippled","description":"Ripple data api couchdb username.","readOnly":false,"type":"string"},"services.rippleDataApi.enable":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":false,"description":"Whether to enable ripple data api.","example":true,"readOnly":false,"type":"boolean"},"services.rippleDataApi.importMode":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":"liveOnly","description":"Ripple data api import mode.","readOnly":false,"type":"one of \"live\", \"liveOnly\""},"services.rippleDataApi.maxLedger":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":null,"description":"Ripple data api maximal ledger to fetch.","readOnly":false,"type":"null or integer"},"services.rippleDataApi.minLedger":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":null,"description":"Ripple data api minimal ledger to fetch.","readOnly":false,"type":"null or integer"},"services.rippleDataApi.port":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":5993,"description":"Ripple data api port","readOnly":false,"type":"integer"},"services.rippleDataApi.redis.enable":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":true,"description":"Whether to enable caching of ripple data to redis.","readOnly":false,"type":"boolean"},"services.rippleDataApi.redis.host":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":"localhost","description":"Ripple data api redis host.","readOnly":false,"type":"string"},"services.rippleDataApi.redis.port":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":5984,"description":"Ripple data api redis port.","readOnly":false,"type":"integer"},"services.rippleDataApi.rippleds":{"declarations":["nixos/modules/services/misc/ripple-data-api.nix"],"default":["http://s_east.ripple.com:51234","http://s_west.ripple.com:51234"],"description":"List of rippleds to be used by ripple data api.","readOnly":false,"type":"list of strings"},"services.rippleRest.dataDir":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":"/var/lib/ripple-rest","description":"Ripple rest data directory.","readOnly":false,"type":"path"},"services.rippleRest.dbPath":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":"/var/lib/ripple-rest/ripple-rest.db","description":"Ripple rest database path.","readOnly":false,"type":"path"},"services.rippleRest.debug":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":false,"description":"Whether to enable debug for ripple-rest.","example":true,"readOnly":false,"type":"boolean"},"services.rippleRest.enable":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":false,"description":"Whether to enable ripple rest.","example":true,"readOnly":false,"type":"boolean"},"services.rippleRest.host":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":"localhost","description":"Ripple rest host.","readOnly":false,"type":"string"},"services.rippleRest.maxTransactionFee":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":1000000,"description":"Ripple rest max transaction fee.","readOnly":false,"type":"integer"},"services.rippleRest.port":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":5990,"description":"Ripple rest port.","readOnly":false,"type":"integer"},"services.rippleRest.rippleds":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":["wss://s1.ripple.com:443"],"description":"List of rippled servers.","readOnly":false,"type":"list of strings"},"services.rippleRest.ssl.certPath":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":null,"description":"Path to the ripple rest cert file.","readOnly":false,"type":"null or path"},"services.rippleRest.ssl.enable":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":false,"description":"Whether to enable ssl.","example":true,"readOnly":false,"type":"boolean"},"services.rippleRest.ssl.keyPath":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":null,"description":"Path to the ripple rest key file.","readOnly":false,"type":"null or path"},"services.rippleRest.ssl.rejectUnathorized":{"declarations":["nixos/modules/services/misc/ripple-rest.nix"],"default":true,"description":"Whether to reject unatohroized.","readOnly":false,"type":"boolean"},"services.rippled.databasePath":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"/var/lib/rippled","description":"\t  Path to the ripple database.\n\t","readOnly":false,"type":"path"},"services.rippled.enable":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":false,"description":"Whether to enable rippled.","example":true,"readOnly":false,"type":"boolean"},"services.rippled.extraConfig":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"\t  Extra lines to be added verbatim to the rippled.cfg configuration file.\n\t","readOnly":false,"type":"unspecified"},"services.rippled.fetchDepth":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"full","description":"\t  The number of past ledgers to serve to other peers that request historical\n\t  ledger data (or \"full\" for no limit).\n\t","readOnly":false,"type":"integer or one of \"full\""},"services.rippled.importDb":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"Settings for performing a one-time import.","readOnly":false,"type":"null or submodule"},"services.rippled.importDb.advisoryDelete":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"\t        If set, then require administrative RPC call \"can_delete\"\n\t        to enable online deletion of ledger records.\n","readOnly":false,"type":"null or boolean"},"services.rippled.importDb.compression":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"Whether to enable snappy compression.","readOnly":false,"type":"null or boolean"},"services.rippled.importDb.extraOpts":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"Extra database options.","readOnly":false,"type":"string"},"services.rippled.importDb.onlineDelete":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":1296000,"description":"Enable automatic purging of older ledger information.","readOnly":false,"type":"null or integer"},"services.rippled.importDb.path":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"/var/lib/rippled","description":"Location to store the database.","readOnly":false,"type":"path"},"services.rippled.importDb.type":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"rocksdb","description":"Rippled database type.","readOnly":false,"type":"one of \"rocksdb\", \"nudb\""},"services.rippled.ips":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":["r.ripple.com 51235"],"description":"\t  List of hostnames or ips where the Ripple protocol is served.\n\t  For a starter list, you can either copy entries from:\n\t  https://ripple.com/ripple.txt or if you prefer you can let it\n\t   default to r.ripple.com 51235\n\n\t  A port may optionally be specified after adding a space to the\n\t  address. By convention, if known, IPs are listed in from most\n\t  to least trusted.\n\t","readOnly":false,"type":"list of strings"},"services.rippled.ipsFixed":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":[],"description":"\t  List of IP addresses or hostnames to which rippled should always\n\t  attempt to maintain peer connections with. This is useful for\n\t  manually forming private networks, for example to configure a\n\t  validation server that connects to the Ripple network through a\n\t  public-facing server, or for building a set of cluster peers.\n\n\t  A port may optionally be specified after adding a space to the address\n\t","readOnly":false,"type":"list of strings"},"services.rippled.ledgerHistory":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":1296000,"description":"\t  The number of past ledgers to acquire on server startup and the minimum\n\t  to maintain while running.\n\t","readOnly":false,"type":"integer or one of \"full\""},"services.rippled.logLevel":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"error","description":"Logging verbosity.","readOnly":false,"type":"one of \"debug\", \"error\", \"info\""},"services.rippled.nodeDb":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":{"extraOpts":"\t    open_files=2000\n\t    filter_bits=12\n\t    cache_mb=256\n\t    file_size_pb=8\n\t    file_size_mult=2;\n\t  ","type":"rocksdb"},"description":"Rippled main database options.","readOnly":false,"type":"null or submodule"},"services.rippled.nodeDb.advisoryDelete":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"\t        If set, then require administrative RPC call \"can_delete\"\n\t        to enable online deletion of ledger records.\n","readOnly":false,"type":"null or boolean"},"services.rippled.nodeDb.compression":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"Whether to enable snappy compression.","readOnly":false,"type":"null or boolean"},"services.rippled.nodeDb.extraOpts":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"Extra database options.","readOnly":false,"type":"string"},"services.rippled.nodeDb.onlineDelete":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":1296000,"description":"Enable automatic purging of older ledger information.","readOnly":false,"type":"null or integer"},"services.rippled.nodeDb.path":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"/var/lib/rippled","description":"Location to store the database.","readOnly":false,"type":"path"},"services.rippled.nodeDb.type":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"rocksdb","description":"Rippled database type.","readOnly":false,"type":"one of \"rocksdb\", \"nudb\""},"services.rippled.nodeSize":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"small","description":"\t  Rippled size of the node you are running.\n\t  \"tiny\", \"small\", \"medium\", \"large\", and \"huge\"\n\t","readOnly":false,"type":"one of \"tiny\", \"small\", \"medium\", \"large\", \"huge\""},"services.rippled.package":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"pkgs.rippled","description":"Which rippled package to use.","readOnly":false,"type":"package"},"services.rippled.ports":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":{"peer":{"ip":"0.0.0.0","port":51235,"protocol":["peer"]},"rpc":{"admin":["127.0.0.1"],"port":5005,"protocol":["http"]},"ws_public":{"ip":"0.0.0.0","port":5006,"protocol":["ws","wss"]}},"description":"Ports exposed by rippled","readOnly":false,"type":"attribute set of submodules"},"services.rippled.ports.<name>.admin":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":["127.0.0.1"],"description":"A comma-separated list of admin IP addresses.","readOnly":false,"type":"list of strings"},"services.rippled.ports.<name>.ip":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"127.0.0.1","description":"Ip where rippled listens.","readOnly":false,"type":"string"},"services.rippled.ports.<name>.password":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"When set, these credentials will be required on HTTP/S requests.","readOnly":false,"type":"string"},"services.rippled.ports.<name>.port":{"declarations":["nixos/modules/services/misc/rippled.nix"],"description":"Port where rippled listens.","readOnly":false,"type":"integer"},"services.rippled.ports.<name>.protocol":{"declarations":["nixos/modules/services/misc/rippled.nix"],"description":"Protocols expose by rippled.","readOnly":false,"type":"list of one of \"http\", \"https\", \"ws\", \"wss\", \"peer\"s"},"services.rippled.ports.<name>.ssl.cert":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"\t    Specifies the path to the SSL certificate file in PEM format.\n\t    This is not needed if the chain includes it.\n\t  ","readOnly":false,"type":"null or path"},"services.rippled.ports.<name>.ssl.chain":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"\t    If you need a certificate chain, specify the path to the\n\t    certificate chain here. The chain may include the end certificate.\n\t  ","readOnly":false,"type":"null or path"},"services.rippled.ports.<name>.ssl.key":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"\t    Specifies the filename holding the SSL key in PEM format.\n\t  ","readOnly":false,"type":"null or path"},"services.rippled.ports.<name>.user":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"When set, these credentials will be required on HTTP/S requests.","readOnly":false,"type":"string"},"services.rippled.sntpServers":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":["time.windows.com","time.apple.com","time.nist.gov","pool.ntp.org"],"description":"\t  IP address or domain of NTP servers to use for time synchronization.;\n\t","readOnly":false,"type":"list of strings"},"services.rippled.statsd.address":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"127.0.0.1:8125","description":"The UDP address and port of the listening StatsD server.","readOnly":false,"type":"string"},"services.rippled.statsd.enable":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":false,"description":"Whether to enable statsd monitoring for rippled.","example":true,"readOnly":false,"type":"boolean"},"services.rippled.statsd.prefix":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"A string prepended to each collected metric.","readOnly":false,"type":"string"},"services.rippled.tempDb":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"Rippled temporary database options.","readOnly":false,"type":"null or submodule"},"services.rippled.tempDb.advisoryDelete":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"\t        If set, then require administrative RPC call \"can_delete\"\n\t        to enable online deletion of ledger records.\n","readOnly":false,"type":"null or boolean"},"services.rippled.tempDb.compression":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":null,"description":"Whether to enable snappy compression.","readOnly":false,"type":"null or boolean"},"services.rippled.tempDb.extraOpts":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"","description":"Extra database options.","readOnly":false,"type":"string"},"services.rippled.tempDb.onlineDelete":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":1296000,"description":"Enable automatic purging of older ledger information.","readOnly":false,"type":"null or integer"},"services.rippled.tempDb.path":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"/var/lib/rippled","description":"Location to store the database.","readOnly":false,"type":"path"},"services.rippled.tempDb.type":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":"rocksdb","description":"Rippled database type.","readOnly":false,"type":"one of \"rocksdb\", \"nudb\""},"services.rippled.validationQuorum":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":3,"description":"\t  The minimum number of trusted validations a ledger must have before\n\t  the server considers it fully validated.\n\t","readOnly":false,"type":"integer"},"services.rippled.validators":{"declarations":["nixos/modules/services/misc/rippled.nix"],"default":["n949f75evCHwgyP4fPVgaHqNHxUVN15PsJEZ3B3HnXPcPjcZAoy7  RL1","n9MD5h24qrQqiyBC8aeqqCWvpiBiYQ3jxSr91uiDvmrkyHRdYLUj  RL2","n9L81uNCaPgtUJfaHh89gmdvXKAmSt5Gdsw2g1iPWaPkAHW5Nm4C  RL3","n9KiYM9CgngLvtRCQHZwgC2gjpdaZcCcbt3VboxiNFcKuwFVujzS  RL4","n9LdgEtkmGB9E2h3K4Vp7iGUaKuq23Zr32ehxiU8FWY7xoxbWTSA  RL5"],"description":"\t  List of nodes to always accept as validators. Nodes are specified by domain\n\t  or public key.\n\t","readOnly":false,"type":"list of strings"},"services.rmilter.bindInetSockets":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":[],"description":"Inet addresses to listen (in format accepted by systemd.socket)\n","example":"[\"127.0.0.1:11990\"]\n","readOnly":false,"type":"list of strings"},"services.rmilter.bindUnixSockets":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":["/run/rmilter/rmilter.sock"],"description":"Unix domain sockets to listen for MTA requests.\n","example":"[ \"/run/rmilter.sock\"]\n","readOnly":false,"type":"list of strings"},"services.rmilter.debug":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":false,"description":"Whether to run the rmilter daemon in debug mode.","readOnly":false,"type":"unspecified"},"services.rmilter.enable":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":false,"description":"Whether to run the rmilter daemon.","readOnly":false,"type":"unspecified"},"services.rmilter.extraConfig":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":"","description":"Custom snippet to append to rmilter config","readOnly":false,"type":"string"},"services.rmilter.group":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":"rmilter","description":"Group to use when no root privileges are required.\n","readOnly":false,"type":"string"},"services.rmilter.postfix.configFragment":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":"smtpd_milters = unix:/run/rmilter/rmilter.sock\n# or for TCP socket\n# # smtpd_milters = inet:localhost:9900\nmilter_protocol = 6\nmilter_mail_macros = i {mail_addr} {client_addr} {client_name} {auth_authen}\n# skip mail without checks if milter will die\nmilter_default_action = accept\n","description":"Addon to postfix configuration","readOnly":false,"type":"string"},"services.rmilter.postfix.enable":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":false,"description":"Add rmilter to postfix main.conf","readOnly":false,"type":"boolean"},"services.rmilter.rspamd.enable":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":false,"description":"Whether to use rspamd to filter mails","readOnly":false,"type":"unspecified"},"services.rmilter.rspamd.extraConfig":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":"","description":"Custom snippet to append to end of `spamd' section","readOnly":false,"type":"string"},"services.rmilter.rspamd.rejectMessage":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":"Spam message rejected; If this is not spam contact abuse","description":"reject message for spam","readOnly":false,"type":"string"},"services.rmilter.rspamd.servers":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":["r:/run/rspamd/rspamd.sock"],"description":"Spamd socket definitions.\nIs server name is prefixed with r: it is rspamd server.\n","readOnly":false,"type":"list of strings"},"services.rmilter.rspamd.whitelist":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":[],"description":"list of ips or nets that should be not checked with spamd","readOnly":false,"type":"list of strings"},"services.rmilter.socketActivation":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":true,"description":"Enable systemd socket activation for rmilter.\n(disabling socket activation not recommended\nwhen unix socket used, and follow to wrong\npermissions on unix domain socket.)\n","readOnly":false,"type":"boolean"},"services.rmilter.user":{"declarations":["nixos/modules/services/mail/rmilter.nix"],"default":"rmilter","description":"User to use when no root privileges are required.\n","readOnly":false,"type":"string"},"services.rogue.enable":{"declarations":["nixos/modules/services/misc/rogue.nix"],"default":false,"description":"Whether to enable the Rogue game on one of the virtual\nconsoles.\n","readOnly":false,"type":"boolean"},"services.rogue.tty":{"declarations":["nixos/modules/services/misc/rogue.nix"],"default":"tty9","description":"Virtual console on which to run Rogue.\n","readOnly":false,"type":"string"},"services.rpcbind.enable":{"declarations":["nixos/modules/services/networking/rpcbind.nix"],"default":false,"description":"Whether to enable `rpcbind', an ONC RPC directory service\nnotably used by NFS and NIS, and which can be queried\nusing the rpcinfo(1) command. `rpcbind` is a replacement for\n`portmap`.\n","readOnly":false,"type":"boolean"},"services.rsnapshot.cronIntervals":{"declarations":["nixos/modules/services/backup/rsnapshot.nix"],"default":{},"description":"Periodicity at which intervals should be run by cron.\nNote that the intervals also have to exist in configuration\nas retain options.\n","example":{"daily":"50 21 * * *","hourly":"0 * * * *"},"readOnly":false,"type":"attribute set of strings"},"services.rsnapshot.enable":{"declarations":["nixos/modules/services/backup/rsnapshot.nix"],"default":false,"description":"Whether to enable rsnapshot backups.","example":true,"readOnly":false,"type":"boolean"},"services.rsnapshot.enableManualRsnapshot":{"declarations":["nixos/modules/services/backup/rsnapshot.nix"],"default":true,"description":"Whether to enable manual usage of the rsnapshot command with this module.","example":false,"readOnly":false,"type":"boolean"},"services.rsnapshot.extraConfig":{"declarations":["nixos/modules/services/backup/rsnapshot.nix"],"default":"","description":"rsnapshot configuration option in addition to the defaults from\nrsnapshot and this module.\n\nNote that tabs are required to separate option arguments, and\ndirectory names require trailing slashes.\n\nThe \"extra\" in the option name might be a little misleading right\nnow, as it is required to get a functional configuration.\n","example":"retains\thourly\t24\nretain\tdaily\t365\nbackup\t/home/\tlocalhost/\n","readOnly":false,"type":"string"},"services.rspamd.bindSocket":{"declarations":["nixos/modules/services/mail/rspamd.nix"],"default":["/run/rspamd/rspamd.sock mode=0666 owner=rspamd"],"description":"List of sockets to listen, in format acceptable by rspamd\n","example":"bindSocket = [\n  \"/run/rspamd.sock mode=0666 owner=rspamd\"\n  \"*:11333\"\n];\n","readOnly":false,"type":"list of strings"},"services.rspamd.bindUISocket":{"declarations":["nixos/modules/services/mail/rspamd.nix"],"default":["localhost:11334"],"description":"List of sockets for web interface, in format acceptable by rspamd\n","readOnly":false,"type":"list of strings"},"services.rspamd.debug":{"declarations":["nixos/modules/services/mail/rspamd.nix"],"default":false,"description":"Whether to run the rspamd daemon in debug mode.","readOnly":false,"type":"unspecified"},"services.rspamd.enable":{"declarations":["nixos/modules/services/mail/rspamd.nix"],"default":false,"description":"Whether to enable Whether to run the rspamd daemon..","example":true,"readOnly":false,"type":"boolean"},"services.rspamd.group":{"declarations":["nixos/modules/services/mail/rspamd.nix"],"default":"rspamd","description":"Group to use when no root privileges are required.\n","readOnly":false,"type":"string"},"services.rspamd.user":{"declarations":["nixos/modules/services/mail/rspamd.nix"],"default":"rspamd","description":"User to use when no root privileges are required.\n","readOnly":false,"type":"string"},"services.rsyncd.address":{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":"","description":"IP address the daemon will listen on; rsyncd will listen on\nall addresses if this is not specified.\n","example":"192.168.1.2","readOnly":false,"type":"unspecified"},"services.rsyncd.enable":{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":false,"description":"Whether to enable the rsync daemon.","readOnly":false,"type":"unspecified"},"services.rsyncd.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":"","description":"Lines of configuration to add to rsyncd globally.\nSee <command>man rsyncd.conf</command> for options.\n","readOnly":false,"type":"string"},"services.rsyncd.modules":{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":{},"description":"A set describing exported directories.\nSee <command>man rsyncd.conf</command> for options.\n","example":{"srv":{"comment":"Public rsync share.","path":"/srv","read only":"yes"}},"readOnly":false,"type":"attribute set of attribute set of stringss"},"services.rsyncd.motd":{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":"","description":"Message of the day to display to clients on each connect.\nThis usually contains site information and any legal notices.\n","readOnly":false,"type":"string"},"services.rsyncd.port":{"declarations":["nixos/modules/services/network-filesystems/rsyncd.nix"],"default":873,"description":"TCP port the daemon will listen on.","readOnly":false,"type":"integer"},"services.rsyslogd.defaultConfig":{"declarations":["nixos/modules/services/logging/rsyslogd.nix"],"default":"# \"local1\" is used for dhcpd messages.\nlocal1.*                     -/var/log/dhcpd\n\nmail.*                       -/var/log/mail\n\n*.=warning;*.=err            -/var/log/warn\n*.crit                        /var/log/warn\n\n*.*;mail.none;local1.none    -/var/log/messages\n","description":"The default <filename>syslog.conf</filename> file configures a\nfairly standard setup of log files, which can be extended by\nmeans of <varname>extraConfig</varname>.\n","readOnly":false,"type":"string"},"services.rsyslogd.enable":{"declarations":["nixos/modules/services/logging/rsyslogd.nix"],"default":false,"description":"Whether to enable syslogd.  Note that systemd also logs\nsyslog messages, so you normally don't need to run syslogd.\n","readOnly":false,"type":"boolean"},"services.rsyslogd.extraConfig":{"declarations":["nixos/modules/services/logging/rsyslogd.nix"],"default":"","description":"Additional text appended to <filename>syslog.conf</filename>,\ni.e. the contents of <varname>defaultConfig</varname>.\n","example":"news.* -/var/log/news","readOnly":false,"type":"string"},"services.rsyslogd.extraParams":{"declarations":["nixos/modules/services/logging/rsyslogd.nix"],"default":[],"description":"Additional parameters passed to <command>rsyslogd</command>.\n","example":["-m 0"],"readOnly":false,"type":"list of strings"},"services.sabnzbd.configFile":{"declarations":["nixos/modules/services/networking/sabnzbd.nix"],"default":"/var/lib/sabnzbd/sabnzbd.ini","description":"Path to config file.","readOnly":false,"type":"unspecified"},"services.sabnzbd.enable":{"declarations":["nixos/modules/services/networking/sabnzbd.nix"],"default":false,"description":"Whether to enable the sabnzbd server.","readOnly":false,"type":"unspecified"},"services.sabnzbd.group":{"declarations":["nixos/modules/services/networking/sabnzbd.nix"],"default":"sabnzbd","description":"Group to run the service as","readOnly":false,"type":"unspecified"},"services.sabnzbd.user":{"declarations":["nixos/modules/services/networking/sabnzbd.nix"],"default":"sabnzbd","description":"User to run the service as","readOnly":false,"type":"unspecified"},"services.samba.configText":{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":null,"description":"Verbatim contents of smb.conf. If null (default), use the\nautogenerated file from NixOS instead.\n","readOnly":false,"type":"null or string"},"services.samba.enable":{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":false,"description":"Whether to enable Samba, which provides file and print\nservices to Windows clients through the SMB/CIFS protocol.\n\n<note>\n  <para>If you use the firewall consider adding the following:</para>\n  <programlisting>\n    networking.firewall.allowedTCPPorts = [ 139 445 ];\n    networking.firewall.allowedUDPPorts = [ 137 138 ];\n  </programlisting>\n</note>\n","readOnly":false,"type":"boolean"},"services.samba.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"","description":"Additional global section and extra section lines go in here.\n","example":"guest account = nobody\nmap to guest = bad user\n","readOnly":false,"type":"string"},"services.samba.invalidUsers":{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":["root"],"description":"List of users who are denied to login via Samba.\n","readOnly":false,"type":"list of strings"},"services.samba.nsswins":{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":false,"description":"Whether to enable the WINS NSS (Name Service Switch) plug-in.\nEnabling it allows applications to resolve WINS/NetBIOS names (a.k.a.\nWindows machine names) by transparently querying the winbindd daemon.\n","readOnly":false,"type":"boolean"},"services.samba.package":{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"pkgs.samba","description":"Defines which package should be used for the samba server.\n","example":{"_type":"literalExample","text":"pkgs.samba3"},"readOnly":false,"type":"package"},"services.samba.securityType":{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":"user","description":"Samba security type","example":"share","readOnly":false,"type":"string"},"services.samba.shares":{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":{},"description":"A set describing shared resources.\nSee <command>man smb.conf</command> for options.\n","example":{"public":{"browseable":"yes","comment":"Public samba share.","guest ok":"yes","path":"/srv/public","read only":true}},"readOnly":false,"type":"attribute set of attribute set of unspecifiedss"},"services.samba.syncPasswordsByPam":{"declarations":["nixos/modules/services/network-filesystems/samba.nix"],"default":false,"description":"Enabling this will add a line directly after pam_unix.so.\nWhenever a password is changed the samba password will be updated as well.\nHowever, you still have to add the samba password once, using smbpasswd -a user.\nIf you don't want to maintain an extra password database, you still can send plain text\npasswords which is not secure.\n","readOnly":false,"type":"boolean"},"services.saned.enable":{"declarations":["nixos/modules/services/hardware/sane.nix"],"default":false,"description":"Enable saned network daemon for remote connection to scanners.\n\nsaned would be runned from <literal>scanner</literal> user; to allow\naccess to hardware that doesn't have <literal>scanner</literal> group\nyou should add needed groups to this user.\n","readOnly":false,"type":"boolean"},"services.saned.extraConfig":{"declarations":["nixos/modules/services/hardware/sane.nix"],"default":"","description":"Extra saned configuration lines.\n","example":"192.168.0.0/24","readOnly":false,"type":"string"},"services.scollector.bosunHost":{"declarations":["nixos/modules/services/monitoring/scollector.nix"],"default":"localhost:8070","description":"Host and port of the bosun server that will store the collected\ndata.\n","readOnly":false,"type":"string"},"services.scollector.collectors":{"declarations":["nixos/modules/services/monitoring/scollector.nix"],"default":{},"description":"An attribute set mapping the frequency of collection to a list of\nbinaries that should be executed at that frequency. You can use \"0\"\nto run a binary forever.\n","example":{"_type":"literalExample","text":"{ \"0\" = [ \"${postgresStats}/bin/collect-stats\" ]; }"},"readOnly":false,"type":"attribute set of list of pathss"},"services.scollector.enable":{"declarations":["nixos/modules/services/monitoring/scollector.nix"],"default":false,"description":"Whether to run scollector.\n","readOnly":false,"type":"boolean"},"services.scollector.extraConfig":{"declarations":["nixos/modules/services/monitoring/scollector.nix"],"default":"","description":"Extra scollector configuration added to the end of scollector.toml\n","readOnly":false,"type":"string"},"services.scollector.extraOpts":{"declarations":["nixos/modules/services/monitoring/scollector.nix"],"default":[],"description":"Extra scollector command line options\n","example":["-d"],"readOnly":false,"type":"list of strings"},"services.scollector.group":{"declarations":["nixos/modules/services/monitoring/scollector.nix"],"default":"scollector","description":"Group account under which scollector runs.\n","readOnly":false,"type":"string"},"services.scollector.package":{"declarations":["nixos/modules/services/monitoring/scollector.nix"],"default":"pkgs.scollector","description":"scollector binary to use.\n","example":{"_type":"literalExample","text":"pkgs.scollector"},"readOnly":false,"type":"package"},"services.scollector.user":{"declarations":["nixos/modules/services/monitoring/scollector.nix"],"default":"scollector","description":"User account under which scollector runs.\n","readOnly":false,"type":"string"},"services.searx.configFile":{"declarations":["nixos/modules/services/networking/searx.nix"],"default":"","description":"\n          The path of the Searx server configuration file. If no file\n          is specified, a default file is used (default config file has\n          debug mode enabled).\n        ","readOnly":false,"type":"unspecified"},"services.searx.enable":{"declarations":["nixos/modules/services/networking/searx.nix"],"default":false,"description":"\n          Whether to enable the Searx server. See https://github.com/asciimoo/searx\n        ","readOnly":false,"type":"unspecified"},"services.seeks.confDir":{"declarations":["nixos/modules/services/networking/seeks.nix"],"default":"","description":"\n          The Seeks server configuration. If it is not specified,\n          a default configuration is used.\n        ","readOnly":false,"type":"string"},"services.seeks.enable":{"declarations":["nixos/modules/services/networking/seeks.nix"],"default":false,"description":"\n          Whether to enable the Seeks server.\n        ","readOnly":false,"type":"boolean"},"services.selfoss.database.host":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":"localhost","description":"Host of the database (has no effect if type is \"sqlite\").\n","readOnly":false,"type":"string"},"services.selfoss.database.name":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":"tt_rss","description":"Name of the existing database (has no effect if type is \"sqlite\").\n","readOnly":false,"type":"string"},"services.selfoss.database.password":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":null,"description":"The database user's password (has no effect if type is \"sqlite\").\n","readOnly":false,"type":"null or string"},"services.selfoss.database.port":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":null,"description":"The database's port. If not set, the default ports will be\nprovided (5432 and 3306 for pgsql and mysql respectively)\n(has no effect if type is \"sqlite\").\n","readOnly":false,"type":"null or integer"},"services.selfoss.database.type":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":"sqlite","description":"Database to store feeds. Supported are sqlite, pgsql and mysql.\n","readOnly":false,"type":"one of \"pgsql\", \"mysql\", \"sqlite\""},"services.selfoss.database.user":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":"tt_rss","description":"The database user. The user must exist and has access to\nthe specified database (has no effect if type is \"sqlite\").\n","readOnly":false,"type":"string"},"services.selfoss.enable":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":false,"description":"Whether to enable selfoss.","example":true,"readOnly":false,"type":"boolean"},"services.selfoss.extraConfig":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":"","description":"Extra configuration added to config.ini\n","readOnly":false,"type":"string"},"services.selfoss.pool":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":"selfoss_pool","description":"Name of existing phpfpm pool that is used to run web-application.\nIf not specified a pool will be created automatically with\ndefault values.\n","readOnly":false,"type":"string"},"services.selfoss.user":{"declarations":["nixos/modules/services/web-apps/selfoss.nix"],"default":"nginx","description":"User account under which both the service and the web-application run.\n","example":"nginx","readOnly":false,"type":"string"},"services.shairport-sync.arguments":{"declarations":["nixos/modules/services/networking/shairport-sync.nix"],"default":"-v -o pulse","description":"Arguments to pass to the daemon. Defaults to a local pulseaudio\nserver.\n","readOnly":false,"type":"unspecified"},"services.shairport-sync.enable":{"declarations":["nixos/modules/services/networking/shairport-sync.nix"],"default":false,"description":"Enable the shairport-sync daemon.\n\nRunning with a local system-wide or remote pulseaudio server\nis recommended.\n","readOnly":false,"type":"unspecified"},"services.shairport-sync.user":{"declarations":["nixos/modules/services/networking/shairport-sync.nix"],"default":"shairport","description":"User account name under which to run shairport-sync. The account\nwill be created.\n","readOnly":false,"type":"unspecified"},"services.shellinabox.certDirectory":{"declarations":["nixos/modules/services/web-servers/shellinabox.nix"],"default":null,"description":"The daemon will look in this directory far any certificates.\nIf the browser negotiated a Server Name Identification the daemon\nwill look for a matching certificate-SERVERNAME.pem file. If no SNI\nhandshake takes place, it will fall back on using the certificate in the\ncertificate.pem file.\n\nIf no suitable certificate is installed, shellinaboxd will attempt to\ncreate a new self-signed certificate. This will only succeed if, after\ndropping privileges, shellinaboxd has write permissions for this\ndirectory.\n","example":"/var/certs","readOnly":false,"type":"null or path"},"services.shellinabox.certFile":{"declarations":["nixos/modules/services/web-servers/shellinabox.nix"],"default":null,"description":"Path to server SSL certificate.","example":"/var/certificate.pem","readOnly":false,"type":"null or path"},"services.shellinabox.enable":{"declarations":["nixos/modules/services/web-servers/shellinabox.nix"],"default":false,"description":"Whether to enable shellinabox daemon.","example":true,"readOnly":false,"type":"boolean"},"services.shellinabox.enableSSL":{"declarations":["nixos/modules/services/web-servers/shellinabox.nix"],"default":false,"description":"Whether or not to enable SSL (https) support.\n","readOnly":false,"type":"boolean"},"services.shellinabox.extraOptions":{"declarations":["nixos/modules/services/web-servers/shellinabox.nix"],"default":[],"description":"A list of strings to be appended to the command line arguments\nfor shellinaboxd. Please see the manual page\n<link xlink:href=\"https://code.google.com/p/shellinabox/wiki/shellinaboxd_man\"/>\nfor a full list of available arguments.\n","example":["--port=443","--service /:LOGIN"],"readOnly":false,"type":"list of strings"},"services.shellinabox.user":{"declarations":["nixos/modules/services/web-servers/shellinabox.nix"],"default":"root","description":"User to run shellinaboxd as. If started as root, the server drops\nprivileges by changing to nobody, unless overridden by the\n<literal>--user</literal> option.\n","readOnly":false,"type":"string"},"services.shout.config":{"declarations":["nixos/modules/services/networking/shout.nix"],"default":{},"description":"Shout <filename>config.js</filename> contents as attribute set (will be\nconverted to JSON to generate the configuration file).\n\nThe options defined here will be merged to the default configuration file.\n\nDocumentation: http://shout-irc.com/docs/server/configuration.html\n","example":{"defaults":{"host":"localhost","name":"Your Network","port":6697},"displayNetwork":false},"readOnly":false,"type":"attribute set"},"services.shout.configFile":{"declarations":["nixos/modules/services/networking/shout.nix"],"default":null,"description":"Contents of Shout's <filename>config.js</filename> file.\n\nUsed for backward compatibility, recommended way is now to use\nthe <literal>config</literal> option.\n\nDocumentation: http://shout-irc.com/docs/server/configuration.html\n","readOnly":false,"type":"null or string"},"services.shout.enable":{"declarations":["nixos/modules/services/networking/shout.nix"],"default":false,"description":"Whether to enable Shout web IRC client.","example":true,"readOnly":false,"type":"boolean"},"services.shout.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.shout.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.shout.listenAddress":{"declarations":["nixos/modules/services/networking/shout.nix"],"default":"0.0.0.0","description":"IP interface to listen on for http connections.","readOnly":false,"type":"string"},"services.shout.port":{"declarations":["nixos/modules/services/networking/shout.nix"],"default":9000,"description":"TCP port to listen on for http connections.","readOnly":false,"type":"integer"},"services.shout.private":{"declarations":["nixos/modules/services/networking/shout.nix"],"default":false,"description":"Make your shout instance private. You will need to configure user\naccounts by adding entries in <filename>/var/lib/shout/users</filename>.\n","readOnly":false,"type":"boolean"},"services.siproxd.enable":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":false,"description":"          Whether to enable the Siproxd SIP \n\t  proxy/masquerading daemon.\n","readOnly":false,"type":"boolean"},"services.siproxd.extraConfig":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":"","description":"Extra configuration to add to siproxd configuration.\n","readOnly":false,"type":"string"},"services.siproxd.hostsAllowReg":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":[],"description":"Acess control list for incoming SIP registrations.\n","example":["192.168.1.0/24","192.168.2.0/24"],"readOnly":false,"type":"list of strings"},"services.siproxd.hostsAllowSip":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":[],"description":"Acess control list for incoming SIP traffic.\n","example":["123.45.0.0/16","123.46.0.0/16"],"readOnly":false,"type":"list of strings"},"services.siproxd.hostsDenySip":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":[],"description":"          Acess control list for denying incoming\n\t   SIP registrations and traffic.\n","example":["10.0.0.0/8","11.0.0.0/8"],"readOnly":false,"type":"list of strings"},"services.siproxd.ifInbound":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"description":"Local network interface","example":"eth0","readOnly":false,"type":"string"},"services.siproxd.ifOutbound":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"description":"Public network interface","example":"ppp0","readOnly":false,"type":"string"},"services.siproxd.passwordFile":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":"","description":"Path to per-user password file.\n","readOnly":false,"type":"string"},"services.siproxd.rtpDscp":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":46,"description":"DSCP (differentiated services) value to be assigned\nto RTP packets. Allows QOS aware routers to handle \ndifferent types traffic with different priorities.\n","readOnly":false,"type":"integer"},"services.siproxd.rtpPortHigh":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":7089,"description":"Top of UDP port range for incoming and outgoing RTP traffic\n","readOnly":false,"type":"integer"},"services.siproxd.rtpPortLow":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":7070,"description":"Bottom of UDP port range for incoming and outgoing RTP traffic\n","readOnly":false,"type":"integer"},"services.siproxd.rtpTimeout":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":300,"description":"Timeout for an RTP stream. If for the specified \nnumber of seconds no data is relayed on an active\nstream, it is considered dead and will be killed.\n","readOnly":false,"type":"integer"},"services.siproxd.sipDscp":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":0,"description":"DSCP (differentiated services) value to be assigned\nto SIP packets. Allows QOS aware routers to handle \ndifferent types traffic with different priorities.\n","readOnly":false,"type":"integer"},"services.siproxd.sipListenPort":{"declarations":["nixos/modules/services/misc/siproxd.nix"],"default":5060,"description":"\t  Port to listen for incoming SIP messages.\n","readOnly":false,"type":"integer"},"services.sitecopy.backups":{"declarations":["nixos/modules/services/backup/sitecopy-backup.nix"],"default":[],"description":"List of attribute sets describing the backups.\n\nUsername/password are extracted from\n<filename>/var/spool/sitecopy/sitecopy.secrets</filename> at activation\ntime. The secrets file lines should have the following structure:\n<screen>\n  server username password\n</screen>\n","example":[{"https":true,"local":"/tmp/backup","name":"test","protocol":"webdav","remote":"/staff-groups/ewi/st/strategoxt/backup/test","server":"webdata.tudelft.nl","symlinks":"maintain"}],"readOnly":false,"type":"unspecified"},"services.sitecopy.enable":{"declarations":["nixos/modules/services/backup/sitecopy-backup.nix"],"default":false,"description":"Whether to enable <command>sitecopy</command> backups of specified\ndirectories.\n","readOnly":false,"type":"unspecified"},"services.sitecopy.period":{"declarations":["nixos/modules/services/backup/sitecopy-backup.nix"],"default":"15 04 * * *","description":"This option defines (in the format used by <command>cron</command>)\nwhen the <command>sitecopy</command> backups are to be run.\nThe default is to update at 04:15 (at night) every day.\n","readOnly":false,"type":"unspecified"},"services.skydns.address":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":"0.0.0.0:53","description":"Skydns address to bind to.","readOnly":false,"type":"string"},"services.skydns.domain":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":"skydns.local.","description":"Skydns default domain if not specified by etcd config.","readOnly":false,"type":"string"},"services.skydns.enable":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":false,"description":"Whether to enable skydns service.","example":true,"readOnly":false,"type":"boolean"},"services.skydns.etcd.caCert":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":null,"description":"Skydns path of TLS certificate authority public key.","readOnly":false,"type":"null or path"},"services.skydns.etcd.machines":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":["http://127.0.0.1:2379"],"description":"Skydns list of etcd endpoints to connect to.","readOnly":false,"type":"list of strings"},"services.skydns.etcd.tlsKey":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":null,"description":"Skydns path of TLS client certificate - private key.","readOnly":false,"type":"null or path"},"services.skydns.etcd.tlsPem":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":null,"description":"Skydns path of TLS client certificate - public key.","readOnly":false,"type":"null or path"},"services.skydns.extraConfig":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":{},"description":"Skydns attribute set of extra config options passed as environemnt variables.","readOnly":false,"type":"attribute set of strings"},"services.skydns.nameservers":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":[],"description":"Skydns list of nameservers to forward DNS requests to when not authoritative for a domain.","example":["8.8.8.8:53","8.8.4.4:53"],"readOnly":false,"type":"list of strings"},"services.skydns.package":{"declarations":["nixos/modules/services/networking/skydns.nix"],"default":"pkgs.skydns","description":"Skydns package to use.","readOnly":false,"type":"package"},"services.slurm.client.enable":{"declarations":["nixos/modules/services/computing/slurm/slurm.nix"],"default":false,"description":"Whether to enable slurm rlient daemon.","example":true,"readOnly":false,"type":"boolean"},"services.slurm.controlAddr":{"declarations":["nixos/modules/services/computing/slurm/slurm.nix"],"default":null,"description":"Name that ControlMachine should be referred to in establishing a\ncommunications path.\n","example":null,"readOnly":false,"type":"null or string"},"services.slurm.controlMachine":{"declarations":["nixos/modules/services/computing/slurm/slurm.nix"],"default":null,"description":"The short hostname of the machine where SLURM control functions are\nexecuted (i.e. the name returned by the command \"hostname -s\", use \"tux001\"\nrather than \"tux001.my.com\").\n","example":null,"readOnly":false,"type":"null or string"},"services.slurm.extraConfig":{"declarations":["nixos/modules/services/computing/slurm/slurm.nix"],"default":"","description":"Extra configuration options that will be added verbatim at\nthe end of the slurm configuration file.\n","readOnly":false,"type":"string"},"services.slurm.nodeName":{"declarations":["nixos/modules/services/computing/slurm/slurm.nix"],"default":null,"description":"Name that SLURM uses to refer to a node (or base partition for BlueGene\nsystems). Typically this would be the string that \"/bin/hostname -s\"\nreturns. Note that now you have to write node's parameters after the name.\n","example":"linux[1-32] CPUs=1 State=UNKNOWN","readOnly":false,"type":"null or string"},"services.slurm.package":{"declarations":["nixos/modules/services/computing/slurm/slurm.nix"],"default":"pkgs.slurm-llnl","description":"The package to use for slurm binaries.\n","example":{"_type":"literalExample","text":"pkgs.slurm-llnl-full"},"readOnly":false,"type":"package"},"services.slurm.partitionName":{"declarations":["nixos/modules/services/computing/slurm/slurm.nix"],"default":null,"description":"Name by which the partition may be referenced. Note that now you have\nto write patrition's parameters after the name.\n","example":"debug Nodes=linux[1-32] Default=YES MaxTime=INFINITE State=UP","readOnly":false,"type":"null or string"},"services.slurm.server.enable":{"declarations":["nixos/modules/services/computing/slurm/slurm.nix"],"default":false,"description":"Whether to enable slurm control daemon.","example":true,"readOnly":false,"type":"boolean"},"services.smartd.autodetect":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":true,"description":"Whenever smartd should monitor all devices connected to the\nmachine at the time it's being started (the default).\n\nSet to false to monitor the devices listed in\n<option>services.smartd.devices</option> only.\n","readOnly":false,"type":"boolean"},"services.smartd.defaults.autodetected":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":"-a","description":"Like <option>services.smartd.defaults.monitored</option>, but for the\nautodetected devices.\n","readOnly":false,"type":"string"},"services.smartd.defaults.monitored":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":"-a","description":"Common default options for explicitly monitored (listed in\n<option>services.smartd.devices</option>) devices.\n\nThe default value turns on monitoring of all the things (see\n<literal>man 5 smartd.conf</literal>).\n\nThe example also turns on SMART Automatic Offline Testing on\nstartup, and schedules short self-tests daily, and long\nself-tests weekly.\n","example":"-a -o on -s (S/../.././02|L/../../7/04)","readOnly":false,"type":"string"},"services.smartd.deviceOpts":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.smartd.defaults.monitored</option>.","readOnly":false,"type":"unspecified"},"services.smartd.devices":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":[],"description":"List of devices to monitor.","example":[{"device":"/dev/sda"},{"device":"/dev/sdb","options":"-d sat"}],"readOnly":false,"type":"list of submodules"},"services.smartd.devices.*.device":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"description":"Location of the device.","example":"/dev/sda","readOnly":false,"type":"string"},"services.smartd.devices.*.options":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":"","description":"Options that determine how smartd monitors the device.","example":"-d sat","readOnly":false,"type":"string"},"services.smartd.enable":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":false,"description":"Whether to enable smartd daemon from <literal>smartmontools</literal> package.","example":true,"readOnly":false,"type":"boolean"},"services.smartd.notifications.mail.enable":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":false,"description":"Whenever to send e-mail notifications.","readOnly":false,"type":"boolean"},"services.smartd.notifications.mail.mailer":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":"/var/setuid-wrappers/sendmail","description":"Sendmail-compatible binary to be used to send the messages.\n\nYou should probably enable\n<option>services.postfix</option> or some other MTA for\nthis to work.\n","readOnly":false,"type":"path"},"services.smartd.notifications.mail.recipient":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":"root","description":"Recipient of the notification messages.","readOnly":false,"type":"string"},"services.smartd.notifications.test":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":false,"description":"Whenever to send a test notification on startup.","readOnly":false,"type":"boolean"},"services.smartd.notifications.wall.enable":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":true,"description":"Whenever to send wall notifications to all users.","readOnly":false,"type":"boolean"},"services.smartd.notifications.x11.display":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":":0","description":"DISPLAY to send X11 notifications to.","readOnly":false,"type":"string"},"services.smartd.notifications.x11.enable":{"declarations":["nixos/modules/services/monitoring/smartd.nix"],"default":false,"description":"Whenever to send X11 xmessage notifications.","readOnly":false,"type":"boolean"},"services.smokeping.alertConfig":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"to = root@localhost\nfrom = smokeping@localhost\n","description":"Configuration for alerts.","example":{"_type":"literalExample","text":"to = alertee@address.somewhere\nfrom = smokealert@company.xy\n\n+someloss\ntype = loss\n# in percent\npattern = >0%,*12*,>0%,*12*,>0%\ncomment = loss 3 times  in a row;\n"},"readOnly":false,"type":"string"},"services.smokeping.config":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":null,"description":"Full smokeping config supplied by the user. Overrides and replaces any other configuration supplied.","readOnly":false,"type":"null or string"},"services.smokeping.databaseConfig":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"step     = 300\npings    = 20\n# consfn mrhb steps total\nAVERAGE  0.5   1  1008\nAVERAGE  0.5  12  4320\n    MIN  0.5  12  4320\n    MAX  0.5  12  4320\nAVERAGE  0.5 144   720\n    MAX  0.5 144   720\n    MIN  0.5 144   720\n\n","description":"Configure the ping frequency and retention of the rrd files.\n          Once set, changing the interval will require deletion or migration of all\n          the collected data.","example":{"_type":"literalExample","text":"          # near constant pings.\n\t\t\t\t\tstep     = 30\n\t\t\t\t\tpings    = 20\n\t\t\t\t\t# consfn mrhb steps total\n\t\t\t\t\tAVERAGE  0.5   1  10080\n\t\t\t\t\tAVERAGE  0.5  12  43200\n\t\t\t\t\t\t\tMIN  0.5  12  43200\n\t\t\t\t\t\t\tMAX  0.5  12  43200\n\t\t\t\t\tAVERAGE  0.5 144   7200\n\t\t\t\t\t\t\tMAX  0.5 144   7200\n\t\t\t\t\t\t\tMIN  0.5 144   7200\n\t\t\t\t"},"readOnly":false,"type":"string"},"services.smokeping.enable":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":false,"description":"Enable the smokeping service","readOnly":false,"type":"boolean"},"services.smokeping.extraConfig":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"","description":"Any additional customization not already included.","readOnly":false,"type":"string"},"services.smokeping.hostName":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"nixos","description":"DNS name for the urls generated in the cgi.","example":"somewhere.example.com","readOnly":false,"type":"string"},"services.smokeping.linkStyle":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"relative","description":"DNS name for the urls generated in the cgi.","example":"absolute","readOnly":false,"type":"one of \"original\", \"absolute\", \"relative\""},"services.smokeping.mailHost":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"","description":"Use this SMTP server to send alerts","example":"localhost","readOnly":false,"type":"string"},"services.smokeping.owner":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"nobody","description":"Real name of the owner of the instance","example":"Joe Admin","readOnly":false,"type":"string"},"services.smokeping.ownerEmail":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"no-reply@nixos","description":"Email contact for owner","example":"no-reply@yourdomain.com","readOnly":false,"type":"string"},"services.smokeping.package":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"pkgs.smokeping","description":"Specify a custom smokeping package","readOnly":false,"type":"package"},"services.smokeping.port":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":8081,"description":"TCP port to use for the web server.","example":8081,"readOnly":false,"type":"integer"},"services.smokeping.presentationConfig":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"+ charts\nmenu = Charts\ntitle = The most interesting destinations\n++ stddev\nsorter = StdDev(entries=>4)\ntitle = Top Standard Deviation\nmenu = Std Deviation\nformat = Standard Deviation %f\n++ max\nsorter = Max(entries=>5)\ntitle = Top Max Roundtrip Time\nmenu = by Max\nformat = Max Roundtrip Time %f seconds\n++ loss\nsorter = Loss(entries=>5)\ntitle = Top Packet Loss\nmenu = Loss\nformat = Packets Lost %f\n++ median\nsorter = Median(entries=>5)\ntitle = Top Median Roundtrip Time\nmenu = by Median\nformat = Median RTT %f seconds\n+ overview\nwidth = 600\nheight = 50\nrange = 10h\n+ detail\nwidth = 600\nheight = 200\nunison_tolerance = 2\n\"Last 3 Hours\"    3h\n\"Last 30 Hours\"   30h\n\"Last 10 Days\"    10d\n\"Last 360 Days\"   360d\n","description":"presentation graph style","readOnly":false,"type":"string"},"services.smokeping.presentationTemplate":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"${pkgs.smokeping}/etc/basepage.html.dist","description":"Default page layout for the web UI.","readOnly":false,"type":"string"},"services.smokeping.probeConfig":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"+ FPing\nbinary = /var/setuid-wrappers/fping\n","description":"Probe configuration","readOnly":false,"type":"string"},"services.smokeping.sendmail":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":null,"description":"Use this sendmail compatible script to deliver alerts","example":"/var/setuid-wrappers/sendmail","readOnly":false,"type":"null or path"},"services.smokeping.smokeMailTemplate":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"${pkgs.smokeping}/etc/smokemail.dist","description":"Specify the smokemail template for alerts.","readOnly":false,"type":"string"},"services.smokeping.targetConfig":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"\t\t\t\t\tprobe = FPing\n\t\t\t\t\tmenu = Top\n\t\t\t\t\ttitle = Network Latency Grapher\n\t\t\t\t\tremark = Welcome to the SmokePing website of xxx Company. \\\n\t\t\t\t\t\t\t\t\t Here you will learn all about the latency of our network.\n\t\t\t\t\t+ Local\n\t\t\t\t\tmenu = Local\n\t\t\t\t\ttitle = Local Network\n\t\t\t\t\t++ LocalMachine\n\t\t\t\t\tmenu = Local Machine\n\t\t\t\t\ttitle = This host\n\t\t\t\t\thost = localhost\n","description":"Target configuration","readOnly":false,"type":"string"},"services.smokeping.user":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":"smokeping","description":"User that runs smokeping and (optionally) thttpd","readOnly":false,"type":"string"},"services.smokeping.webService":{"declarations":["nixos/modules/services/networking/smokeping.nix"],"default":true,"description":"Enable a smokeping web interface","readOnly":false,"type":"boolean"},"services.sniproxy.config":{"declarations":["nixos/modules/services/networking/sniproxy.nix"],"default":"","description":"sniproxy.conf configuration excluding the daemon username and pid file.","example":{"_type":"literalExample","text":"  error_log {\n    filename /var/log/sniproxy/error.log\n  }\n  access_log {\n    filename /var/log/sniproxy/access.log\n  }\n  listen 443 {\n    proto tls\n  }\n  table {\n    example.com 192.0.2.10\n    example.net 192.0.2.20\n}\n"},"readOnly":false,"type":"string"},"services.sniproxy.enable":{"declarations":["nixos/modules/services/networking/sniproxy.nix"],"default":false,"description":"Whether to enable sniproxy server.","example":true,"readOnly":false,"type":"boolean"},"services.sniproxy.group":{"declarations":["nixos/modules/services/networking/sniproxy.nix"],"default":"sniproxy","description":"Group under which sniproxy runs.","readOnly":false,"type":"string"},"services.sniproxy.logDir":{"declarations":["nixos/modules/services/networking/sniproxy.nix"],"default":"/var/log/sniproxy/","description":"Location of the log directory for sniproxy.","readOnly":false,"type":"string"},"services.sniproxy.user":{"declarations":["nixos/modules/services/networking/sniproxy.nix"],"default":"sniproxy","description":"User account under which sniproxy runs.","readOnly":false,"type":"string"},"services.softether.dataDir":{"declarations":["nixos/modules/services/networking/softether.nix"],"default":"/var/lib/softether","description":"Data directory for SoftEther VPN.\n","readOnly":false,"type":"string"},"services.softether.enable":{"declarations":["nixos/modules/services/networking/softether.nix"],"default":false,"description":"Whether to enable SoftEther VPN services.","example":true,"readOnly":false,"type":"boolean"},"services.softether.vpnbridge.enable":{"declarations":["nixos/modules/services/networking/softether.nix"],"default":false,"description":"Whether to enable SoftEther VPN Bridge.","example":true,"readOnly":false,"type":"boolean"},"services.softether.vpnclient.down":{"declarations":["nixos/modules/services/networking/softether.nix"],"default":"","description":"Shell commands executed when the Virtual Network Adapter(s) is/are shutting down.\n","readOnly":false,"type":"string"},"services.softether.vpnclient.enable":{"declarations":["nixos/modules/services/networking/softether.nix"],"default":false,"description":"Whether to enable SoftEther VPN Client.","example":true,"readOnly":false,"type":"boolean"},"services.softether.vpnclient.up":{"declarations":["nixos/modules/services/networking/softether.nix"],"default":"","description":"Shell commands executed when the Virtual Network Adapter(s) is/are starting.\n","readOnly":false,"type":"string"},"services.softether.vpnserver.enable":{"declarations":["nixos/modules/services/networking/softether.nix"],"default":false,"description":"Whether to enable SoftEther VPN Server.","example":true,"readOnly":false,"type":"boolean"},"services.solr.enable":{"declarations":["nixos/modules/services/search/solr.nix"],"default":false,"description":"Enables the solr service.\n","readOnly":false,"type":"boolean"},"services.solr.extraJars":{"declarations":["nixos/modules/services/search/solr.nix"],"default":[],"description":"List of paths pointing to jars. Jars are copied to commonLibFolder to be available to java/solr.\n","readOnly":false,"type":"list of paths"},"services.solr.extraJavaOptions":{"declarations":["nixos/modules/services/search/solr.nix"],"default":[],"description":"Extra command line options given to the java process running\nsolr.\n","readOnly":false,"type":"list of strings"},"services.solr.extraWinstoneOptions":{"declarations":["nixos/modules/services/search/solr.nix"],"default":[],"description":"Extra command line options given to the Winstone, which is\nthe servlet container hosting solr.\n","readOnly":false,"type":"list of strings"},"services.solr.group":{"declarations":["nixos/modules/services/search/solr.nix"],"description":"The group that will own the working directory.\n","readOnly":false,"type":"string"},"services.solr.javaPackage":{"declarations":["nixos/modules/services/search/solr.nix"],"default":"pkgs.jre","description":"Which Java derivation to use for running solr.\n","readOnly":false,"type":"package"},"services.solr.log4jConfiguration":{"declarations":["nixos/modules/services/search/solr.nix"],"default":"log4j.rootLogger=INFO, stdout\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n\n","description":"Contents of the <literal>log4j.properties</literal> used. By default,\neverything is logged to stdout (picked up by systemd) with level INFO.\n","readOnly":false,"type":"string"},"services.solr.solrHome":{"declarations":["nixos/modules/services/search/solr.nix"],"description":"The solr home directory. It is your own responsibility to\nmake sure this directory contains a working solr configuration,\nand is writeable by the the user running the solr service.\nFailing to do so, the solr will not start properly.\n","readOnly":false,"type":"string"},"services.solr.solrPackage":{"declarations":["nixos/modules/services/search/solr.nix"],"default":"pkgs.solr","description":"Which solr derivation to use for running solr.\n","readOnly":false,"type":"package"},"services.solr.user":{"declarations":["nixos/modules/services/search/solr.nix"],"description":"The user that should run the solr process and.\nthe working directories.\n","readOnly":false,"type":"string"},"services.sonarr.enable":{"declarations":["nixos/modules/services/misc/sonarr.nix"],"default":false,"description":"Whether to enable Sonarr.","example":true,"readOnly":false,"type":"boolean"},"services.spamassassin.debug":{"declarations":["nixos/modules/services/mail/spamassassin.nix"],"default":false,"description":"Whether to run the SpamAssassin daemon in debug mode.","readOnly":false,"type":"unspecified"},"services.spamassassin.enable":{"declarations":["nixos/modules/services/mail/spamassassin.nix"],"default":false,"description":"Whether to run the SpamAssassin daemon.","readOnly":false,"type":"unspecified"},"services.spice-vdagentd.enable":{"declarations":["nixos/modules/services/misc/spice-vdagentd.nix"],"default":false,"description":"Whether to enable Spice guest vdagent daemon.","example":true,"readOnly":false,"type":"boolean"},"services.spiped.config":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":{},"description":"Configuration for a secure pipe daemon. The daemon can be\nstarted, stopped, or examined using\n<literal>systemctl</literal>, under the name\n<literal>spiped@foo</literal>.\n","example":{"_type":"literalExample","text":"{\n  pipe1 =\n    { keyfile = \"/var/lib/spiped/pipe1.key\";\n      encrypt = true;\n      source  = \"localhost:6000\";\n      target  = \"endpoint.example.com:7000\";\n    };\n  pipe2 =\n    { keyfile = \"/var/lib/spiped/pipe2.key\";\n      decrypt = true;\n      source  = \"0.0.0.0:7000\";\n      target  = \"localhost:3000\";\n    };\n}\n"},"readOnly":false,"type":"attribute set of submodules"},"services.spiped.config.<name>.decrypt":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":false,"description":"Take encrypted connections from the\n<literal>source</literal> socket and send unencrypted\nconnections to the <literal>target</literal> socket.\n","readOnly":false,"type":"boolean"},"services.spiped.config.<name>.disableKeepalives":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":false,"description":"Disable transport layer keep-alives.","readOnly":false,"type":"boolean"},"services.spiped.config.<name>.disableReresolution":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":false,"description":"Disable target address re-resolution.","readOnly":false,"type":"boolean"},"services.spiped.config.<name>.encrypt":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":false,"description":"Take unencrypted connections from the\n<literal>source</literal> socket and send encrypted\nconnections to the <literal>target</literal> socket.\n","readOnly":false,"type":"boolean"},"services.spiped.config.<name>.keyfile":{"declarations":["nixos/modules/services/networking/spiped.nix"],"description":"Name of a file containing the spiped key. As the\ndaemon runs as the <literal>spiped</literal> user, the\nkey file must be somewhere owned by that user. By\ndefault, we recommend putting the keys for any spipe\nservices in <literal>/var/lib/spiped</literal>.\n","readOnly":false,"type":"path"},"services.spiped.config.<name>.maxConns":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":100,"description":"Limit on the number of simultaneous connections allowed.\n","readOnly":false,"type":"integer"},"services.spiped.config.<name>.resolveRefresh":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":60,"description":"Resolution refresh time for the target socket, in seconds.\n","readOnly":false,"type":"integer"},"services.spiped.config.<name>.source":{"declarations":["nixos/modules/services/networking/spiped.nix"],"description":"Address on which spiped should listen for incoming\nconnections.  Must be in one of the following formats:\n<literal>/absolute/path/to/unix/socket</literal>,\n<literal>host.name:port</literal>,\n<literal>[ip.v4.ad.dr]:port</literal> or\n<literal>[ipv6::addr]:port</literal> - note that\nhostnames are resolved when spiped is launched and are\nnot re-resolved later; thus if DNS entries change\nspiped will continue to connect to the expired\naddress.\n","readOnly":false,"type":"string"},"services.spiped.config.<name>.target":{"declarations":["nixos/modules/services/networking/spiped.nix"],"description":"Address to which spiped should connect.","readOnly":false,"type":"string"},"services.spiped.config.<name>.timeout":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":5,"description":"Timeout, in seconds, after which an attempt to connect to\nthe target or a protocol handshake will be aborted (and the\nconnection dropped) if not completed\n","readOnly":false,"type":"integer"},"services.spiped.config.<name>.waitForDNS":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":false,"description":"Wait for DNS. Normally when <literal>spiped</literal> is\nlaunched it resolves addresses and binds to its source\nsocket before the parent process returns; with this option\nit will daemonize first and retry failed DNS lookups until\nthey succeed. This allows <literal>spiped</literal> to\nlaunch even if DNS isn't set up yet, but at the expense of\nlosing the guarantee that once <literal>spiped</literal> has\nfinished launching it will be ready to create pipes.\n","readOnly":false,"type":"boolean"},"services.spiped.config.<name>.weakHandshake":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":false,"description":"Use fast/weak handshaking: This reduces the CPU time spent\nin the initial connection setup, at the expense of losing\nperfect forward secrecy.\n","readOnly":false,"type":"boolean"},"services.spiped.enable":{"declarations":["nixos/modules/services/networking/spiped.nix"],"default":false,"description":"Enable the spiped service module.","readOnly":false,"type":"boolean"},"services.squeezelite.dataDir":{"declarations":["nixos/modules/services/audio/squeezelite.nix"],"default":"/var/lib/squeezelite","description":"The directory where Squeezelite stores its name file.\n","readOnly":false,"type":"string"},"services.squeezelite.enable":{"declarations":["nixos/modules/services/audio/squeezelite.nix"],"default":false,"description":"Whether to enable Squeezelite, a software Squeezebox emulator.","example":true,"readOnly":false,"type":"boolean"},"services.squeezelite.extraArguments":{"declarations":["nixos/modules/services/audio/squeezelite.nix"],"default":"","description":"Additional command line arguments to pass to Squeezelite.\n","readOnly":false,"type":"string"},"services.sshd.allowSFTP":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.openssh.allowSFTP</option>.","readOnly":false,"type":"unspecified"},"services.sshd.enable":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.openssh.enable</option>.","readOnly":false,"type":"unspecified"},"services.sshd.forwardX11":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.openssh.forwardX11</option>.","readOnly":false,"type":"unspecified"},"services.sshd.gatewayPorts":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.openssh.gatewayPorts</option>.","readOnly":false,"type":"unspecified"},"services.sshd.permitRootLogin":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.openssh.permitRootLogin</option>.","readOnly":false,"type":"unspecified"},"services.sshd.ports":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.openssh.ports</option>.","readOnly":false,"type":"unspecified"},"services.sslh.appendConfig":{"declarations":["nixos/modules/services/networking/sslh.nix"],"default":"protocols:\n(\n  { name: \"ssh\"; service: \"ssh\"; host: \"localhost\"; port: \"22\"; probe: \"builtin\"; },\n  { name: \"openvpn\"; host: \"localhost\"; port: \"1194\"; probe: \"builtin\"; },\n  { name: \"xmpp\"; host: \"localhost\"; port: \"5222\"; probe: \"builtin\"; },\n  { name: \"http\"; host: \"localhost\"; port: \"80\"; probe: \"builtin\"; },\n  { name: \"ssl\"; host: \"localhost\"; port: \"443\"; probe: \"builtin\"; },\n  { name: \"anyprot\"; host: \"localhost\"; port: \"443\"; probe: \"builtin\"; }\n);\n","description":"Verbatim configuration file.","readOnly":false,"type":"string"},"services.sslh.enable":{"declarations":["nixos/modules/services/networking/sslh.nix"],"default":false,"description":"Whether to enable sslh.","example":true,"readOnly":false,"type":"boolean"},"services.sslh.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.sslh.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.sslh.listenAddress":{"declarations":["nixos/modules/services/networking/sslh.nix"],"default":"nixos","description":"Listening hostname.","readOnly":false,"type":"string"},"services.sslh.pidfile":{"declarations":["nixos/modules/services/networking/sslh.nix"],"default":"/run/sslh.pid","description":"PID file path for sslh daemon.","readOnly":false,"type":"path"},"services.sslh.port":{"declarations":["nixos/modules/services/networking/sslh.nix"],"default":443,"description":"Listening port.","readOnly":false,"type":"integer"},"services.sslh.timeout":{"declarations":["nixos/modules/services/networking/sslh.nix"],"default":2,"description":"Timeout in seconds.","readOnly":false,"type":"integer"},"services.sslh.verbose":{"declarations":["nixos/modules/services/networking/sslh.nix"],"default":false,"description":"Verbose logs.","readOnly":false,"type":"boolean"},"services.stanchion.adminKey":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"","description":"Name of admin user.\n","readOnly":false,"type":"string"},"services.stanchion.adminSecret":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"","description":"Name of admin secret\n","readOnly":false,"type":"string"},"services.stanchion.dataDir":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"/var/db/stanchion","description":"Data directory for Stanchion.\n","readOnly":false,"type":"path"},"services.stanchion.distributedCookie":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"riak","description":"Cookie for distributed node communication.  All nodes in the\nsame cluster should use the same cookie or they will not be able to\ncommunicate.\n","readOnly":false,"type":"string"},"services.stanchion.enable":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":false,"description":"Whether to enable stanchion.","example":true,"readOnly":false,"type":"boolean"},"services.stanchion.extraConfig":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"","description":"Additional text to be appended to <filename>stanchion.conf</filename>.\n","readOnly":false,"type":"string"},"services.stanchion.listener":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"127.0.0.1:8085","description":"Name of Riak CS listening service.\n","readOnly":false,"type":"string"},"services.stanchion.logDir":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"/var/log/stanchion","description":"Log directory for Stanchino.\n","readOnly":false,"type":"path"},"services.stanchion.nodeName":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"stanchion@127.0.0.1","description":"Name of the Erlang node.\n","readOnly":false,"type":"string"},"services.stanchion.package":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"pkgs.stanchion","description":"Stanchion package to use.\n","example":{"_type":"literalExample","text":"pkgs.stanchion"},"readOnly":false,"type":"package"},"services.stanchion.riakHost":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"127.0.0.1:8087","description":"Name of riak hosting service.\n","readOnly":false,"type":"string"},"services.stanchion.stanchionHost":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":"127.0.0.1:8085","description":"Name of stanchion hosting service.\n","readOnly":false,"type":"string"},"services.stanchion.stanchionSsl":{"declarations":["nixos/modules/services/databases/stanchion.nix"],"default":true,"description":"Tell stanchion to use SSL.\n","readOnly":false,"type":"boolean"},"services.statsd.backends":{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":[],"description":"List of backends statsd will use for data persistence","example":["graphite","console","repeater","statsd-librato-backend","stackdriver-statsd-backend","statsd-influxdb-backend"],"readOnly":false,"type":"list of strings"},"services.statsd.enable":{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":false,"description":"Whether to enable statsd stats aggregation service","readOnly":false,"type":"boolean"},"services.statsd.extraConfig":{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"","description":"Extra configuration options for statsd","readOnly":false,"type":"null or string"},"services.statsd.graphiteHost":{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":null,"description":"Hostname or IP of Graphite server","readOnly":false,"type":"null or string"},"services.statsd.graphitePort":{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":null,"description":"Port of Graphite server (i.e. carbon-cache).","readOnly":false,"type":"null or integer"},"services.statsd.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.statsd.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.statsd.listenAddress":{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"127.0.0.1","description":"Address that statsd listens on over UDP","readOnly":false,"type":"string"},"services.statsd.mgmt_address":{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":"127.0.0.1","description":"Address to run management TCP interface on","readOnly":false,"type":"string"},"services.statsd.mgmt_port":{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":8126,"description":"Port to run the management TCP interface on","readOnly":false,"type":"integer"},"services.statsd.port":{"declarations":["nixos/modules/services/monitoring/statsd.nix"],"default":8125,"description":"Port that stats listens for messages on over UDP","readOnly":false,"type":"integer"},"services.strongswan.ca":{"declarations":["nixos/modules/services/networking/strongswan.nix"],"default":{},"description":"A set of CAs (certification authorities) and their options for\nthe ‘ca xxx’ sections of the <filename>ipsec.conf</filename>\nfile.\n","example":{"strongswan":{"auto":"add","cacert":"/run/keys/strongswanCert.pem","crluri":"http://crl2.strongswan.org/strongswan.crl"}},"readOnly":false,"type":"attribute set of attribute set of stringss"},"services.strongswan.connections":{"declarations":["nixos/modules/services/networking/strongswan.nix"],"default":{},"description":"A set of connections and their options for the ‘conn xxx’\nsections of the <filename>ipsec.conf</filename> file.\n","example":{"%default":{"keyexchange":"ikev2","keyingtries":"1"},"roadwarrior":{"auto":"add","leftcert":"/run/keys/moonCert.pem","leftid":"@moon.strongswan.org","leftsubnet":"10.1.0.0/16","right":"%any"}},"readOnly":false,"type":"attribute set of attribute set of stringss"},"services.strongswan.enable":{"declarations":["nixos/modules/services/networking/strongswan.nix"],"default":false,"description":"Whether to enable strongSwan.","example":true,"readOnly":false,"type":"boolean"},"services.strongswan.secrets":{"declarations":["nixos/modules/services/networking/strongswan.nix"],"default":[],"description":"A list of paths to IPSec secret files. These\nfiles will be included into the main ipsec.secrets file with\nthe <literal>include</literal> directive. It is safer if these\npaths are absolute.\n","example":["/run/keys/ipsec-foo.secret"],"readOnly":false,"type":"list of paths"},"services.strongswan.setup":{"declarations":["nixos/modules/services/networking/strongswan.nix"],"default":{},"description":"A set of options for the ‘config setup’ section of the\n<filename>ipsec.conf</filename> file. Defines general\nconfiguration parameters.\n","example":{"cachecrls":"yes","strictcrlpolicy":"yes"},"readOnly":false,"type":"attribute set of strings"},"services.subsonic.contextPath":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":"/","description":"The context path, i.e., the last part of the Subsonic\nURL. Typically '/' or '/subsonic'. Default '/'\n","readOnly":false,"type":"path"},"services.subsonic.defaultMusicFolder":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":"/var/music","description":"Configure Subsonic to use this folder for music.  This option\nonly has effect the first time Subsonic is started.\n","readOnly":false,"type":"path"},"services.subsonic.defaultPlaylistFolder":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":"/var/playlists","description":"Configure Subsonic to use this folder for playlists.  This option\nonly has effect the first time Subsonic is started.\n","readOnly":false,"type":"path"},"services.subsonic.defaultPodcastFolder":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":"/var/music/Podcast","description":"Configure Subsonic to use this folder for Podcasts.  This option\nonly has effect the first time Subsonic is started.\n","readOnly":false,"type":"path"},"services.subsonic.enable":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":false,"description":"Whether to enable Subsonic daemon.","example":true,"readOnly":false,"type":"boolean"},"services.subsonic.home":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":"/var/lib/subsonic","description":"The directory where Subsonic will create files.\nMake sure it is writable.\n","readOnly":false,"type":"path"},"services.subsonic.host":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.subsonic.listenAddress</option>.","readOnly":false,"type":"unspecified"},"services.subsonic.httpsPort":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":0,"description":"The port on which Subsonic will listen for\nincoming HTTPS traffic. Set to 0 to disable.\n","readOnly":false,"type":"integer"},"services.subsonic.listenAddress":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":"0.0.0.0","description":"The host name or IP address on which to bind Subsonic.\nOnly relevant if you have multiple network interfaces and want\nto make Subsonic available on only one of them. The default value\nwill bind Subsonic to all available network interfaces.\n","readOnly":false,"type":"string"},"services.subsonic.maxMemory":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":100,"description":"The memory limit (max Java heap size) in megabytes.\nDefault: 100\n","readOnly":false,"type":"integer"},"services.subsonic.port":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":4040,"description":"The port on which Subsonic will listen for\nincoming HTTP traffic. Set to 0 to disable.\n","readOnly":false,"type":"integer"},"services.subsonic.transcoders":{"declarations":["nixos/modules/services/misc/subsonic.nix"],"default":["${pkgs.ffmpeg.bin}/bin/ffmpeg"],"description":"List of paths to transcoder executables that should be accessible\nfrom Subsonic. Symlinks will be created to each executable inside\n/var/lib/subsonic/transcoders.\n","readOnly":false,"type":"list of paths"},"services.sundtek.enable":{"declarations":["nixos/modules/services/misc/sundtek.nix"],"default":false,"description":"Whether to enable Sundtek driver.","example":true,"readOnly":false,"type":"boolean"},"services.supybot.configFile":{"declarations":["nixos/modules/services/networking/supybot.nix"],"description":"Path to a supybot config file. This can be generated by\nrunning supybot-wizard.\n\nNote: all paths should include the full path to the stateDir\ndirectory (backup conf data logs logs/plugins plugins tmp web).\n","readOnly":false,"type":"path"},"services.supybot.enable":{"declarations":["nixos/modules/services/networking/supybot.nix"],"default":false,"description":"Enable Supybot, an IRC bot","readOnly":false,"type":"unspecified"},"services.supybot.stateDir":{"declarations":["nixos/modules/services/networking/supybot.nix"],"default":"/home/supybot","description":"The root directory, logs and plugins are stored here","readOnly":false,"type":"unspecified"},"services.svnserve.enable":{"declarations":["nixos/modules/services/misc/svnserve.nix"],"default":false,"description":"Whether to enable svnserve to serve Subversion repositories through the SVN protocol.","readOnly":false,"type":"unspecified"},"services.svnserve.svnBaseDir":{"declarations":["nixos/modules/services/misc/svnserve.nix"],"default":"/repos","description":"Base directory from which Subversion repositories are accessed.","readOnly":false,"type":"unspecified"},"services.syncthing.all_proxy":{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":null,"description":"Overwrites all_proxy environment variable for the syncthing process to\nthe given value. This is normaly used to let relay client connect\nthrough SOCKS5 proxy server.\n","example":"socks5://address.com:1234","readOnly":false,"type":"null or string"},"services.syncthing.dataDir":{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":"/var/lib/syncthing","description":"Path where the settings and keys will exist.\n","readOnly":false,"type":"path"},"services.syncthing.enable":{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":false,"description":"Whether to enable Syncthing - the self-hosted open-source alternative\nto Dropbox and Bittorrent Sync. Initial interface will be\navailable on http://127.0.0.1:8384/.\n.","example":true,"readOnly":false,"type":"boolean"},"services.syncthing.group":{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":"nogroup","description":"Syncthing will be run under this group (group will not be created if it doesn't exist.\nThis can be your user name).\n","readOnly":false,"type":"string"},"services.syncthing.openDefaultPorts":{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":false,"description":"Open the default ports in the firewall:\n  - TCP 22000 for transfers\n  - UDP 21027 for discovery\nIf multiple users are running syncthing on this machine, you will need to manually open a set of ports for each instance and leave this disabled.\nAlternatively, if are running only a single instance on this machine using the default ports, enable this.\n","example":{"_type":"literalExample","text":"true"},"readOnly":false,"type":"boolean"},"services.syncthing.package":{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":"pkgs.syncthing","description":"Syncthing package to use.\n","example":{"_type":"literalExample","text":"pkgs.syncthing"},"readOnly":false,"type":"package"},"services.syncthing.systemService":{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":true,"description":"Auto launch Syncthing as a system service.","readOnly":false,"type":"boolean"},"services.syncthing.useInotify":{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":false,"description":"Provide syncthing-inotify as a service.","readOnly":false,"type":"boolean"},"services.syncthing.user":{"declarations":["nixos/modules/services/networking/syncthing.nix"],"default":"syncthing","description":"Syncthing will be run under this user (user will be created if it doesn't exist.\nThis can be your user name).\n","readOnly":false,"type":"string"},"services.synergy.client.autoStart":{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":true,"description":"Whether the Synergy client should be started automatically.","readOnly":false,"type":"boolean"},"services.synergy.client.enable":{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":false,"description":"\n            Whether to enable the Synergy client (receive keyboard and mouse events from a Synergy server).\n          ","readOnly":false,"type":"unspecified"},"services.synergy.client.screenName":{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"Use the given name instead of the hostname to identify\nourselves to the server.\n","readOnly":false,"type":"unspecified"},"services.synergy.client.serverAddress":{"declarations":["nixos/modules/services/misc/synergy.nix"],"description":"The server address is of the form: [hostname][:port].  The\nhostname must be the address or hostname of the server.  The\nport overrides the default port, 24800.\n","readOnly":false,"type":"unspecified"},"services.synergy.server.address":{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"Address on which to listen for clients.","readOnly":false,"type":"unspecified"},"services.synergy.server.autoStart":{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":true,"description":"Whether the Synergy server should be started automatically.","readOnly":false,"type":"boolean"},"services.synergy.server.configFile":{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"/etc/synergy-server.conf","description":"The Synergy server configuration file.","readOnly":false,"type":"unspecified"},"services.synergy.server.enable":{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":false,"description":"Whether to enable the Synergy server (send keyboard and mouse events).\n","readOnly":false,"type":"unspecified"},"services.synergy.server.screenName":{"declarations":["nixos/modules/services/misc/synergy.nix"],"default":"","description":"Use the given name instead of the hostname to identify\nthis screen in the configuration.\n","readOnly":false,"type":"unspecified"},"services.syslog-ng.configHeader":{"declarations":["nixos/modules/services/logging/syslog-ng.nix"],"default":"@version: 3.6\n@include \"scl.conf\"\n","description":"The very first lines of the configuration file. Should usually contain\nthe syslog-ng version header.\n","readOnly":false,"type":"string"},"services.syslog-ng.enable":{"declarations":["nixos/modules/services/logging/syslog-ng.nix"],"default":false,"description":"Whether to enable the syslog-ng daemon.\n","readOnly":false,"type":"boolean"},"services.syslog-ng.extraConfig":{"declarations":["nixos/modules/services/logging/syslog-ng.nix"],"default":"","description":"Configuration added to the end of <literal>syslog-ng.conf</literal>.\n","readOnly":false,"type":"string"},"services.syslog-ng.extraModulePaths":{"declarations":["nixos/modules/services/logging/syslog-ng.nix"],"default":[],"description":"A list of paths that should be included in syslog-ng's\n<literal>--module-path</literal> option. They should usually\nend in <literal>/lib/syslog-ng</literal>\n","example":{"_type":"literalExample","text":"[ \"${pkgs.syslogng_incubator}/lib/syslog-ng\" ]\n"},"readOnly":false,"type":"list of strings"},"services.syslog-ng.package":{"declarations":["nixos/modules/services/logging/syslog-ng.nix"],"default":"pkgs.syslogng","description":"The package providing syslog-ng binaries.\n","readOnly":false,"type":"package"},"services.syslogd.defaultConfig":{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":"# Send emergency messages to all users.\n*.emerg                       *\n\n# \"local1\" is used for dhcpd messages.\nlocal1.*                     -/var/log/dhcpd\n\nmail.*                       -/var/log/mail\n\n*.=warning;*.=err            -/var/log/warn\n*.crit                        /var/log/warn\n\n*.*;mail.none;local1.none    -/var/log/messages\n","description":"The default <filename>syslog.conf</filename> file configures a\nfairly standard setup of log files, which can be extended by\nmeans of <varname>extraConfig</varname>.\n","readOnly":false,"type":"string"},"services.syslogd.enable":{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":false,"description":"Whether to enable syslogd.  Note that systemd also logs\nsyslog messages, so you normally don't need to run syslogd.\n","readOnly":false,"type":"boolean"},"services.syslogd.enableNetworkInput":{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":false,"description":"Accept logging through UDP. Option -r of syslogd(8).\n","readOnly":false,"type":"boolean"},"services.syslogd.extraConfig":{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":"","description":"Additional text appended to <filename>syslog.conf</filename>,\ni.e. the contents of <varname>defaultConfig</varname>.\n","example":"news.* -/var/log/news","readOnly":false,"type":"string"},"services.syslogd.extraParams":{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":[],"description":"Additional parameters passed to <command>syslogd</command>.\n","example":["-m 0"],"readOnly":false,"type":"list of strings"},"services.syslogd.tty":{"declarations":["nixos/modules/services/logging/syslogd.nix"],"default":"tty10","description":"The tty device on which syslogd will print important log\nmessages. Leave this option blank to disable tty logging.\n","readOnly":false,"type":"string"},"services.systemhealth.drives":{"declarations":["nixos/modules/services/monitoring/systemhealth.nix"],"default":[],"description":"Drives to monitor.\n","example":[{"name":"root","path":"/"}],"readOnly":false,"type":"unspecified"},"services.systemhealth.enable":{"declarations":["nixos/modules/services/monitoring/systemhealth.nix"],"default":false,"description":"Enable the system health monitor and its generation of graphs.\n","readOnly":false,"type":"unspecified"},"services.systemhealth.interfaces":{"declarations":["nixos/modules/services/monitoring/systemhealth.nix"],"default":["lo"],"description":"Interfaces to monitor (minimum one).\n","example":["lo","eth0","eth1"],"readOnly":false,"type":"unspecified"},"services.systemhealth.urlPrefix":{"declarations":["nixos/modules/services/monitoring/systemhealth.nix"],"default":"/health","description":"The URL prefix under which the System Health web pages appear in httpd.\n","readOnly":false,"type":"unspecified"},"services.tahoe.introducers":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":{},"description":"The Tahoe introducers.\n","readOnly":false,"type":"list or attribute set of submodules"},"services.tahoe.introducers.<name?>.nickname":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"description":"The nickname of this Tahoe introducer.\n","readOnly":false,"type":"string"},"services.tahoe.introducers.<name?>.package":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":"pkgs.tahoelafs","description":"The package to use for the Tahoe LAFS daemon.\n","example":{"_type":"literalExample","text":"pkgs.tahoelafs"},"readOnly":false,"type":"package"},"services.tahoe.introducers.<name?>.tub.location":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":null,"description":"The external location that the introducer should listen on.\n\nIf specified, the port should be included.\n","readOnly":false,"type":"null or string"},"services.tahoe.introducers.<name?>.tub.port":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":3458,"description":"The port on which the introducer will listen.\n","readOnly":false,"type":"integer"},"services.tahoe.nodes":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":{},"description":"The Tahoe nodes.\n","readOnly":false,"type":"list or attribute set of submodules"},"services.tahoe.nodes.<name?>.client.helper":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":null,"description":"The furl for a Tahoe helper node.\n\nLike all furls, keep this safe and don't share it.\n","readOnly":false,"type":"null or string"},"services.tahoe.nodes.<name?>.client.introducer":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":null,"description":"The furl for a Tahoe introducer node.\n\nLike all furls, keep this safe and don't share it.\n","readOnly":false,"type":"null or string"},"services.tahoe.nodes.<name?>.client.shares.happy":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":7,"description":"The number of distinct storage nodes required to store\na file.\n","readOnly":false,"type":"integer"},"services.tahoe.nodes.<name?>.client.shares.needed":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":3,"description":"The number of shares required to reconstitute a file.\n","readOnly":false,"type":"integer"},"services.tahoe.nodes.<name?>.client.shares.total":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":10,"description":"The number of shares required to store a file.\n","readOnly":false,"type":"integer"},"services.tahoe.nodes.<name?>.helper.enable":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":false,"description":"Whether to enable helper service.","example":true,"readOnly":false,"type":"boolean"},"services.tahoe.nodes.<name?>.nickname":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"description":"The nickname of this Tahoe node.\n","readOnly":false,"type":"string"},"services.tahoe.nodes.<name?>.package":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":"pkgs.tahoelafs","description":"The package to use for the Tahoe LAFS daemon.\n","example":{"_type":"literalExample","text":"pkgs.tahoelafs"},"readOnly":false,"type":"package"},"services.tahoe.nodes.<name?>.sftpd.accounts.file":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":null,"description":"Path to the accounts file.\n","readOnly":false,"type":"null or path"},"services.tahoe.nodes.<name?>.sftpd.accounts.url":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":null,"description":"URL of the accounts server.\n","readOnly":false,"type":"null or string"},"services.tahoe.nodes.<name?>.sftpd.enable":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":false,"description":"Whether to enable SFTP service.","example":true,"readOnly":false,"type":"boolean"},"services.tahoe.nodes.<name?>.sftpd.hostPrivateKeyFile":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":null,"description":"Path to the SSH host private key.\n","readOnly":false,"type":"null or path"},"services.tahoe.nodes.<name?>.sftpd.hostPublicKeyFile":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":null,"description":"Path to the SSH host public key.\n","readOnly":false,"type":"null or path"},"services.tahoe.nodes.<name?>.sftpd.port":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":null,"description":"The port on which the SFTP server will listen.\n\nThis is the correct setting to tweak if you want Tahoe's SFTP\ndaemon to listen on a different port.\n","readOnly":false,"type":"null or integer"},"services.tahoe.nodes.<name?>.storage.enable":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":false,"description":"Whether to enable storage service.","example":true,"readOnly":false,"type":"boolean"},"services.tahoe.nodes.<name?>.storage.reservedSpace":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":"1G","description":"The amount of filesystem space to not use for storage.\n","readOnly":false,"type":"string"},"services.tahoe.nodes.<name?>.tub.location":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":null,"description":"The external location that the node should listen on.\n\nThis is the setting to tweak if there are multiple interfaces\nand you want to alter which interface Tahoe is advertising.\n\nIf specified, the port should be included.\n","readOnly":false,"type":"null or string"},"services.tahoe.nodes.<name?>.tub.port":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":3457,"description":"The port on which the tub will listen.\n\nThis is the correct setting to tweak if you want Tahoe's storage\nsystem to listen on a different port.\n","readOnly":false,"type":"integer"},"services.tahoe.nodes.<name?>.web.port":{"declarations":["nixos/modules/services/network-filesystems/tahoe.nix"],"default":3456,"description":"The port on which the Web server will listen.\n\nThis is the correct setting to tweak if you want Tahoe's WUI to\nlisten on a different port.\n","readOnly":false,"type":"integer"},"services.tarsnap.archives":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":{},"description":"Tarsnap archive configurations. Each attribute names an archive\nto be created at a given time interval, according to the options\nassociated with it. When uploading to the tarsnap server,\narchive names are suffixed by a 1 second resolution timestamp.\n\nFor each member of the set is created a timer which triggers the\ninstanced <literal>tarsnap-archive-name</literal> service unit. You may use\n<command>systemctl start tarsnap-archive-name</command> to\nmanually trigger creation of <literal>archive-name</literal> at\nany time.\n","example":{"_type":"literalExample","text":"{\n  nixos =\n    { directories = [ \"/home\" \"/root/ssl\" ];\n    };\n\n  gamedata =\n    { directories = [ \"/var/lib/minecraft\" ];\n      period      = \"*:30\";\n    };\n}\n"},"readOnly":false,"type":"attribute set of submodules"},"services.tarsnap.archives.<name>.aggressiveNetworking":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":false,"description":"Upload data over multiple TCP connections, potentially\nincreasing tarsnap's bandwidth utilisation at the cost\nof slowing down all other network traffic. Not\nrecommended unless TCP congestion is the dominant\nlimiting factor.\n","readOnly":false,"type":"boolean"},"services.tarsnap.archives.<name>.cachedir":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":"/var/cache/tarsnap/root-tarsnap.key","description":"The cache allows tarsnap to identify previously stored data\nblocks, reducing archival time and bandwidth usage.\n\nShould the cache become desynchronized or corrupted, tarsnap\nwill refuse to run until you manually rebuild the cache with\n<command>tarsnap --fsck</command>.\n\nSet to <literal>null</literal> to disable caching.\n","readOnly":false,"type":"null or path"},"services.tarsnap.archives.<name>.checkpointBytes":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":"1GB","description":"Create a checkpoint every <literal>checkpointBytes</literal>\nof uploaded data (optionally specified using an SI prefix).\n\n1GB is the minimum value. A higher value is recommended,\nas checkpointing is expensive.\n\nSet to <literal>null</literal> to disable checkpointing.\n","readOnly":false,"type":"null or string"},"services.tarsnap.archives.<name>.directories":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":[],"description":"List of filesystem paths to archive.","readOnly":false,"type":"list of paths"},"services.tarsnap.archives.<name>.excludes":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":[],"description":"Exclude files and directories matching these patterns.\n","readOnly":false,"type":"list of strings"},"services.tarsnap.archives.<name>.includes":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":[],"description":"Include only files and directories matching these\npatterns (the empty list includes everything).\n\nExclusions have precedence over inclusions.\n","readOnly":false,"type":"list of strings"},"services.tarsnap.archives.<name>.keyfile":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":"/root/tarsnap.key","description":"Set a specific keyfile for this archive. This defaults to\n<literal>\"/root/tarsnap.key\"</literal> if left unspecified.\n\nUse this option if you want to run multiple backups\nconcurrently - each archive must have a unique key. You can\ngenerate a write-only key derived from your master key (which\nis recommended) using <literal>tarsnap-keymgmt(1)</literal>.\n\nNote: every archive must have an individual master key. You\nmust generate multiple keys with\n<literal>tarsnap-keygen(1)</literal>, and then generate write\nonly keys from those.\n\nThe keyfile name should be given as a string and not a path, to\navoid the key being copied into the Nix store.\n","readOnly":false,"type":"string"},"services.tarsnap.archives.<name>.lowmem":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":false,"description":"Reduce memory consumption by not caching small files.\nPossibly beneficial if the average file size is smaller\nthan 1 MB and the number of files is lower than the\ntotal amount of RAM in KB.\n","readOnly":false,"type":"boolean"},"services.tarsnap.archives.<name>.maxbw":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":null,"description":"Abort archival if upstream bandwidth usage in bytes\nexceeds this threshold.\n","readOnly":false,"type":"null or integer"},"services.tarsnap.archives.<name>.maxbwRateDown":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":null,"description":"Download bandwidth rate limit in bytes.\n","example":{"_type":"literalExample","text":"50 * 1000"},"readOnly":false,"type":"null or integer"},"services.tarsnap.archives.<name>.maxbwRateUp":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":null,"description":"Upload bandwidth rate limit in bytes.\n","example":{"_type":"literalExample","text":"25 * 1000"},"readOnly":false,"type":"null or integer"},"services.tarsnap.archives.<name>.nodump":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":true,"description":"Exclude files with the <literal>nodump</literal> flag.\n","readOnly":false,"type":"boolean"},"services.tarsnap.archives.<name>.period":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":"01:15","description":"Create archive at this interval.\n\nThe format is described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>7</manvolnum></citerefentry>.\n","example":"hourly","readOnly":false,"type":"string"},"services.tarsnap.archives.<name>.printStats":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":true,"description":"Print global archive statistics upon completion.\nThe output is available via\n<command>systemctl status tarsnap@archive-name</command>.\n","readOnly":false,"type":"boolean"},"services.tarsnap.archives.<name>.verylowmem":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":false,"description":"Reduce memory consumption by a factor of 2 beyond what\n<literal>lowmem</literal> does, at the cost of significantly\nslowing down the archiving process.\n","readOnly":false,"type":"boolean"},"services.tarsnap.config":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.tarsnap.archives</option>.","readOnly":false,"type":"unspecified"},"services.tarsnap.enable":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":false,"description":"Enable periodic tarsnap backups.\n","readOnly":false,"type":"boolean"},"services.tarsnap.keyfile":{"declarations":["nixos/modules/services/backup/tarsnap.nix"],"default":"/root/tarsnap.key","description":"The keyfile which associates this machine with your tarsnap\naccount.\nCreate the keyfile with <command>tarsnap-keygen</command>.\n\nNote that each individual archive (specified below) may also have its\nown individual keyfile specified. Tarsnap does not allow multiple\nconcurrent backups with the same cache directory and key (starting a\nnew backup will cause another one to fail). If you have multiple\narchives specified, you should either spread out your backups to be\nfar apart, or specify a separate key for each archive. By default\nevery archive defaults to using\n<literal>\"/root/tarsnap.key\"</literal>.\n\nIt's recommended for backups that you generate a key for every archive\nusing <literal>tarsnap-keygen(1)</literal>, and then generate a\nwrite-only tarsnap key using <literal>tarsnap-keymgmt(1)</literal>,\nand keep your master key(s) for a particular machine off-site.\n\nThe keyfile name should be given as a string and not a path, to\navoid the key being copied into the Nix store.\n","readOnly":false,"type":"string"},"services.taskserver.allowedClientIDs":{"declarations":["nixos/modules/services/misc/taskserver"],"default":[],"description":"A list of regular expressions that are matched against the reported\nclient id (such as <literal>task 2.3.0</literal>).\n\nThe values <literal>all</literal> or <literal>none</literal> have\nspecial meaning. Overidden by any entry in the option\n<option>services.taskserver.disallowedClientIDs</option>.\n","example":["[Tt]ask [2-9]+"],"readOnly":false,"type":"string or list of strings"},"services.taskserver.ciphers":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"List of GnuTLS ciphers to use. See the GnuTLS documentation about\npriority strings at <link xlink:href=\"https://gnutls.org/manual/html_node/Priority-Strings.html\"/> for full details.\n","example":"NORMAL:-VERS-SSL3.0","readOnly":false,"type":"null or string"},"services.taskserver.confirmation":{"declarations":["nixos/modules/services/misc/taskserver"],"default":true,"description":"Determines whether certain commands are confirmed.\n","readOnly":false,"type":"boolean"},"services.taskserver.dataDir":{"declarations":["nixos/modules/services/misc/taskserver"],"default":"/var/lib/taskserver","description":"Data directory for Taskserver.","readOnly":false,"type":"path"},"services.taskserver.debug":{"declarations":["nixos/modules/services/misc/taskserver"],"default":false,"description":"Logs debugging information.\n","readOnly":false,"type":"boolean"},"services.taskserver.disallowedClientIDs":{"declarations":["nixos/modules/services/misc/taskserver"],"default":[],"description":"A list of regular expressions that are matched against the reported\nclient id (such as <literal>task 2.3.0</literal>).\n\nThe values <literal>all</literal> or <literal>none</literal> have\nspecial meaning. Any entry here overrides those in\n<option>services.taskserver.allowedClientIDs</option>.\n","example":["[Tt]ask [2-9]+"],"readOnly":false,"type":"string or list of strings"},"services.taskserver.enable":{"declarations":["nixos/modules/services/misc/taskserver"],"default":false,"description":"Whether to enable the Taskwarrior server.\n\nMore instructions about NixOS in conjuction with Taskserver can be\nfound in the NixOS manual at\n<olink targetdoc=\"manual\" targetptr=\"module-taskserver\"/>.\n","example":true,"readOnly":false,"type":"boolean"},"services.taskserver.extensions":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"Fully qualified path of the Taskserver extension scripts.\nCurrently there are none.\n","readOnly":false,"type":"null or path"},"services.taskserver.extraConfig":{"declarations":["nixos/modules/services/misc/taskserver"],"default":"","description":"Extra lines to append to the taskdrc configuration file.\n","example":"client.cert = /tmp/debugging.cert","readOnly":false,"type":"string"},"services.taskserver.fqdn":{"declarations":["nixos/modules/services/misc/taskserver"],"default":"localhost","description":"The fully qualified domain name of this server, which is also used\nas the common name in the certificates.\n","readOnly":false,"type":"string"},"services.taskserver.group":{"declarations":["nixos/modules/services/misc/taskserver"],"default":"taskd","description":"Group for Taskserver.","readOnly":false,"type":"string"},"services.taskserver.ipLog":{"declarations":["nixos/modules/services/misc/taskserver"],"default":false,"description":"Logs the IP addresses of incoming requests.\n","readOnly":false,"type":"boolean"},"services.taskserver.listenHost":{"declarations":["nixos/modules/services/misc/taskserver"],"default":"localhost","description":"The address (IPv4, IPv6 or DNS) to listen on.\n\nIf the value is something else than <literal>localhost</literal> the\nport defined by <option>listenPort</option> is automatically added to\n<option>networking.firewall.allowedTCPPorts</option>.\n","example":"::","readOnly":false,"type":"string"},"services.taskserver.listenPort":{"declarations":["nixos/modules/services/misc/taskserver"],"default":53589,"description":"Port number of the Taskserver.\n","readOnly":false,"type":"integer"},"services.taskserver.organisations":{"declarations":["nixos/modules/services/misc/taskserver"],"default":{},"description":"An attribute set where the keys name the organisation and the values\nare a set of lists of <option>users</option> and\n<option>groups</option>.\n","example":{"myShinyOrganisation":{"groups":["staff","outsiders"],"users":["alice","bob"]},"yetAnotherOrganisation":{"users":["foo","bar"]}},"readOnly":false,"type":"attribute set of submodules"},"services.taskserver.organisations.<name>.groups":{"declarations":["nixos/modules/services/misc/taskserver"],"default":[],"description":"A list of group names that belong to the organization.\n","example":["workers","slackers"],"readOnly":false,"type":"list of strings"},"services.taskserver.organisations.<name>.users":{"declarations":["nixos/modules/services/misc/taskserver"],"default":[],"description":"A list of user names that belong to the organization.\n","example":["alice","bob"],"readOnly":false,"type":"list of strings"},"services.taskserver.pki.auto.bits":{"declarations":["nixos/modules/services/misc/taskserver"],"default":4096,"description":"The bit size for generated keys.\n\n<note><para>\nThis option is for the automatically handled CA and will be ignored if any\nof the <option>services.taskserver.pki.manual.*</option> options are set.\n</para></note>\n","example":2048,"readOnly":false,"type":"integer"},"services.taskserver.pki.auto.expiration.ca":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"The expiration time of the CA certificate in days or <literal>null</literal> for no\nexpiration time.\n\n\n<note><para>\nThis option is for the automatically handled CA and will be ignored if any\nof the <option>services.taskserver.pki.manual.*</option> options are set.\n</para></note>\n","example":365,"readOnly":false,"type":"null or integer"},"services.taskserver.pki.auto.expiration.client":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"The expiration time of client certificates in days or <literal>null</literal> for no\nexpiration time.\n\n\n<note><para>\nThis option is for the automatically handled CA and will be ignored if any\nof the <option>services.taskserver.pki.manual.*</option> options are set.\n</para></note>\n","example":365,"readOnly":false,"type":"null or integer"},"services.taskserver.pki.auto.expiration.crl":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"The expiration time of the certificate revocation list (CRL) in days or <literal>null</literal> for no\nexpiration time.\n\n\n<note><para>\nThis option is for the automatically handled CA and will be ignored if any\nof the <option>services.taskserver.pki.manual.*</option> options are set.\n</para></note>\n","example":365,"readOnly":false,"type":"null or integer"},"services.taskserver.pki.auto.expiration.server":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"The expiration time of the server certificate in days or <literal>null</literal> for no\nexpiration time.\n\n\n<note><para>\nThis option is for the automatically handled CA and will be ignored if any\nof the <option>services.taskserver.pki.manual.*</option> options are set.\n</para></note>\n","example":365,"readOnly":false,"type":"null or integer"},"services.taskserver.pki.manual.ca.cert":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"Fully qualified path to the CA certificate.\n<note><para>\nSetting this option will prevent automatic CA creation and handling.\n</para></note>\n","readOnly":false,"type":"null or path"},"services.taskserver.pki.manual.server.cert":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"Fully qualified path to the server certificate.\n<note><para>\nSetting this option will prevent automatic CA creation and handling.\n</para></note>\n","readOnly":false,"type":"null or path"},"services.taskserver.pki.manual.server.crl":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"Fully qualified path to the server certificate revocation list.\n<note><para>\nSetting this option will prevent automatic CA creation and handling.\n</para></note>\n","readOnly":false,"type":"null or path"},"services.taskserver.pki.manual.server.key":{"declarations":["nixos/modules/services/misc/taskserver"],"default":null,"description":"Fully qualified path to the server key.\n<note><para>\nSetting this option will prevent automatic CA creation and handling.\n</para></note>\n","readOnly":false,"type":"null or path"},"services.taskserver.queueSize":{"declarations":["nixos/modules/services/misc/taskserver"],"default":10,"description":"Size of the connection backlog, see <citerefentry>\n  <refentrytitle>listen</refentrytitle>\n  <manvolnum>2</manvolnum>\n</citerefentry>.\n","readOnly":false,"type":"integer"},"services.taskserver.requestLimit":{"declarations":["nixos/modules/services/misc/taskserver"],"default":1048576,"description":"Size limit of incoming requests, in bytes.\n","readOnly":false,"type":"integer"},"services.taskserver.trust":{"declarations":["nixos/modules/services/misc/taskserver"],"default":"strict","description":"Determines how client certificates are validated.\n\nThe value <literal>allow all</literal> performs no client\ncertificate validation. This is not recommended. The value\n<literal>strict</literal> causes the client certificate to be\nvalidated against a CA.\n","readOnly":false,"type":"one of \"allow all\", \"strict\""},"services.taskserver.user":{"declarations":["nixos/modules/services/misc/taskserver"],"default":"taskd","description":"User for Taskserver.","readOnly":false,"type":"string"},"services.tcsd.conformanceCred":{"declarations":["nixos/modules/services/hardware/tcsd.nix"],"default":"/var/lib/tpm/conformance.cert","description":"Path to the conformance credential for your TPM.\nSee also the platformCred option","readOnly":false,"type":"path"},"services.tcsd.enable":{"declarations":["nixos/modules/services/hardware/tcsd.nix"],"default":false,"description":"Whether to enable tcsd, a Trusted Computing management service\nthat provides TCG Software Stack (TSS).  The tcsd daemon is\nthe only portal to the Trusted Platform Module (TPM), a hardware\nchip on the motherboard.\n","readOnly":false,"type":"boolean"},"services.tcsd.endorsementCred":{"declarations":["nixos/modules/services/hardware/tcsd.nix"],"default":"/var/lib/tpm/endorsement.cert","description":"Path to the endorsement credential for your TPM.\nSee also the platformCred option","readOnly":false,"type":"path"},"services.tcsd.firmwarePCRs":{"declarations":["nixos/modules/services/hardware/tcsd.nix"],"default":"0,1,2,3,4,5,6,7","description":"PCR indices used in the TPM for firmware measurements.","readOnly":false,"type":"string"},"services.tcsd.group":{"declarations":["nixos/modules/services/hardware/tcsd.nix"],"default":"tss","description":"Group account under which tcsd runs.","readOnly":false,"type":"string"},"services.tcsd.kernelPCRs":{"declarations":["nixos/modules/services/hardware/tcsd.nix"],"default":"8,9,10,11,12","description":"PCR indices used in the TPM for kernel measurements.","readOnly":false,"type":"string"},"services.tcsd.platformCred":{"declarations":["nixos/modules/services/hardware/tcsd.nix"],"default":"/var/lib/tpm/platform.cert","description":"Path to the platform credential for your TPM. Your TPM\nmanufacturer may have provided you with a set of credentials\n(certificates) that should be used when creating identities\nusing your TPM. When a user of your TPM makes an identity,\nthis credential will be encrypted as part of that process.\nSee the 1.1b TPM Main specification section 9.3 for information\non this process. ","readOnly":false,"type":"path"},"services.tcsd.stateDir":{"declarations":["nixos/modules/services/hardware/tcsd.nix"],"default":"/var/lib/tpm","description":"The location of the system persistent storage file.\nThe system persistent storage file holds keys and data across\nrestarts of the TCSD and system reboots. \n","readOnly":false,"type":"path"},"services.tcsd.user":{"declarations":["nixos/modules/services/hardware/tcsd.nix"],"default":"tss","description":"User account under which tcsd runs.","readOnly":false,"type":"string"},"services.teamspeak3.dataDir":{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"/var/lib/teamspeak3-server","description":"Directory to store TS3 database and other state/data files.\n","readOnly":false,"type":"path"},"services.teamspeak3.defaultVoicePort":{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":9987,"description":"Default UDP port for clients to connect to virtual servers - used for first virtual server, subsequent ones will open on incrementing port numbers by default.\n","readOnly":false,"type":"integer"},"services.teamspeak3.enable":{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":false,"description":"Whether to run the Teamspeak3 voice communication server daemon.\n","readOnly":false,"type":"boolean"},"services.teamspeak3.fileTransferIP":{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"0.0.0.0","description":"IP on which the server instance will listen for incoming file transfer connections. Defaults to any IP.\n","readOnly":false,"type":"string"},"services.teamspeak3.fileTransferPort":{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":30033,"description":"TCP port opened for file transfers.\n","readOnly":false,"type":"integer"},"services.teamspeak3.logPath":{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"/var/log/teamspeak3-server/","description":"Directory to store log files in.\n","readOnly":false,"type":"path"},"services.teamspeak3.queryIP":{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"0.0.0.0","description":"IP on which the server instance will listen for incoming ServerQuery connections. Defaults to any IP.\n","readOnly":false,"type":"string"},"services.teamspeak3.queryPort":{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":10011,"description":"TCP port opened for ServerQuery connections.\n","readOnly":false,"type":"integer"},"services.teamspeak3.voiceIP":{"declarations":["nixos/modules/services/networking/teamspeak3.nix"],"default":"0.0.0.0","description":"IP on which the server instance will listen for incoming voice connections. Defaults to any IP.\n","readOnly":false,"type":"string"},"services.teamviewer.enable":{"declarations":["nixos/modules/services/monitoring/teamviewer.nix"],"default":false,"description":"Whether to enable TeamViewer daemon.","example":true,"readOnly":false,"type":"boolean"},"services.telegraf.enable":{"declarations":["nixos/modules/services/monitoring/telegraf.nix"],"default":false,"description":"Whether to enable telegraf server.","example":true,"readOnly":false,"type":"boolean"},"services.telegraf.extraConfig":{"declarations":["nixos/modules/services/monitoring/telegraf.nix"],"default":{},"description":"Extra configuration options for telegraf","example":{"inputs":{"statsd":{"delete_timings":true,"service_address":":8125"}},"outputs":{"influxdb":{"database":"telegraf","urls":["http://localhost:8086"]}}},"readOnly":false,"type":"attribute set"},"services.telegraf.package":{"declarations":["nixos/modules/services/monitoring/telegraf.nix"],"default":"pkgs.telegraf","description":"Which telegraf derivation to use","readOnly":false,"type":"package"},"services.telepathy.enable":{"declarations":["nixos/modules/services/desktops/telepathy.nix"],"default":false,"description":"Whether to enable Telepathy service, a communications framework\nthat enables real-time communication via pluggable protocol backends.\n","readOnly":false,"type":"boolean"},"services.terraria.autoCreatedWorldSize":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":"medium","description":"Specifies the size of the auto-created world if <literal>worldPath</literal> does not\npoint to an existing world.\n","readOnly":false,"type":"one of \"small\", \"medium\", \"large\""},"services.terraria.banListPath":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":null,"description":"The path to the ban list.\n","readOnly":false,"type":"null or path"},"services.terraria.enable":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":false,"description":"If enabled, starts a Terraria server. The server can be connected to via <literal>tmux -S /var/lib/terraria/terraria.sock attach</literal>\nfor administration by users who are a part of the <literal>terraria</literal> group (use <literal>C-b d</literal> shortcut to detach again).\n","readOnly":false,"type":"boolean"},"services.terraria.maxPlayers":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":255,"description":"Sets the max number of players (between 1 and 255).\n","readOnly":false,"type":"integer"},"services.terraria.messageOfTheDay":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":null,"description":"Set the server message of the day text.\n","readOnly":false,"type":"null or string"},"services.terraria.noUPnP":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":false,"description":"Disables automatic Universal Plug and Play.","readOnly":false,"type":"boolean"},"services.terraria.password":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":null,"description":"Sets the server password. Leave <literal>null</literal> for no password.\n","readOnly":false,"type":"null or string"},"services.terraria.port":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":7777,"description":"Specifies the port to listen on.\n","readOnly":false,"type":"integer"},"services.terraria.secure":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":false,"description":"Adds additional cheat protection to the server.","readOnly":false,"type":"boolean"},"services.terraria.worldPath":{"declarations":["nixos/modules/services/games/terraria.nix"],"default":null,"description":"The path to the world file (<literal>.wld</literal>) which should be loaded.\nIf no world exists at this path, one will be created with the size\nspecified by <literal>autoCreatedWorldSize</literal>.\n","readOnly":false,"type":"path"},"services.tftpd.enable":{"declarations":["nixos/modules/services/networking/tftpd.nix"],"default":false,"description":"Whether to enable tftpd, a Trivial File Transfer Protocol server.\nThe server will be run as an xinetd service.\n","readOnly":false,"type":"boolean"},"services.tftpd.path":{"declarations":["nixos/modules/services/networking/tftpd.nix"],"default":"/srv/tftp","description":"Where the tftp server files are stored.\n","readOnly":false,"type":"path"},"services.thermald.enable":{"declarations":["nixos/modules/services/hardware/thermald.nix"],"default":false,"description":"Whether to enable thermald, the temperature management daemon.\n","readOnly":false,"type":"unspecified"},"services.thinkfan.enable":{"declarations":["nixos/modules/services/hardware/thinkfan.nix"],"default":false,"description":"Whether to enable thinkfan, fan controller for ibm/lenovo thinkpads.\n","readOnly":false,"type":"unspecified"},"services.thinkfan.levels":{"declarations":["nixos/modules/services/hardware/thinkfan.nix"],"default":"(0,     0,      55)\n(1,     48,     60)\n(2,     50,     61)\n(3,     52,     63)\n(6,     56,     65)\n(7,     60,     85)\n(127,   80,     32767)\n","description":"Sensor used by thinkfan\n","readOnly":false,"type":"unspecified"},"services.thinkfan.sensor":{"declarations":["nixos/modules/services/hardware/thinkfan.nix"],"default":"/proc/acpi/ibm/thermal","description":"Sensor used by thinkfan\n","readOnly":false,"type":"unspecified"},"services.timesyncd.enable":{"declarations":["nixos/modules/system/boot/timesyncd.nix"],"default":false,"description":"Enables the systemd NTP client daemon.\n","readOnly":false,"type":"boolean"},"services.tinc.networks":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":{},"description":"Defines the tinc networks which will be started.\nEach network invokes a different daemon.\n","readOnly":false,"type":"list or attribute set of submodules"},"services.tinc.networks.<name?>.chroot":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":true,"description":"Change process root directory to the directory where the config file is located (/etc/tinc/netname/), for added security.\nThe chroot is performed after all the initialization is done, after writing pid files and opening network sockets.\n\nNote that tinc can't run scripts anymore (such as tinc-down or host-up), unless it is setup to be runnable inside chroot environment.\n","readOnly":false,"type":"boolean"},"services.tinc.networks.<name?>.debugLevel":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":0,"description":"The amount of debugging information to add to the log. 0 means little\nlogging while 5 is the most logging. <command>man tincd</command> for\nmore details.\n","readOnly":false,"type":"integer"},"services.tinc.networks.<name?>.ed25519PrivateKeyFile":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":null,"description":"Path of the private ed25519 keyfile.\n","readOnly":false,"type":"null or path"},"services.tinc.networks.<name?>.extraConfig":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":"","description":"Extra lines to add to the tinc service configuration file.\n","readOnly":false,"type":"string"},"services.tinc.networks.<name?>.hosts":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":{},"description":"The name of the host in the network as well as the configuration for that host.\nThis name should only contain alphanumerics and underscores.\n","readOnly":false,"type":"list or attribute set of strings"},"services.tinc.networks.<name?>.interfaceType":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":"tun","description":"The type of virtual interface used for the network connection\n","readOnly":false,"type":"one of \"tun\", \"tap\""},"services.tinc.networks.<name?>.listenAddress":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":null,"description":"The ip adress to bind to.\n","readOnly":false,"type":"null or string"},"services.tinc.networks.<name?>.name":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":null,"description":"The name of the node which is used as an identifier when communicating\nwith the remote nodes in the mesh. If null then the hostname of the system\nis used.\n","readOnly":false,"type":"null or string"},"services.tinc.networks.<name?>.package":{"declarations":["nixos/modules/services/networking/tinc.nix"],"default":"pkgs.tinc_pre","description":"The package to use for the tinc daemon's binary.\n","readOnly":false,"type":"package"},"services.tlp.enable":{"declarations":["nixos/modules/services/hardware/tlp.nix"],"default":false,"description":"Whether to enable the TLP daemon.","readOnly":false,"type":"boolean"},"services.tlp.extraConfig":{"declarations":["nixos/modules/services/hardware/tlp.nix"],"default":"","description":"Additional configuration variables for TLP","readOnly":false,"type":"string"},"services.tlsdated.enable":{"declarations":["nixos/modules/services/networking/tlsdated.nix"],"default":false,"description":"Enable tlsdated daemon.\n","readOnly":false,"type":"boolean"},"services.tlsdated.extraOptions":{"declarations":["nixos/modules/services/networking/tlsdated.nix"],"default":"","description":"Additional command line arguments to pass to tlsdated.\n","readOnly":false,"type":"string"},"services.tlsdated.sources":{"declarations":["nixos/modules/services/networking/tlsdated.nix"],"default":[{"host":"encrypted.google.com","port":443,"proxy":null}],"description":"You can list one or more sources to fetch time from.\n","readOnly":false,"type":"list of submodules"},"services.tlsdated.sources.*.host":{"declarations":["nixos/modules/services/networking/tlsdated.nix"],"description":"Remote hostname.\n","readOnly":false,"type":"string"},"services.tlsdated.sources.*.port":{"declarations":["nixos/modules/services/networking/tlsdated.nix"],"description":"Remote port.\n","readOnly":false,"type":"integer"},"services.tlsdated.sources.*.proxy":{"declarations":["nixos/modules/services/networking/tlsdated.nix"],"default":null,"description":"The proxy argument expects HTTP, SOCKS4A or SOCKS5 formatted as followed:\n\n http://127.0.0.1:8118\n socks4a://127.0.0.1:9050\n socks5://127.0.0.1:9050\n\nThe proxy support should not leak DNS requests and is suitable for use with Tor.\n","readOnly":false,"type":"null or string"},"services.tomcat.axis2.enable":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":false,"description":"Whether to enable an Apache Axis2 container","readOnly":false,"type":"unspecified"},"services.tomcat.axis2.services":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":[],"description":"List containing AAR files or directories with AAR files which are web services to be deployed on Axis2","readOnly":false,"type":"unspecified"},"services.tomcat.baseDir":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"/var/tomcat","description":"Location where Tomcat stores configuration files, webapplications and logfiles","readOnly":false,"type":"unspecified"},"services.tomcat.catalinaOpts":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Parameters to pass to the Java Virtual Machine which spawns the Catalina servlet container","readOnly":false,"type":"unspecified"},"services.tomcat.commonLibs":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":[],"description":"List containing JAR files or directories with JAR files which are libraries shared by the web applications and the servlet container","readOnly":false,"type":"unspecified"},"services.tomcat.enable":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":false,"description":"Whether to enable Apache Tomcat","readOnly":false,"type":"unspecified"},"services.tomcat.extraGroups":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":[],"description":"Defines extra groups to which the tomcat user belongs.","example":["users"],"readOnly":false,"type":"unspecified"},"services.tomcat.group":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"tomcat","description":"Group account under which Apache Tomcat runs.","readOnly":false,"type":"unspecified"},"services.tomcat.javaOpts":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"","description":"Parameters to pass to the Java Virtual Machine which spawns Apache Tomcat","readOnly":false,"type":"unspecified"},"services.tomcat.jdk":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"pkgs.jdk","description":"Which JDK to use.","readOnly":false,"type":"package"},"services.tomcat.logPerVirtualHost":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":false,"description":"Whether to enable logging per virtual host.","readOnly":false,"type":"unspecified"},"services.tomcat.package":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"pkgs.tomcat85","description":"Which tomcat package to use.\n","example":{"_type":"literalExample","text":"pkgs.tomcatUnstable"},"readOnly":false,"type":"package"},"services.tomcat.sharedLibs":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":[],"description":"List containing JAR files or directories with JAR files which are libraries shared by the web applications","readOnly":false,"type":"unspecified"},"services.tomcat.user":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"tomcat","description":"User account under which Apache Tomcat runs.","readOnly":false,"type":"unspecified"},"services.tomcat.virtualHosts":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":[],"description":"List consisting of a virtual host name and a list of web applications to deploy on each virtual host","readOnly":false,"type":"unspecified"},"services.tomcat.webapps":{"declarations":["nixos/modules/services/web-servers/tomcat.nix"],"default":"[ tomcat.webapps ]","description":"List containing WAR files or directories with WAR files which are web applications to be deployed on Tomcat","readOnly":false,"type":"list of packages"},"services.tor.client.enable":{"declarations":["nixos/modules/services/security/tor.nix"],"default":false,"description":"Whether to enable Tor daemon to route application\nconnections.  You might want to disable this if you plan\nrunning a dedicated Tor relay.\n","readOnly":false,"type":"boolean"},"services.tor.client.privoxy.enable":{"declarations":["nixos/modules/services/security/tor.nix"],"default":true,"description":"Whether to enable and configure the system Privoxy to use Tor's\nfaster port, suitable for HTTP.\n\nTo have anonymity, protocols need to be scrubbed of identifying\ninformation, and this can be accomplished for HTTP by Privoxy.\n\nPrivoxy can also be useful for KDE torification. A good setup would be:\nsetting SOCKS proxy to the default Tor port, providing maximum\ncircuit isolation where possible; and setting HTTP proxy to Privoxy\nto route HTTP traffic over faster, but less isolated port.\n","readOnly":false,"type":"unspecified"},"services.tor.client.socksListenAddress":{"declarations":["nixos/modules/services/security/tor.nix"],"default":"127.0.0.1:9050","description":"Bind to this address to listen for connections from\nSocks-speaking applications. Provides strong circuit\nisolation, separate circuit per IP address.\n","example":"192.168.0.1:9100","readOnly":false,"type":"string"},"services.tor.client.socksListenAddressFaster":{"declarations":["nixos/modules/services/security/tor.nix"],"default":"127.0.0.1:9063","description":"Bind to this address to listen for connections from\nSocks-speaking applications. Same as socksListenAddress\nbut uses weaker circuit isolation to provide performance\nsuitable for a web browser.\n","example":"192.168.0.1:9101","readOnly":false,"type":"string"},"services.tor.client.socksPolicy":{"declarations":["nixos/modules/services/security/tor.nix"],"default":null,"description":"Entry policies to allow/deny SOCKS requests based on IP\naddress.  First entry that matches wins. If no SocksPolicy\nis set, we accept all (and only) requests from\nSocksListenAddress.\n","example":"accept 192.168.0.0/16, reject *","readOnly":false,"type":"null or string"},"services.tor.controlPort":{"declarations":["nixos/modules/services/security/tor.nix"],"default":0,"description":"If set, Tor will accept connections on the specified port\nand allow them to control the tor process.\n","example":9051,"readOnly":false,"type":"integer"},"services.tor.enable":{"declarations":["nixos/modules/services/security/tor.nix"],"default":false,"description":"Enable the Tor daemon. By default, the daemon is run without\nrelay, exit, bridge or client connectivity.\n","readOnly":false,"type":"boolean"},"services.tor.extraConfig":{"declarations":["nixos/modules/services/security/tor.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to the\nconfiguration file at the end.\n","readOnly":false,"type":"string"},"services.tor.relay.accountingMax":{"declarations":["nixos/modules/services/security/tor.nix"],"default":null,"description":"Specify maximum bandwidth allowed during an accounting\nperiod. This allows you to limit overall tor bandwidth\nover some time period. See the\n<literal>AccountingMax</literal> option by looking at the\ntor manual (<literal>man tor</literal>) for more.\n\nNote this limit applies individually to upload and\ndownload; if you specify <literal>\"500 GBytes\"</literal>\nhere, then you may transfer up to 1 TBytes of overall\nbandwidth (500 GB upload, 500 GB download).\n","example":"450 GBytes","readOnly":false,"type":"null or string"},"services.tor.relay.accountingStart":{"declarations":["nixos/modules/services/security/tor.nix"],"default":null,"description":"Specify length of an accounting period. This allows you to\nlimit overall tor bandwidth over some time period. See the\n<literal>AccountingStart</literal> option by looking at\nthe tor manual (<literal>man tor</literal>) for more.\n","example":"month 1 1:00","readOnly":false,"type":"null or string"},"services.tor.relay.bandwidthBurst":{"declarations":["nixos/modules/services/security/tor.nix"],"default":0,"description":"Specify this to allow bursts of the bandwidth usage of relayed (server)\ntraffic. The average usage will still be as specified in relayBandwidthRate.\nYour own traffic is still unthrottled. Units: bytes/second.\n","example":200,"readOnly":false,"type":"integer"},"services.tor.relay.bandwidthRate":{"declarations":["nixos/modules/services/security/tor.nix"],"default":0,"description":"Specify this to limit the bandwidth usage of relayed (server)\ntraffic. Your own traffic is still unthrottled. Units: bytes/second.\n","example":100,"readOnly":false,"type":"integer"},"services.tor.relay.contactInfo":{"declarations":["nixos/modules/services/security/tor.nix"],"default":null,"description":"Contact information for the relay owner (e.g. a mail\naddress and GPG key ID).\n","example":"admin@relay.com","readOnly":false,"type":"null or string"},"services.tor.relay.enable":{"declarations":["nixos/modules/services/security/tor.nix"],"default":false,"description":"Whether to enable relaying TOR traffic for others.\n\nSee https://www.torproject.org/docs/tor-doc-relay for details.\n","readOnly":false,"type":"boolean"},"services.tor.relay.exitPolicy":{"declarations":["nixos/modules/services/security/tor.nix"],"default":null,"description":"A comma-separated list of exit policies. They're\nconsidered first to last, and the first match wins. If you\nwant to _replace_ the default exit policy, end this with\neither a reject *:* or an accept *:*. Otherwise, you're\n_augmenting_ (prepending to) the default exit\npolicy. Leave commented to just use the default, which is\navailable in the man page or at\nhttps://www.torproject.org/documentation.html\n\nLook at https://www.torproject.org/faq-abuse.html#TypicalAbuses\nfor issues you might encounter if you use the default exit policy.\n\nIf certain IPs and ports are blocked externally, e.g. by\nyour firewall, you should update your exit policy to\nreflect this -- otherwise Tor users will be told that\nthose destinations are down.\n","example":"accept *:6660-6667,reject *:*","readOnly":false,"type":"null or string"},"services.tor.relay.isBridge":{"declarations":["nixos/modules/services/security/tor.nix"],"default":false,"description":"Bridge relays (or \"bridges\") are Tor relays that aren't\nlisted in the main directory. Since there is no complete\npublic list of them, even if an ISP is filtering\nconnections to all the known Tor relays, they probably\nwon't be able to block all the bridges.\n\nA bridge relay can't be an exit relay.\n\nYou need to set relay.enable to true for this option to\ntake effect.\n\nThe bridge is set up with an obfuscated transport proxy.\n\nSee https://www.torproject.org/bridges.html.en for more info.\n","readOnly":false,"type":"boolean"},"services.tor.relay.isExit":{"declarations":["nixos/modules/services/security/tor.nix"],"default":false,"description":"An exit relay allows Tor users to access regular Internet\nservices.\n\nUnlike running a non-exit relay, running an exit relay may\nexpose you to abuse complaints. See\nhttps://www.torproject.org/faq.html.en#ExitPolicies for\nmore info.\n\nYou can specify which services Tor users may access via\nyour exit relay using exitPolicy option.\n","readOnly":false,"type":"boolean"},"services.tor.relay.nickname":{"declarations":["nixos/modules/services/security/tor.nix"],"default":"anonymous","description":"A unique handle for your TOR relay.\n","readOnly":false,"type":"string"},"services.tor.relay.portSpec":{"declarations":["nixos/modules/services/security/tor.nix"],"description":"What port to advertise for Tor connections. This corresponds\nto the <literal>ORPort</literal> section in the Tor manual; see\n<literal>man tor</literal> for more details.\n\nAt a minimum, you should just specify the port for the\nrelay to listen on; a common one like 143, 22, 80, or 443\nto help Tor users who may have very restrictive port-based\nfirewalls.\n","example":"143","readOnly":false,"type":"string"},"services.tor.torsocks.allowInbound":{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":false,"description":"Set Torsocks to accept inbound connections. If set to\n<literal>true</literal>, listen() and accept() will be\nallowed to be used with non localhost address.\n","readOnly":false,"type":"boolean"},"services.tor.torsocks.enable":{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":false,"description":"Whether to build <literal>/etc/tor/torsocks.conf</literal>\ncontaining the specified global torsocks configuration.\n","readOnly":false,"type":"boolean"},"services.tor.torsocks.fasterServer":{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":"127.0.0.1:9063","description":"IP/Port of the Tor SOCKS server for torsocks-faster wrapper suitable for HTTP.\nCurrently, hostnames are NOT supported by torsocks.\n","example":"192.168.0.20:1234","readOnly":false,"type":"string"},"services.tor.torsocks.onionAddrRange":{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":"127.42.42.0/24","description":"Tor hidden sites do not have real IP addresses. This\nspecifies what range of IP addresses will be handed to the\napplication as \"cookies\" for .onion names.  Of course, you\nshould pick a block of addresses which you aren't going to\never need to actually connect to. This is similar to the\nMapAddress feature of the main tor daemon.\n","readOnly":false,"type":"string"},"services.tor.torsocks.server":{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":"127.0.0.1:9050","description":"IP/Port of the Tor SOCKS server. Currently, hostnames are\nNOT supported by torsocks.\n","example":"192.168.0.20:1234","readOnly":false,"type":"string"},"services.tor.torsocks.socks5Password":{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":null,"description":"SOCKS5 password. The <literal>TORSOCKS_PASSWORD</literal>\nenvironment variable overrides this option if it is set.\n","example":"sekret","readOnly":false,"type":"null or string"},"services.tor.torsocks.socks5Username":{"declarations":["nixos/modules/services/security/torsocks.nix"],"default":null,"description":"SOCKS5 username. The <literal>TORSOCKS_USERNAME</literal>\nenvironment variable overrides this option if it is set.\n","example":"bob","readOnly":false,"type":"null or string"},"services.tor.tsocks.config":{"declarations":["nixos/modules/services/security/torify.nix"],"default":"","description":"Extra configuration. Contents will be added verbatim to TSocks\nconfiguration file.\n","readOnly":false,"type":"unspecified"},"services.tor.tsocks.enable":{"declarations":["nixos/modules/services/security/torify.nix"],"default":false,"description":"Whether to build tsocks wrapper script to relay application traffic via TOR.\n","readOnly":false,"type":"unspecified"},"services.tor.tsocks.server":{"declarations":["nixos/modules/services/security/torify.nix"],"default":"localhost:9050","description":"IP address of TOR client to use.\n","example":"192.168.0.20","readOnly":false,"type":"unspecified"},"services.torque.mom.enable":{"declarations":["nixos/modules/services/computing/torque/mom.nix"],"default":false,"description":"Whether to enable torque computing node.","example":true,"readOnly":false,"type":"boolean"},"services.torque.mom.serverNode":{"declarations":["nixos/modules/services/computing/torque/mom.nix"],"description":"Hostname running pbs server.","readOnly":false,"type":"string"},"services.torque.server.enable":{"declarations":["nixos/modules/services/computing/torque/server.nix"],"default":false,"description":"Whether to enable torque server.","example":true,"readOnly":false,"type":"boolean"},"services.toxBootstrapd.enable":{"declarations":["nixos/modules/services/networking/tox-bootstrapd.nix"],"default":false,"description":"Whether to enable the Tox DHT bootstrap daemon.\n","readOnly":false,"type":"boolean"},"services.toxBootstrapd.extraConfig":{"declarations":["nixos/modules/services/networking/tox-bootstrapd.nix"],"default":"","description":"Configuration for bootstrap daemon.\nSee <link xlink:href=\"https://github.com/irungentoo/toxcore/blob/master/other/bootstrap_daemon/tox-bootstrapd.conf\"/>\nand <link xlink:href=\"http://wiki.tox.im/Nodes\"/>.\n","readOnly":false,"type":"string"},"services.toxBootstrapd.keysFile":{"declarations":["nixos/modules/services/networking/tox-bootstrapd.nix"],"default":"/var/lib/tox-bootstrapd/keys","description":"Node key file.","readOnly":false,"type":"string"},"services.toxBootstrapd.port":{"declarations":["nixos/modules/services/networking/tox-bootstrapd.nix"],"default":33445,"description":"Listening port (UDP).","readOnly":false,"type":"integer"},"services.toxvpn.enable":{"declarations":["nixos/modules/services/networking/toxvpn.nix"],"default":false,"description":"Whether to enable enable toxvpn running on startup.","example":true,"readOnly":false,"type":"boolean"},"services.toxvpn.localip":{"declarations":["nixos/modules/services/networking/toxvpn.nix"],"default":"10.123.123.1","description":"your ip on the vpn","readOnly":false,"type":"string"},"services.toxvpn.port":{"declarations":["nixos/modules/services/networking/toxvpn.nix"],"default":33445,"description":"udp port for toxcore, port-forward to help with connectivity if you run many nodes behind one NAT","readOnly":false,"type":"integer"},"services.transmission.enable":{"declarations":["nixos/modules/services/torrent/transmission.nix"],"default":false,"description":"Whether or not to enable the headless Transmission BitTorrent daemon.\n\nTransmission daemon can be controlled via the RPC interface using\ntransmission-remote or the WebUI (http://localhost:9091/ by default).\n\nTorrents are downloaded to /var/lib/transmission/Downloads by default and are\naccessible to users in the \"transmission\" group.\n","readOnly":false,"type":"boolean"},"services.transmission.port":{"declarations":["nixos/modules/services/torrent/transmission.nix"],"default":9091,"description":"TCP port number to run the RPC/web interface.","readOnly":false,"type":"integer"},"services.transmission.settings":{"declarations":["nixos/modules/services/torrent/transmission.nix"],"default":{"download-dir":"/var/lib/transmission/Downloads","incomplete-dir":"/var/lib/transmission/.incomplete","incomplete-dir-enabled":true},"description":"Attribute set whos fields overwrites fields in settings.json (each\ntime the service starts). String values must be quoted, integer and\nboolean values must not.\n\nSee https://trac.transmissionbt.com/wiki/EditConfigFiles for\ndocumentation.\n","example":{"download-dir":"/srv/torrents/","incomplete-dir":"/srv/torrents/.incomplete/","incomplete-dir-enabled":true,"rpc-whitelist":"127.0.0.1,192.168.*.*"},"readOnly":false,"type":"attribute set"},"services.tt-rss.auth.autoCreate":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":true,"description":"Allow authentication modules to auto-create users in tt-rss internal\ndatabase when authenticated successfully.\n","readOnly":false,"type":"boolean"},"services.tt-rss.auth.autoLogin":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":true,"description":"Automatically login user on remote or other kind of externally supplied\nauthentication, otherwise redirect to login form as normal.\nIf set to true, users won't be able to set application language\nand settings profile.\n","readOnly":false,"type":"boolean"},"services.tt-rss.checkForUpdates":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":true,"description":"Check for updates automatically if running Git version\n","readOnly":false,"type":"boolean"},"services.tt-rss.database.host":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":null,"description":"Host of the database. Leave null to use Unix domain socket.\n","readOnly":false,"type":"null or string"},"services.tt-rss.database.name":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"tt_rss","description":"Name of the existing database.\n","readOnly":false,"type":"string"},"services.tt-rss.database.password":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":null,"description":"The database user's password.\n","readOnly":false,"type":"null or string"},"services.tt-rss.database.port":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":null,"description":"The database's port. If not set, the default ports will be provided (5432\nand 3306 for pgsql and mysql respectively).\n","readOnly":false,"type":"null or integer"},"services.tt-rss.database.type":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"pgsql","description":"Database to store feeds. Supported are pgsql and mysql.\n","readOnly":false,"type":"one of \"pgsql\", \"mysql\""},"services.tt-rss.database.user":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"tt_rss","description":"The database user. The user must exist and has access to\nthe specified database.\n","readOnly":false,"type":"string"},"services.tt-rss.email.digestSubject":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"[tt-rss] New headlines for last 24 hours","description":"Subject line for email digests.\n","readOnly":false,"type":"string"},"services.tt-rss.email.fromAddress":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"","description":"Address for sending outgoing mail. This applies to password reset\nnotifications, digest emails and any other mail.\n","readOnly":false,"type":"string"},"services.tt-rss.email.fromName":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"Tiny Tiny RSS","description":"Name for sending outgoing mail. This applies to password reset\nnotifications, digest emails and any other mail.\n","readOnly":false,"type":"string"},"services.tt-rss.email.login":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"","description":"SMTP authentication login used when sending outgoing mail.\n","readOnly":false,"type":"string"},"services.tt-rss.email.password":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"","description":"SMTP authentication password used when sending outgoing mail.\n","readOnly":false,"type":"string"},"services.tt-rss.email.security":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"","description":"Used to select a secure SMTP connection. Allowed values: ssl, tls,\nor empty.\n","readOnly":false,"type":"one of \"\", \"ssl\", \"tls\""},"services.tt-rss.email.server":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"","description":"Hostname:port combination to send outgoing mail. Blank - use system\nMTA.\n","example":"localhost:25","readOnly":false,"type":"string"},"services.tt-rss.enable":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":false,"description":"Whether to enable tt-rss.","example":true,"readOnly":false,"type":"boolean"},"services.tt-rss.enableGZipOutput":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":true,"description":"Selectively gzip output to improve wire performance. This requires\nPHP Zlib extension on the server.\nEnabling this can break tt-rss in several httpd/php configurations,\nif you experience weird errors and tt-rss failing to start, blank pages\nafter login, or content encoding errors, disable it.\n","readOnly":false,"type":"boolean"},"services.tt-rss.feedCryptKey":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"","description":"Key used for encryption of passwords for password-protected feeds\nin the database. A string of 24 random characters. If left blank, encryption\nis not used. Requires mcrypt functions.\nWarning: changing this key will make your stored feed passwords impossible\nto decrypt.\n","readOnly":false,"type":"string"},"services.tt-rss.forceArticlePurge":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":0,"description":"When this option is not 0, users ability to control feed purging\nintervals is disabled and all articles (which are not starred)\nolder than this amount of days are purged.\n","readOnly":false,"type":"integer"},"services.tt-rss.logDestination":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"sql","description":"Log destination to use. Possible values: sql (uses internal logging\nyou can read in Preferences -> System), syslog - logs to system log.\nSetting this to blank uses PHP logging (usually to http server\nerror.log).\n","readOnly":false,"type":"one of \"\", \"sql\", \"syslog\""},"services.tt-rss.plugins":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":["auth_internal","note"],"description":"List of plugins to load automatically for all users.\nSystem plugins have to be specified here. Please enable at least one\nauthentication plugin here (auth_*).\nUsers may enable other user plugins from Preferences/Plugins but may not\ndisable plugins specified in this list.\nDisabling auth_internal in this list would automatically disable\nreset password link on the login form.\n","readOnly":false,"type":"list of strings"},"services.tt-rss.pool":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"tt-rss","description":"Name of existing phpfpm pool that is used to run web-application.\nIf not specified a pool will be created automatically with\ndefault values.\n","readOnly":false,"type":"string"},"services.tt-rss.pubSubHubbub.enable":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":false,"description":"Enable client PubSubHubbub support in tt-rss. When disabled, tt-rss\nwon't try to subscribe to PUSH feed updates.\n","readOnly":false,"type":"boolean"},"services.tt-rss.pubSubHubbub.hub":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"","description":"URL to a PubSubHubbub-compatible hub server. If defined, \"Published\narticles\" generated feed would automatically become PUSH-enabled.\n","readOnly":false,"type":"string"},"services.tt-rss.registration.enable":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":false,"description":"Allow users to register themselves. Please be aware that allowing\nrandom people to access your tt-rss installation is a security risk\nand potentially might lead to data loss or server exploit. Disabled\nby default.\n","readOnly":false,"type":"boolean"},"services.tt-rss.registration.maxUsers":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":0,"description":"Maximum amount of users which will be allowed to register on this\nsystem. 0 - no limit.\n","readOnly":false,"type":"integer"},"services.tt-rss.registration.notifyAddress":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"","description":"Email address to send new user notifications to.\n","readOnly":false,"type":"string"},"services.tt-rss.root":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"/var/lib/tt-rss","description":"Root of the application.\n","example":"/var/lib/tt-rss","readOnly":false,"type":"path"},"services.tt-rss.selfUrlPath":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"description":"Full URL of your tt-rss installation. This should be set to the\nlocation of tt-rss directory, e.g. http://example.org/tt-rss/\nYou need to set this option correctly otherwise several features\nincluding PUSH, bookmarklets and browser integration will not work properly.\n","example":"http://localhost","readOnly":false,"type":"string"},"services.tt-rss.sessionCookieLifetime":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":86400,"description":"Default lifetime of a session (e.g. login) cookie. In seconds,\n0 means cookie will be deleted when browser closes.\n","readOnly":false,"type":"integer"},"services.tt-rss.simpleUpdateMode":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":false,"description":"Enables fallback update mode where tt-rss tries to update feeds in\nbackground while tt-rss is open in your browser.\nIf you don't have a lot of feeds and don't want to or can't run\nbackground processes while not running tt-rss, this method is generally\nviable to keep your feeds up to date.\nStill, there are more robust (and recommended) updating methods\navailable, you can read about them here: http://tt-rss.org/wiki/UpdatingFeeds\n","readOnly":false,"type":"boolean"},"services.tt-rss.singleUserMode":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":false,"description":"Operate in single user mode, disables all functionality related to\nmultiple users and authentication. Enabling this assumes you have\nyour tt-rss directory protected by other means (e.g. http auth).\n","readOnly":false,"type":"boolean"},"services.tt-rss.sphinx.index":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":["ttrss","delta"],"description":"Index names in Sphinx configuration. Example configuration\nfiles are available on tt-rss wiki.\n","readOnly":false,"type":"list of strings"},"services.tt-rss.sphinx.server":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"localhost:9312","description":"Hostname:port combination for the Sphinx server.\n","readOnly":false,"type":"string"},"services.tt-rss.user":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"nginx","description":"User account under which both the update daemon and the web-application run.\n","example":"nginx","readOnly":false,"type":"string"},"services.tt-rss.virtualHost":{"declarations":["nixos/modules/services/web-apps/tt-rss.nix"],"default":"tt-rss","description":"Name of the nginx virtualhost to use and setup. If null, do not setup any virtualhost.\n","readOnly":false,"type":"null or string"},"services.tvheadend.enable":{"declarations":["nixos/modules/services/networking/tvheadend.nix"],"default":false,"description":"Whether to enable Tvheadend.","example":true,"readOnly":false,"type":"boolean"},"services.tvheadend.htspPort":{"declarations":["nixos/modules/services/networking/tvheadend.nix"],"default":9982,"description":"Port to bind HTSP to.","readOnly":false,"type":"integer"},"services.tvheadend.httpPort":{"declarations":["nixos/modules/services/networking/tvheadend.nix"],"default":9981,"description":"Port to bind HTTP to.","readOnly":false,"type":"integer"},"services.u9fs.enable":{"declarations":["nixos/modules/services/network-filesystems/u9fs.nix"],"default":false,"description":"Whether to run the u9fs 9P server for Unix.","readOnly":false,"type":"boolean"},"services.u9fs.extraArgs":{"declarations":["nixos/modules/services/network-filesystems/u9fs.nix"],"default":"","description":"Extra arguments to pass on invocation,\nsee <command>man 4 u9fs</command>\n","example":"-a none","readOnly":false,"type":"string"},"services.u9fs.listenStreams":{"declarations":["nixos/modules/services/network-filesystems/u9fs.nix"],"default":["564"],"description":"Sockets to listen for clients on.\nSee <command>man 5 systemd.socket</command> for socket syntax.\n","example":["192.168.16.1:564"],"readOnly":false,"type":"list of strings"},"services.u9fs.user":{"declarations":["nixos/modules/services/network-filesystems/u9fs.nix"],"default":"nobody","description":"User to run u9fs under.","readOnly":false,"type":"string"},"services.udev.extraHwdb":{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":"","description":"Additional <command>hwdb</command> files. They'll be written\ninto file <filename>10-local.hwdb</filename>. Thus they are\nread before all other files.\n","example":"evdev:input:b0003v05AFp8277*\n  KEYBOARD_KEY_70039=leftalt\n  KEYBOARD_KEY_700e2=leftctrl\n","readOnly":false,"type":"string"},"services.udev.extraRules":{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":"","description":"Additional <command>udev</command> rules. They'll be written\ninto file <filename>99-local.rules</filename>. Thus they are\nread and applied after all other rules.\n","example":"KERNEL==\"eth*\", ATTR{address}==\"00:1D:60:B9:6D:4F\", NAME=\"my_fast_network_card\"\n","readOnly":false,"type":"string"},"services.udev.packages":{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":[],"description":"List of packages containing <command>udev</command> rules.\nAll files found in\n<filename><replaceable>pkg</replaceable>/etc/udev/rules.d</filename> and\n<filename><replaceable>pkg</replaceable>/lib/udev/rules.d</filename>\nwill be included.\n","readOnly":false,"type":"list of paths"},"services.udev.path":{"declarations":["nixos/modules/services/hardware/udev.nix"],"default":[],"description":"Packages added to the <envar>PATH</envar> environment variable when\nexecuting programs from Udev rules.\n","readOnly":false,"type":"list of paths"},"services.udisks2.enable":{"declarations":["nixos/modules/services/hardware/udisks2.nix"],"default":true,"description":"Whether to enable Udisks, a DBus service that allows\napplications to query and manipulate storage devices.\n","readOnly":false,"type":"boolean"},"services.uhub.aclConfig":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":"","description":"Contents of user ACL configuration file.","readOnly":false,"type":"string"},"services.uhub.address":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":"any","description":"Address to bind the hub to.","readOnly":false,"type":"string"},"services.uhub.enable":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":false,"description":"Whether to enable the uhub ADC hub.","readOnly":false,"type":"boolean"},"services.uhub.enableTLS":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":false,"description":"Whether to enable TLS support.","readOnly":false,"type":"boolean"},"services.uhub.hubConfig":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":"","description":"Contents of uhub configuration file.","readOnly":false,"type":"string"},"services.uhub.plugins.authSqlite.enable":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":false,"description":"Whether to enable the Sqlite authentication database plugin","readOnly":false,"type":"boolean"},"services.uhub.plugins.authSqlite.file":{"declarations":["nixos/modules/services/misc/uhub.nix"],"description":"Path to user database. Use the uhub-passwd utility to create the database and add/remove users.","example":"/var/db/uhub-users","readOnly":false,"type":"string"},"services.uhub.plugins.history.connect":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":5,"description":"The number of chat history messages to send when users connect (0 = do not send any history).","readOnly":false,"type":"integer"},"services.uhub.plugins.history.default":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":10,"description":"When !history is provided without arguments, then this default number of messages are returned.","readOnly":false,"type":"integer"},"services.uhub.plugins.history.enable":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":false,"description":"Whether to enable the history plugin.","readOnly":false,"type":"boolean"},"services.uhub.plugins.history.max":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":200,"description":"The maximum number of messages to keep in history","readOnly":false,"type":"integer"},"services.uhub.plugins.logging.enable":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":false,"description":"Whether to enable the logging plugin.","readOnly":false,"type":"boolean"},"services.uhub.plugins.logging.file":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":"","description":"Path of log file.","readOnly":false,"type":"string"},"services.uhub.plugins.logging.syslog":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":false,"description":"If true then the system log is used instead of writing to file.","readOnly":false,"type":"boolean"},"services.uhub.plugins.welcome.enable":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":false,"description":"Whether to enable the welcome plugin.","readOnly":false,"type":"boolean"},"services.uhub.plugins.welcome.motd":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":"","description":"Welcome message displayed to clients after connecting \nand with the <literal>!motd</literal> command.\n","readOnly":false,"type":"string"},"services.uhub.plugins.welcome.rules":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":"","description":"Rules message, displayed to clients with the <literal>!rules</literal> command.\n","readOnly":false,"type":"string"},"services.uhub.port":{"declarations":["nixos/modules/services/misc/uhub.nix"],"default":1511,"description":"TCP port to bind the hub to.","readOnly":false,"type":"integer"},"services.unbound.allowedAccess":{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":["127.0.0.0/24"],"description":"What networks are allowed to use unbound as a resolver.","readOnly":false,"type":"list of strings"},"services.unbound.enable":{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":false,"description":"Whether to enable Unbound domain name server.","example":true,"readOnly":false,"type":"boolean"},"services.unbound.enableRootTrustAnchor":{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":true,"description":"Use and update root trust anchor for DNSSEC validation.","readOnly":false,"type":"boolean"},"services.unbound.extraConfig":{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":"","description":"Extra unbound config. See\n<citerefentry><refentrytitle>unbound.conf</refentrytitle><manvolnum>8\n</manvolnum></citerefentry>.\n","readOnly":false,"type":"string"},"services.unbound.forwardAddresses":{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":[],"description":"What servers to forward queries to.","readOnly":false,"type":"list of strings"},"services.unbound.interfaces":{"declarations":["nixos/modules/services/networking/unbound.nix"],"default":["127.0.0.1","::1"],"description":"What addresses the server should listen on.","readOnly":false,"type":"list of strings"},"services.unclutter-xfixes.enable":{"declarations":["nixos/modules/services/x11/unclutter-xfixes.nix"],"default":false,"description":"Enable unclutter-xfixes to hide your mouse cursor when inactive.","example":true,"readOnly":false,"type":"boolean"},"services.unclutter-xfixes.extraOptions":{"declarations":["nixos/modules/services/x11/unclutter-xfixes.nix"],"default":[],"description":"More arguments to pass to the unclutter-xfixes command.","example":["exclude-root","ignore-scrolling","fork"],"readOnly":false,"type":"list of strings"},"services.unclutter-xfixes.package":{"declarations":["nixos/modules/services/x11/unclutter-xfixes.nix"],"default":"pkgs.unclutter-xfixes","description":"unclutter-xfixes derivation to use.","readOnly":false,"type":"package"},"services.unclutter-xfixes.threshold":{"declarations":["nixos/modules/services/x11/unclutter-xfixes.nix"],"default":1,"description":"Minimum number of pixels considered cursor movement.","readOnly":false,"type":"integer"},"services.unclutter-xfixes.timeout":{"declarations":["nixos/modules/services/x11/unclutter-xfixes.nix"],"default":1,"description":"Number of seconds before the cursor is marked inactive.","readOnly":false,"type":"integer"},"services.unclutter.enable":{"declarations":["nixos/modules/services/x11/unclutter.nix"],"default":false,"description":"Enable unclutter to hide your mouse cursor when inactive","example":true,"readOnly":false,"type":"boolean"},"services.unclutter.excluded":{"declarations":["nixos/modules/services/x11/unclutter.nix"],"default":[],"description":"Names of windows where unclutter should not apply","example":[""],"readOnly":false,"type":"list of strings"},"services.unclutter.extraOptions":{"declarations":["nixos/modules/services/x11/unclutter.nix"],"default":[],"description":"More arguments to pass to the unclutter command","example":["noevent","grab"],"readOnly":false,"type":"list of strings"},"services.unclutter.keystroke":{"declarations":["nixos/modules/services/x11/unclutter.nix"],"default":false,"description":"Wait for a keystroke before hiding the cursor","readOnly":false,"type":"boolean"},"services.unclutter.package":{"declarations":["nixos/modules/services/x11/unclutter.nix"],"default":"pkgs.unclutter","description":"unclutter derivation to use.","readOnly":false,"type":"package"},"services.unclutter.threeshold":{"declarations":["nixos/modules/services/x11/unclutter.nix"],"default":1,"description":"Minimum number of pixels considered cursor movement","readOnly":false,"type":"integer"},"services.unclutter.timeout":{"declarations":["nixos/modules/services/x11/unclutter.nix"],"default":1,"description":"Number of seconds before the cursor is marked inactive","readOnly":false,"type":"integer"},"services.unifi.dataDir":{"declarations":["nixos/modules/services/networking/unifi.nix"],"default":"/var/lib/unifi/data","description":"Where to store the database and other data.\n\nThis directory will be bind-mounted to /var/lib/unifi/data as part of the service startup.\n","readOnly":false,"type":"string"},"services.unifi.enable":{"declarations":["nixos/modules/services/networking/unifi.nix"],"default":false,"description":"Whether or not to enable the unifi controller service.\n","readOnly":false,"type":"boolean"},"services.unifi.openPorts":{"declarations":["nixos/modules/services/networking/unifi.nix"],"default":true,"description":"Whether or not to open the minimum required ports on the firewall.\n\nThis is necessary to allow firmware upgrades and device discovery to\nwork. For remote login, you should additionally open (or forward) port\n8443.\n","readOnly":false,"type":"boolean"},"services.upower.enable":{"declarations":["nixos/modules/services/hardware/upower.nix"],"default":false,"description":"Whether to enable Upower, a DBus service that provides power\nmanagement support to applications.\n","readOnly":false,"type":"boolean"},"services.upower.package":{"declarations":["nixos/modules/services/hardware/upower.nix"],"default":"pkgs.upower","description":"Which upower package to use.\n","example":{"_type":"literalExample","text":"pkgs.upower"},"readOnly":false,"type":"package"},"services.uptime.configFile":{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":null,"description":"The uptime configuration file\n\nIf mongodb: server != localhost, please set usesRemoteMongo = true\n\nIf you only want to run the monitor, please set enableWebService = false\nand enableSeparateMonitoringService = true\n\nIf autoStartMonitor: false (recommended) and you want to run both\nservices, please set enableSeparateMonitoringService = true\n","readOnly":false,"type":"null or path"},"services.uptime.enableSeparateMonitoringService":{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":false,"description":"Whether to enable the uptime monitoring service.","example":true,"readOnly":false,"type":"boolean"},"services.uptime.enableWebService":{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":false,"description":"Whether to enable the uptime monitoring program web service.","example":true,"readOnly":false,"type":"boolean"},"services.uptime.nodeEnv":{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":"production","description":"The node environment to run in (development, production, etc.)","readOnly":false,"type":"string"},"services.uptime.usesRemoteMongo":{"declarations":["nixos/modules/services/monitoring/uptime.nix"],"default":false,"description":"Whether the configuration file specifies a remote mongo instance","readOnly":false,"type":"boolean"},"services.uptimed.enable":{"declarations":["nixos/modules/services/system/uptimed.nix"],"default":false,"description":"Enable <literal>uptimed</literal>, allowing you to track\nyour highest uptimes.\n","readOnly":false,"type":"unspecified"},"services.urxvtd.enable":{"declarations":["nixos/modules/services/x11/urxvtd.nix"],"default":false,"description":"Enable urxvtd, the urxvt terminal daemon. To use urxvtd, run\n\"urxvtc\".\n","example":true,"readOnly":false,"type":"boolean"},"services.uwsgi.enable":{"declarations":["nixos/modules/services/web-servers/uwsgi.nix"],"default":false,"description":"Enable uWSGI","readOnly":false,"type":"boolean"},"services.uwsgi.group":{"declarations":["nixos/modules/services/web-servers/uwsgi.nix"],"default":"uwsgi","description":"Group account under which uwsgi runs.","readOnly":false,"type":"string"},"services.uwsgi.instance":{"declarations":["nixos/modules/services/web-servers/uwsgi.nix"],"default":{"type":"normal"},"description":"uWSGI configuration. It awaits an attribute <literal>type</literal> inside which can be either\n<literal>normal</literal> or <literal>emperor</literal>.\n\nFor <literal>normal</literal> mode you can specify <literal>pythonPackages</literal> as a function\nfrom libraries set into a list of libraries. <literal>pythonpath</literal> will be set accordingly.\n\nFor <literal>emperor</literal> mode, you should use <literal>vassals</literal> attribute\nwhich should be either a set of names and configurations or a path to a directory.\n\nOther attributes will be used in configuration file as-is. Notice that you can redefine\n<literal>plugins</literal> setting here.\n","example":{"_type":"literalExample","text":"{\n  type = \"emperor\";\n  vassals = {\n    moin = {\n      type = \"normal\";\n      pythonPackages = self: with self; [ moinmoin ];\n      socket = \"/run/uwsgi/uwsgi.sock\";\n    };\n  };\n}\n"},"readOnly":false,"type":"attribute set"},"services.uwsgi.plugins":{"declarations":["nixos/modules/services/web-servers/uwsgi.nix"],"default":[],"description":"Plugins used with uWSGI","readOnly":false,"type":"list of strings"},"services.uwsgi.runDir":{"declarations":["nixos/modules/services/web-servers/uwsgi.nix"],"default":"/run/uwsgi","description":"Where uWSGI communication sockets can live","readOnly":false,"type":"string"},"services.uwsgi.user":{"declarations":["nixos/modules/services/web-servers/uwsgi.nix"],"default":"uwsgi","description":"User account under which uwsgi runs.","readOnly":false,"type":"string"},"services.varnish.config":{"declarations":["nixos/modules/services/web-servers/varnish/default.nix"],"description":"\n          Verbatim default.vcl configuration.\n        ","readOnly":false,"type":"unspecified"},"services.varnish.enable":{"declarations":["nixos/modules/services/web-servers/varnish/default.nix"],"default":false,"description":"\n          Enable the Varnish Server.\n        ","readOnly":false,"type":"unspecified"},"services.varnish.http_address":{"declarations":["nixos/modules/services/web-servers/varnish/default.nix"],"default":"*:6081","description":"\n          HTTP listen address and port.\n        ","readOnly":false,"type":"unspecified"},"services.varnish.stateDir":{"declarations":["nixos/modules/services/web-servers/varnish/default.nix"],"default":"/var/spool/varnish/nixos","description":"\n          Directory holding all state for Varnish to run.\n        ","readOnly":false,"type":"unspecified"},"services.venus.cacheDirectory":{"declarations":["nixos/modules/programs/venus.nix"],"default":"/var/cache/venus","description":"Where cached feeds are stored.\n","readOnly":false,"type":"path"},"services.venus.dates":{"declarations":["nixos/modules/programs/venus.nix"],"default":"*:0/15","description":"Specification (in the format described by\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>) of the time at\nwhich the Venus will collect feeds.\n","readOnly":false,"type":"string"},"services.venus.enable":{"declarations":["nixos/modules/programs/venus.nix"],"default":false,"description":"Planet Venus is an awesome ‘river of news’ feed reader. It downloads\nnews feeds published by web sites and aggregates their content\ntogether into a single combined feed, latest news first.\n","readOnly":false,"type":"boolean"},"services.venus.feeds":{"declarations":["nixos/modules/programs/venus.nix"],"default":[],"description":"List of feeds.\n","example":[{"feedUrl":"http://url/to/rss/feed.xml","homepageUrl":"http://garbas.si","name":"Rok Garbas"}],"readOnly":false,"type":"unspecified"},"services.venus.group":{"declarations":["nixos/modules/programs/venus.nix"],"default":"root","description":"Group for running venus script.\n","readOnly":false,"type":"string"},"services.venus.itemsPerPage":{"declarations":["nixos/modules/programs/venus.nix"],"default":15,"description":"How many items to put on each page.\n","readOnly":false,"type":"integer"},"services.venus.link":{"declarations":["nixos/modules/programs/venus.nix"],"default":"http://planet.nixos.org","description":"Link to the main page.\n","readOnly":false,"type":"string"},"services.venus.name":{"declarations":["nixos/modules/programs/venus.nix"],"default":"NixOS Planet","description":"Your planet's name.\n","readOnly":false,"type":"string"},"services.venus.outputDirectory":{"declarations":["nixos/modules/programs/venus.nix"],"description":"Directory to place output files.\n","readOnly":false,"type":"path"},"services.venus.outputTheme":{"declarations":["nixos/modules/programs/venus.nix"],"default":"${pkgs.venus}/themes/classic_fancy","description":"Directory containing a config.ini file which is merged with this one.\nThis is typically used to specify templating and bill of material\ninformation.\n","readOnly":false,"type":"path"},"services.venus.ownerEmail":{"declarations":["nixos/modules/programs/venus.nix"],"default":"some@example.com","description":"Your e-mail address.\n","readOnly":false,"type":"string"},"services.venus.ownerName":{"declarations":["nixos/modules/programs/venus.nix"],"default":"Rok Garbas","description":"Your name.\n","readOnly":false,"type":"string"},"services.venus.user":{"declarations":["nixos/modules/programs/venus.nix"],"default":"root","description":"User for running venus script.\n","readOnly":false,"type":"string"},"services.virtualbox.enable":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>virtualisation.virtualbox.guest.enable</option>.","readOnly":false,"type":"unspecified"},"services.virtualboxGuest.enable":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>virtualisation.virtualbox.guest.enable</option>.","readOnly":false,"type":"unspecified"},"services.virtualboxHost.addNetworkInterface":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>virtualisation.virtualbox.host.addNetworkInterface</option>.","readOnly":false,"type":"unspecified"},"services.virtualboxHost.enable":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>virtualisation.virtualbox.host.enable</option>.","readOnly":false,"type":"unspecified"},"services.virtualboxHost.enableHardening":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>virtualisation.virtualbox.host.enableHardening</option>.","readOnly":false,"type":"unspecified"},"services.virtuoso.config":{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":"","description":"Extra options to put into Virtuoso configuration file.","readOnly":false,"type":"unspecified"},"services.virtuoso.dirsAllowed":{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":null,"description":"A list of directories Virtuoso is allowed to access","example":"/www, /home/","readOnly":false,"type":"unspecified"},"services.virtuoso.enable":{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":false,"description":"Whether to enable Virtuoso Opensource database server.","readOnly":false,"type":"unspecified"},"services.virtuoso.httpListenAddress":{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":null,"description":"ip:port or port for Virtuoso HTTP server to listen on.","example":"myserver:8080","readOnly":false,"type":"unspecified"},"services.virtuoso.listenAddress":{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":"1111","description":"ip:port or port to listen on.","example":"myserver:1323","readOnly":false,"type":"unspecified"},"services.virtuoso.parameters":{"declarations":["nixos/modules/services/databases/virtuoso.nix"],"default":"","description":"Extra options to put into [Parameters] section of Virtuoso configuration file.","readOnly":false,"type":"unspecified"},"services.vmwareGuest.enable":{"declarations":["nixos/modules/virtualisation/vmware-guest.nix"],"default":false,"description":"Whether to enable VMWare Guest Support.","example":true,"readOnly":false,"type":"boolean"},"services.vsftpd.anonymousMkdirEnable":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Whether any uploads are permitted to anonymous users.\n","readOnly":false,"type":"boolean"},"services.vsftpd.anonymousUmask":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"077","description":"Anonymous write umask.","example":"002","readOnly":false,"type":"string"},"services.vsftpd.anonymousUploadEnable":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Whether any uploads are permitted to anonymous users.\n","readOnly":false,"type":"boolean"},"services.vsftpd.anonymousUser":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Whether to enable the anonymous FTP user.\n","readOnly":false,"type":"boolean"},"services.vsftpd.anonymousUserHome":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"/home/ftp/","description":"Directory to consider the HOME of the anonymous user.\n","readOnly":false,"type":"path"},"services.vsftpd.chrootlocalUser":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Whether local users are confined to their home directory.\n","readOnly":false,"type":"boolean"},"services.vsftpd.enable":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Whether to enable the vsftpd FTP server.","readOnly":false,"type":"unspecified"},"services.vsftpd.extraConfig":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"","description":"Extra configuration to add at the bottom of the generated configuration file.","example":"ftpd_banner=Hello","readOnly":false,"type":"string"},"services.vsftpd.forceLocalDataSSL":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Only applies if <option>sslEnable</option> is true. Non anonymous (local) users\nmust use a secure SSL connection for sending/receiving data on data connection.\n","readOnly":false,"type":"boolean"},"services.vsftpd.forceLocalLoginsSSL":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Only applies if <option>sslEnable</option> is true. Non anonymous (local) users\nmust use a secure SSL connection to send a password.\n","readOnly":false,"type":"boolean"},"services.vsftpd.localUsers":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Whether to enable FTP for local users.\n","readOnly":false,"type":"boolean"},"services.vsftpd.portPromiscuous":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Set to YES if you want to disable the PORT security check that ensures that\noutgoing data connections can only connect to the client. Only enable if you\nknow what you are doing!\n","readOnly":false,"type":"boolean"},"services.vsftpd.rsaCertFile":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":null,"description":"RSA certificate file.","readOnly":false,"type":"null or path"},"services.vsftpd.rsaKeyFile":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":null,"description":"RSA private key file.","readOnly":false,"type":"null or path"},"services.vsftpd.ssl_sslv2":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"","readOnly":false,"type":"boolean"},"services.vsftpd.ssl_sslv3":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"","readOnly":false,"type":"boolean"},"services.vsftpd.ssl_tlsv1":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":true,"description":"","readOnly":false,"type":"boolean"},"services.vsftpd.userlist":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":[],"description":"See <option>userlistFile</option>.","readOnly":false,"type":"unspecified"},"services.vsftpd.userlistDeny":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Specifies whether <option>userlistFile</option> is a list of user\nnames to allow or deny access.\nThe default <literal>false</literal> means whitelist/allow.\n","readOnly":false,"type":"boolean"},"services.vsftpd.userlistEnable":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Whether users are included.\n","readOnly":false,"type":"boolean"},"services.vsftpd.userlistFile":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":"pkgs.writeText \"userlist\" (concatMapStrings (x: \"${x}\n\") cfg.userlist)","description":"Newline separated list of names to be allowed/denied if <option>userlistEnable</option>\nis <literal>true</literal>. Meaning see <option>userlistDeny</option>.\n\nThe default is a file containing the users from <option>userlist</option>.\n\nIf explicitely set to null userlist_file will not be set in vsftpd's config file.\n","readOnly":false,"type":"path"},"services.vsftpd.writeEnable":{"declarations":["nixos/modules/services/networking/vsftpd.nix"],"default":false,"description":"Whether any write activity is permitted to users.\n","readOnly":false,"type":"boolean"},"services.wakeonlan.interfaces":{"declarations":["nixos/modules/services/networking/wakeonlan.nix"],"default":[],"description":"Interfaces where to enable Wake-On-LAN, and how. Two methods available:\n\"magicpacket\" and \"password\". The password has the shape of six bytes\nin hexadecimal separated by a colon each. For more information,\ncheck the ethtool manual.\n","example":[{"interface":"eth0","method":"password","password":"00:11:22:33:44:55"}],"readOnly":false,"type":"unspecified"},"services.winstone":{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"default":{},"description":"Defines independent Winstone services, each serving one WAR-file.\n","readOnly":false,"type":"attribute set of submodules"},"services.winstone.<name>.extraJavaOptions":{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"default":[],"description":"Extra command line options given to the java process running\nWinstone.\n","readOnly":false,"type":"list of strings"},"services.winstone.<name>.extraOptions":{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"default":[],"description":"Extra command line options given to the Winstone process.\n","readOnly":false,"type":"list of strings"},"services.winstone.<name>.group":{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"description":"The group that will own the working directory.\n","readOnly":false,"type":"string"},"services.winstone.<name>.javaPackage":{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"default":"pkgs.jre","description":"Which Java derivation to use for running Winstone.\n","readOnly":false,"type":"package"},"services.winstone.<name>.serviceName":{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"description":"The name of the systemd service. By default, it is\nderived from the winstone instance name.\n","readOnly":false,"type":"string"},"services.winstone.<name>.user":{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"description":"The user that should run this Winstone process and\nown the working directory.\n","readOnly":false,"type":"string"},"services.winstone.<name>.warFile":{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"description":"The WAR file that Winstone should serve.\n","readOnly":false,"type":"string"},"services.winstone.<name>.workDir":{"declarations":["nixos/modules/services/web-servers/winstone.nix"],"description":"The working directory for this Winstone instance. Will\ncontain extracted webapps etc. The directory will be\ncreated if it doesn't exist.\n","readOnly":false,"type":"string"},"services.xbanish.arguments":{"declarations":["nixos/modules/services/x11/xbanish.nix"],"default":"","description":"Arguments to pass to xbanish command","example":"-d -i shift","readOnly":false,"type":"string"},"services.xbanish.enable":{"declarations":["nixos/modules/services/x11/xbanish.nix"],"default":false,"description":"Whether to enable xbanish.","example":true,"readOnly":false,"type":"boolean"},"services.xe-guest-utilities.enable":{"declarations":["nixos/modules/virtualisation/xe-guest-utilities.nix"],"default":false,"description":"Whether to enable Whether to enable the Xen guest utilities daemon..","example":true,"readOnly":false,"type":"boolean"},"services.xfs.enable":{"declarations":["nixos/modules/services/x11/xfs.nix"],"default":false,"description":"Whether to enable the X Font Server.","readOnly":false,"type":"boolean"},"services.xinetd.enable":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":false,"description":"Whether to enable the xinetd super-server daemon.\n","readOnly":false,"type":"unspecified"},"services.xinetd.extraDefaults":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":"","description":"Additional configuration lines added to the default section of xinetd's configuration.\n","readOnly":false,"type":"string"},"services.xinetd.services":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":[],"description":"A list of services provided by xinetd.\n","readOnly":false,"type":"list of submodules"},"services.xinetd.services.*.extraConfig":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":"","description":"Extra configuration-lines added to the section of the service.","readOnly":false,"type":"string"},"services.xinetd.services.*.flags":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":"","description":"","readOnly":false,"type":"string"},"services.xinetd.services.*.name":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"description":"Name of the service.","example":"login","readOnly":false,"type":"string"},"services.xinetd.services.*.port":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":0,"description":"Port number of the service.","example":123,"readOnly":false,"type":"integer"},"services.xinetd.services.*.protocol":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":"tcp","description":"Protocol of the service.  Usually <literal>tcp</literal> or <literal>udp</literal>.","readOnly":false,"type":"string"},"services.xinetd.services.*.server":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"description":"Path of the program that implements the service.","example":"/foo/bin/ftpd","readOnly":false,"type":"string"},"services.xinetd.services.*.serverArgs":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":"","description":"Command-line arguments for the server program.","readOnly":false,"type":"string"},"services.xinetd.services.*.unlisted":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":false,"description":"Whether this server is listed in\n<filename>/etc/services</filename>.  If so, the port\nnumber can be omitted.\n","readOnly":false,"type":"boolean"},"services.xinetd.services.*.user":{"declarations":["nixos/modules/services/networking/xinetd.nix"],"default":"nobody","description":"User account for the service","readOnly":false,"type":"string"},"services.xl2tpd.clientIpRange":{"declarations":["nixos/modules/services/networking/xl2tpd.nix"],"default":"10.125.125.2-11","description":"The range from which client IPs are drawn.","readOnly":false,"type":"string"},"services.xl2tpd.enable":{"declarations":["nixos/modules/services/networking/xl2tpd.nix"],"default":false,"description":"Whether to enable Whether xl2tpd should be run on startup..","example":true,"readOnly":false,"type":"boolean"},"services.xl2tpd.extraPppdOptions":{"declarations":["nixos/modules/services/networking/xl2tpd.nix"],"default":"","description":"Adds extra lines to the pppd options file.","example":"ms-dns 8.8.8.8\nms-dns 8.8.4.4\n","readOnly":false,"type":"string"},"services.xl2tpd.extraXl2tpOptions":{"declarations":["nixos/modules/services/networking/xl2tpd.nix"],"default":"","description":"Adds extra lines to the xl2tpd configuration file.","readOnly":false,"type":"string"},"services.xl2tpd.serverIp":{"declarations":["nixos/modules/services/networking/xl2tpd.nix"],"default":"10.125.125.1","description":"The server-side IP address.","readOnly":false,"type":"string"},"services.xserver.autoRepeatDelay":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"Sets the autorepeat delay (length of time in milliseconds that a key must be depressed before autorepeat starts).\n","readOnly":false,"type":"null or integer"},"services.xserver.autoRepeatInterval":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"Sets the autorepeat interval (length of time in milliseconds that should elapse between autorepeat-generated keystrokes).\n","readOnly":false,"type":"null or integer"},"services.xserver.autorun":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":true,"description":"Whether to start the X server automatically.\n","readOnly":false,"type":"boolean"},"services.xserver.config":{"declarations":["nixos/modules/services/x11/xserver.nix"],"description":"The contents of the configuration file of the X server\n(<filename>xorg.conf</filename>).\n","readOnly":false,"type":"string"},"services.xserver.defaultDepth":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":0,"description":"Default colour depth.","example":8,"readOnly":false,"type":"integer"},"services.xserver.desktopManager.default":{"declarations":["nixos/modules/services/x11/desktop-managers/default.nix"],"default":"","description":"Default desktop manager loaded if none have been chosen.","example":"none","readOnly":false,"type":"string"},"services.xserver.desktopManager.e19.enable":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.xserver.desktopManager.enlightenment.enable</option>.","readOnly":false,"type":"unspecified"},"services.xserver.desktopManager.enlightenment.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/enlightenment.nix"],"default":false,"description":"Enable the Enlightenment desktop environment.","example":true,"readOnly":false,"type":"unspecified"},"services.xserver.desktopManager.gnome3.debug":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":false,"description":"Whether to enable gnome-session debug messages.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.desktopManager.gnome3.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":false,"description":"Enable Gnome 3 desktop manager.","example":true,"readOnly":false,"type":"unspecified"},"services.xserver.desktopManager.gnome3.extraGSettingsOverridePackages":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":[],"description":"List of packages for which gsettings are overridden.","readOnly":false,"type":"list of paths"},"services.xserver.desktopManager.gnome3.extraGSettingsOverrides":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":"","description":"Additional gsettings overrides.","readOnly":false,"type":"string"},"services.xserver.desktopManager.gnome3.sessionPath":{"declarations":["nixos/modules/services/x11/desktop-managers/gnome3.nix"],"default":[],"description":"Additional list of packages to be added to the session search path.\n                       Useful for gnome shell extensions or gsettings-conditionated autostart.","example":{"_type":"literalExample","text":"[ pkgs.gnome3.gpaste ]"},"readOnly":false,"type":"unspecified"},"services.xserver.desktopManager.kde4.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/kde4.nix"],"default":false,"description":"Enable the KDE 4 desktop environment.","readOnly":false,"type":"boolean"},"services.xserver.desktopManager.kde4.enableNepomuk":{"declarations":["nixos/modules/services/x11/desktop-managers/kde4.nix"],"default":false,"description":"Whether to enable Nepomuk (deprecated).","readOnly":false,"type":"boolean"},"services.xserver.desktopManager.kde4.enablePIM":{"declarations":["nixos/modules/services/x11/desktop-managers/kde4.nix"],"default":true,"description":"Whether to enable PIM support. Note that enabling this pulls in Akonadi and MariaDB as dependencies.","readOnly":false,"type":"boolean"},"services.xserver.desktopManager.kde4.phononBackends":{"declarations":["nixos/modules/services/x11/desktop-managers/kde4.nix"],"default":["gstreamer"],"description":"Which phonon multimedia backend kde should use","example":["gstreamer","vlc"],"readOnly":false,"type":"list of strings"},"services.xserver.desktopManager.kde5.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/kde5.nix"],"default":false,"description":"Enable the Plasma 5 (KDE 5) desktop environment.","readOnly":false,"type":"boolean"},"services.xserver.desktopManager.kde5.enableQt4Support":{"declarations":["nixos/modules/services/x11/desktop-managers/kde5.nix"],"default":true,"description":"Enable support for Qt 4-based applications. Particularly, install the\nQt 4 version of the Breeze theme and a default backend for Phonon.\n","readOnly":false,"type":"boolean"},"services.xserver.desktopManager.kodi.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/kodi.nix"],"default":false,"description":"Enable the kodi multimedia center.","example":true,"readOnly":false,"type":"unspecified"},"services.xserver.desktopManager.lumina.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/lumina.nix"],"default":false,"description":"Enable the Lumina desktop manager","readOnly":false,"type":"boolean"},"services.xserver.desktopManager.lxqt.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/lxqt.nix"],"default":false,"description":"Enable the LXQt desktop manager","readOnly":false,"type":"boolean"},"services.xserver.desktopManager.xbmc":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.xserver.desktopManager.kodi</option>.","readOnly":false,"type":"unspecified"},"services.xserver.desktopManager.xfce.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/xfce.nix"],"default":false,"description":"Enable the Xfce desktop environment.","readOnly":false,"type":"boolean"},"services.xserver.desktopManager.xfce.extraSessionCommands":{"declarations":["nixos/modules/services/x11/desktop-managers/xfce.nix"],"default":"","description":"Shell commands executed just before XFCE is started.\n","readOnly":false,"type":"string"},"services.xserver.desktopManager.xfce.noDesktop":{"declarations":["nixos/modules/services/x11/desktop-managers/xfce.nix"],"default":false,"description":"Don't install XFCE desktop components (xfdesktop, panel and notification daemon).","readOnly":false,"type":"boolean"},"services.xserver.desktopManager.xfce.thunarPlugins":{"declarations":["nixos/modules/services/x11/desktop-managers/xfce.nix"],"default":[],"description":"A list of plugin that should be installed with Thunar.\n","example":{"_type":"literalExample","text":"[ pkgs.xfce.thunar-archive-plugin ]"},"readOnly":false,"type":"list of packages"},"services.xserver.desktopManager.xterm.enable":{"declarations":["nixos/modules/services/x11/desktop-managers/xterm.nix"],"default":true,"description":"Enable a xterm terminal as a desktop manager.","example":false,"readOnly":false,"type":"unspecified"},"services.xserver.deviceSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first Device section of the X server configuration file.","example":"VideoRAM 131072","readOnly":false,"type":"string"},"services.xserver.display":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":0,"description":"Display number for the X server.","readOnly":false,"type":"null or integer"},"services.xserver.displayManager.auto.enable":{"declarations":["nixos/modules/services/x11/display-managers/auto.nix"],"default":false,"description":"Whether to enable the fake \"auto\" display manager, which\nautomatically logs in the user specified in the\n<option>user</option> option.  This is mostly useful for\nautomated tests.\n","readOnly":false,"type":"unspecified"},"services.xserver.displayManager.auto.user":{"declarations":["nixos/modules/services/x11/display-managers/auto.nix"],"default":"root","description":"The user account to login automatically.","readOnly":false,"type":"unspecified"},"services.xserver.displayManager.gdm.autoLogin":{"declarations":["nixos/modules/services/x11/display-managers/gdm.nix"],"default":{},"description":"Auto login configuration attrset.\n","readOnly":false,"type":"submodule"},"services.xserver.displayManager.gdm.autoLogin.delay":{"declarations":["nixos/modules/services/x11/display-managers/gdm.nix"],"default":0,"description":"Seconds of inactivity after which the autologin will be performed.\n","readOnly":false,"type":"integer"},"services.xserver.displayManager.gdm.autoLogin.enable":{"declarations":["nixos/modules/services/x11/display-managers/gdm.nix"],"default":false,"description":"Automatically log in as the sepecified <option>autoLogin.user</option>.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.gdm.autoLogin.user":{"declarations":["nixos/modules/services/x11/display-managers/gdm.nix"],"default":null,"description":"User to be used for the autologin.\n","readOnly":false,"type":"null or string"},"services.xserver.displayManager.gdm.debug":{"declarations":["nixos/modules/services/x11/display-managers/gdm.nix"],"default":false,"description":"Whether to enable debugging messages in GDM\n.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.displayManager.gdm.enable":{"declarations":["nixos/modules/services/x11/display-managers/gdm.nix"],"default":false,"description":"Whether to enable GDM as the display manager.\n<emphasis>GDM in NixOS is not well-tested with desktops other\nthan GNOME, so use with caution, as it could render the\nsystem unusable.</emphasis>\n.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.displayManager.hiddenUsers":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":["nobody"],"description":"A list of users which will not be shown in the display manager.\n","readOnly":false,"type":"list of strings"},"services.xserver.displayManager.job.environment":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":{},"description":"Additional environment variables needed by the display manager.","example":{"SLIM_CFGFILE":"/etc/slim.conf"},"readOnly":false,"type":"attribute set of unspecifieds"},"services.xserver.displayManager.job.execCmd":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"description":"Command to start the display manager.","example":{"_type":"literalExample","text":"\"${pkgs.slim}/bin/slim\"\n"},"readOnly":false,"type":"string"},"services.xserver.displayManager.job.logsXsession":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":false,"description":"Whether the display manager redirects the\noutput of the session script to\n<filename>~/.xsession-errors</filename>.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.job.preStart":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Script executed before the display manager is started.","example":"rm -f /var/log/my-display-manager.log","readOnly":false,"type":"string"},"services.xserver.displayManager.kdm.enable":{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":false,"description":"Whether to enable the KDE display manager.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.kdm.enableXDMCP":{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":false,"description":"Whether to enable XDMCP, which allows remote logins.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.kdm.extraConfig":{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":"","description":"Options appended to <filename>kdmrc</filename>, the\nconfiguration file of KDM.\n","readOnly":false,"type":"string"},"services.xserver.displayManager.kdm.setupScript":{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":"","description":"The path to a KDM setup script. This script is run as root just\nbefore KDM starts. Can be used for setting up\nmonitors with xrandr, for example.\n","readOnly":false,"type":"string"},"services.xserver.displayManager.kdm.themeDirectory":{"declarations":["nixos/modules/services/x11/display-managers/kdm.nix"],"default":null,"description":"The path to a KDM theme directory. This theme\nwill be used by the KDM greeter.\n","readOnly":false,"type":"null or string"},"services.xserver.displayManager.lightdm.autoLogin":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":{},"description":"Configuration for automatic login.\n","readOnly":false,"type":"submodule"},"services.xserver.displayManager.lightdm.autoLogin.enable":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":false,"description":"Automatically log in as the specified <option>autoLogin.user</option>.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.lightdm.autoLogin.timeout":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":0,"description":"Show the greeter for this many seconds before automatic login occurs.\n","readOnly":false,"type":"integer"},"services.xserver.displayManager.lightdm.autoLogin.user":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":null,"description":"User to be used for the automatic login.\n","readOnly":false,"type":"null or string"},"services.xserver.displayManager.lightdm.background":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":"${pkgs.nixos-artwork}/share/artwork/gnome/Gnome_Dark.png","description":"The background image or color to use.\n","readOnly":false,"type":"string"},"services.xserver.displayManager.lightdm.enable":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":false,"description":"Whether to enable lightdm as the display manager.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.lightdm.extraSeatDefaults":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":"","description":"Extra lines to append to SeatDefaults section.","example":"greeter-show-manual-login=true\n","readOnly":false,"type":"string"},"services.xserver.displayManager.lightdm.greeter.enable":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"default":true,"description":"If set to false, run lightdm in greeterless mode. This only works if autologin\nis enabled and autoLogin.timeout is zero.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.lightdm.greeter.name":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"description":"The name of a .desktop file in the directory specified\nin the 'package' option.\n","readOnly":false,"type":"string"},"services.xserver.displayManager.lightdm.greeter.package":{"declarations":["nixos/modules/services/x11/display-managers/lightdm.nix"],"description":"The LightDM greeter to login via. The package should be a directory\ncontaining a .desktop file matching the name in the 'name' option.\n","readOnly":false,"type":"package"},"services.xserver.displayManager.lightdm.greeters.gtk.enable":{"declarations":["nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix"],"default":true,"description":"Whether to enable lightdm-gtk-greeter as the lightdm greeter.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.lightdm.greeters.gtk.iconTheme.name":{"declarations":["nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix"],"default":"Adwaita","description":"Name of the icon theme to use for the lightdm-gtk-greeter.\n","readOnly":false,"type":"string"},"services.xserver.displayManager.lightdm.greeters.gtk.iconTheme.package":{"declarations":["nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix"],"default":"pkgs.gnome3.defaultIconTheme","description":"The package path that contains the icon theme given in the name option.\n","readOnly":false,"type":"package"},"services.xserver.displayManager.lightdm.greeters.gtk.theme.name":{"declarations":["nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix"],"default":"Adwaita","description":"Name of the theme to use for the lightdm-gtk-greeter.\n","readOnly":false,"type":"string"},"services.xserver.displayManager.lightdm.greeters.gtk.theme.package":{"declarations":["nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix"],"default":"pkgs.gnome3.gnome_themes_standard","description":"The package path that contains the theme given in the name option.\n","readOnly":false,"type":"package"},"services.xserver.displayManager.logToJournal":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":true,"description":"By default, the stdout/stderr of sessions is written\nto <filename>~/.xsession-errors</filename>. When this option\nis enabled, it will instead be written to the journal.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.sddm.autoLogin":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":{},"description":"Configuration for automatic login.\n","readOnly":false,"type":"submodule"},"services.xserver.displayManager.sddm.autoLogin.enable":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":false,"description":"Automatically log in as <option>autoLogin.user</option>.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.sddm.autoLogin.relogin":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":false,"description":"If true automatic login will kick in again on session exit (logout), otherwise it\nwill only log in automatically when the display-manager is started.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.sddm.autoLogin.user":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":null,"description":"User to be used for the automatic login.\n","readOnly":false,"type":"null or string"},"services.xserver.displayManager.sddm.autoNumlock":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":false,"description":"Enable numlock at login.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.sddm.enable":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":false,"description":"Whether to enable sddm as the display manager.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.sddm.extraConfig":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":"","description":"Extra lines appended to the configuration of SDDM.\n","example":"[Autologin]\nUser=john\nSession=plasma.desktop\n","readOnly":false,"type":"string"},"services.xserver.displayManager.sddm.setupScript":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":"","description":"A script to execute when starting the display server.\n","example":"# workaround for using NVIDIA Optimus without Bumblebee\nxrandr --setprovideroutputsource modesetting NVIDIA-0\nxrandr --auto\n","readOnly":false,"type":"string"},"services.xserver.displayManager.sddm.stopScript":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":"","description":"A script to execute when stopping the display server.\n","readOnly":false,"type":"string"},"services.xserver.displayManager.sddm.theme":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":"","description":"Greeter theme to use.\n","readOnly":false,"type":"string"},"services.xserver.displayManager.sddm.themes":{"declarations":["nixos/modules/services/x11/display-managers/sddm.nix"],"default":[],"description":"Extra packages providing themes.\n","readOnly":false,"type":"list of packages"},"services.xserver.displayManager.session":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":[],"description":"List of sessions supported with the command used to start each\nsession.  Each session script can set the\n<varname>waitPID</varname> shell variable to make this script\nwait until the end of the user session.  Each script is used\nto define either a windows manager or a desktop manager.  These\ncan be differentiated by setting the attribute\n<varname>manage</varname> either to <literal>\"window\"</literal>\nor <literal>\"desktop\"</literal>.\n\nThe list of desktop manager and window manager should appear\ninside the display manager with the desktop manager name\nfollowed by the window manager name.\n","example":{"_type":"literalExample","text":"[ { manage = \"desktop\";\n    name = \"xterm\";\n    start = ''\n      ${pkgs.xterm}/bin/xterm -ls &\n      waitPID=$!\n    '';\n  }\n]\n"},"readOnly":false,"type":"unspecified"},"services.xserver.displayManager.sessionCommands":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":"","description":"Shell commands executed just before the window or desktop manager is started.","example":"xmessage \"Hello World!\" &\n","readOnly":false,"type":"string"},"services.xserver.displayManager.slim.autoLogin":{"declarations":["nixos/modules/services/x11/display-managers/slim.nix"],"default":false,"description":"Automatically log in as the default user.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.slim.defaultUser":{"declarations":["nixos/modules/services/x11/display-managers/slim.nix"],"default":null,"description":"The default user to load. If you put a username here you\nget it automatically loaded into the username field, and\nthe focus is placed on the password.\n","example":"login","readOnly":false,"type":"null or string"},"services.xserver.displayManager.slim.enable":{"declarations":["nixos/modules/services/x11/display-managers/slim.nix"],"default":false,"description":"Whether to enable SLiM as the display manager.\n","readOnly":false,"type":"boolean"},"services.xserver.displayManager.slim.extraConfig":{"declarations":["nixos/modules/services/x11/display-managers/slim.nix"],"default":"","description":"Extra configuration options for SLiM login manager. Do not\nadd options that can be configured directly.\n","readOnly":false,"type":"string"},"services.xserver.displayManager.slim.theme":{"declarations":["nixos/modules/services/x11/display-managers/slim.nix"],"default":"pkgs.fetchurl {\n          url = \"https://github.com/jagajaga/nixos-slim-theme/archive/2.0.tar.gz\";\n          sha256 = \"0lldizhigx7bjhxkipii87y432hlf5wdvamnfxrryf9z7zkfypc8\";\n        }","description":"The theme for the SLiM login manager.  If not specified, SLiM's\ndefault theme is used.  See <link\nxlink:href='http://slim.berlios.de/themes01.php'/> for a\ncollection of themes. TODO: berlios shut down.\n","example":{"_type":"literalExample","text":"pkgs.fetchurl {\n  url = \"mirror://sourceforge/slim.berlios/slim-wave.tar.gz\";\n  sha256 = \"0ndr419i5myzcylvxb89m9grl2xyq6fbnyc3lkd711mzlmnnfxdy\";\n}\n"},"readOnly":false,"type":"null or path"},"services.xserver.displayManager.xserverArgs":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"default":[],"description":"List of arguments for the X server.","example":["-ac","-logverbose","-verbose","-nolisten tcp"],"readOnly":false,"type":"list of strings"},"services.xserver.displayManager.xserverBin":{"declarations":["nixos/modules/services/x11/display-managers/default.nix"],"description":"Path to the X server used by display managers.","readOnly":false,"type":"path"},"services.xserver.dpi":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"DPI resolution to use for X server.","readOnly":false,"type":"null or integer"},"services.xserver.driSupport":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>hardware.opengl.driSupport</option>.","readOnly":false,"type":"unspecified"},"services.xserver.driSupport32Bit":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>hardware.opengl.driSupport32Bit</option>.","readOnly":false,"type":"unspecified"},"services.xserver.enable":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to enable the X server.\n","readOnly":false,"type":"boolean"},"services.xserver.enableCtrlAltBackspace":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to enable the DontZap option, which binds Ctrl+Alt+Backspace\nto forcefully kill X. This can lead to data loss and is disabled\nby default.\n","readOnly":false,"type":"boolean"},"services.xserver.enableTCP":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to allow the X server to accept TCP connections.\n","readOnly":false,"type":"boolean"},"services.xserver.exportConfiguration":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to symlink the X server configuration under\n<filename>/etc/X11/xorg.conf</filename>.\n","readOnly":false,"type":"boolean"},"services.xserver.extraDisplaySettings":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Lines to be added to every Display subsection of the Screen section.","example":"Virtual 2048 2048","readOnly":false,"type":"string"},"services.xserver.inputClassSections":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":[],"description":"Content of additional InputClass sections of the X server configuration file.","example":{"_type":"literalExample","text":"[ ''\n    Identifier      \"Trackpoint Wheel Emulation\"\n    MatchProduct    \"ThinkPad USB Keyboard with TrackPoint\"\n    Option          \"EmulateWheel\"          \"true\"\n    Option          \"EmulateWheelButton\"    \"2\"\n    Option          \"Emulate3Buttons\"       \"false\"\n  ''\n]\n"},"readOnly":false,"type":"list of strings"},"services.xserver.layout":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"us","description":"Keyboard layout.\n","readOnly":false,"type":"string"},"services.xserver.libinput.accelProfile":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":"adaptive","description":"Sets  the pointer acceleration profile to the given profile.\nPermitted values are adaptive, flat.\nNot all devices support this option or all profiles.\nIf a profile is unsupported, the default profile for this is used.\n<literal>flat</literal>: Pointer motion is accelerated by a constant\n(device-specific) factor, depending on the current speed.\n<literal>adaptive</literal>: Pointer acceleration depends on the input speed.\nThis is the default profile for most devices.\n","example":"flat","readOnly":false,"type":"one of \"flat\", \"adaptive\""},"services.xserver.libinput.accelSpeed":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":null,"description":"Cursor acceleration (how fast speed increases from minSpeed to maxSpeed).","readOnly":false,"type":"null or string"},"services.xserver.libinput.additionalOptions":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":"","description":"Additional options for libinput touchpad driver.","example":"Option \"DragLockButtons\" \"L1 B1 L2 B2\"\n","readOnly":false,"type":"string"},"services.xserver.libinput.buttonMapping":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":null,"description":"Sets the logical button mapping for this device, see XSetPointerMapping(3). The string  must\nbe  a  space-separated  list  of  button mappings in the order of the logical buttons on the\ndevice, starting with button 1.  The default mapping is \"1 2 3 ... 32\". A mapping of 0 deac‐\ntivates the button. Multiple buttons can have the same mapping.  Invalid mapping strings are\ndiscarded and the default mapping is used for all buttons.  Buttons  not  specified  in  the\nuser's mapping use the default mapping. See section BUTTON MAPPING for more details.\n","readOnly":false,"type":"null or string"},"services.xserver.libinput.calibrationMatrix":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":null,"description":"A  string  of  9 space-separated floating point numbers.  Sets the calibration matrix to the\n3x3 matrix where the first row is (abc), the second row is (def) and the third row is (ghi).\n","readOnly":false,"type":"null or string"},"services.xserver.libinput.clickMethod":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":null,"description":"Enables a click method. Permitted values are none, buttonareas, clickfinger.\nNot all devices support all methods, if an option is unsupported,\nthe default click method for this device is used. \n","example":"none","readOnly":false,"type":"null or one of \"none\", \"buttonareas\", \"clickfinger\""},"services.xserver.libinput.dev":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":null,"description":"Path for touchpad device.  Set to null to apply to any\nauto-detected touchpad.\n","example":"/dev/input/event0","readOnly":false,"type":"null or string"},"services.xserver.libinput.disableWhileTyping":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":true,"description":"Disable input method while typing.\n","example":false,"readOnly":false,"type":"boolean"},"services.xserver.libinput.enable":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":false,"description":"Whether to enable libinput.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.libinput.horizontalScrolling":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":true,"description":"Disables horizontal scrolling. When disabled, this driver will discard any horizontal scroll\nevents from libinput. Note that this does not disable horizontal scrolling, it merely\ndiscards the horizontal axis from any scroll events.\n","example":false,"readOnly":false,"type":"boolean"},"services.xserver.libinput.leftHanded":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":false,"description":"Enables left-handed button orientation, i.e. swapping left and right buttons.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.libinput.middleEmulation":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":true,"description":"Enables middle button emulation. When enabled, pressing the left and right buttons\nsimultaneously produces a middle mouse button click.\n","example":false,"readOnly":false,"type":"boolean"},"services.xserver.libinput.naturalScrolling":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":false,"description":"Enables or disables natural scrolling behavior.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.libinput.scrollButton":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":null,"description":"Designates a button as scroll button. If the ScrollMethod is button and the button is logically\nheld down, x/y axis movement is converted into scroll events.\n","example":1,"readOnly":false,"type":"null or integer"},"services.xserver.libinput.scrollMethod":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":"twofinger","description":"Specify the scrolling method.\n","example":"edge","readOnly":false,"type":"one of \"twofinger\", \"edge\", \"none\""},"services.xserver.libinput.sendEventsMode":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":"enabled","description":"Sets the send events mode to disabled, enabled, or \"disable when an external mouse is connected\".\n","example":"disabled","readOnly":false,"type":"one of \"disabled\", \"enabled\", \"disabled-on-external-mouse\""},"services.xserver.libinput.tapping":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":true,"description":"Enables or disables tap-to-click behavior.\n","example":false,"readOnly":false,"type":"boolean"},"services.xserver.libinput.tappingDragLock":{"declarations":["nixos/modules/services/x11/hardware/libinput.nix"],"default":true,"description":"Enables or disables drag lock during tapping behavior. When enabled, a finger up during tap-\nand-drag will not immediately release the button. If the finger is set down again within the\ntimeout, the draging process continues.\n","example":false,"readOnly":false,"type":"boolean"},"services.xserver.moduleSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the Module section of the X server configuration file.","example":"SubSection \"extmod\"\nEndSubsection\n","readOnly":false,"type":"string"},"services.xserver.modules":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":[],"description":"Packages to be added to the module search path of the X server.","example":{"_type":"literalExample","text":"[ pkgs.xf86_input_wacom ]"},"readOnly":false,"type":"list of paths"},"services.xserver.monitorSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first Monitor section of the X server configuration file.","example":"HorizSync 28-49","readOnly":false,"type":"string"},"services.xserver.multitouch.additionalOptions":{"declarations":["nixos/modules/services/x11/hardware/multitouch.nix"],"default":"","description":"Additional options for mtrack touchpad driver.\n","example":"Option \"ScaleDistance\" \"50\"\nOption \"RotateDistance\" \"60\"\n","readOnly":false,"type":"string"},"services.xserver.multitouch.buttonsMap":{"declarations":["nixos/modules/services/x11/hardware/multitouch.nix"],"default":[3,2,0],"description":"Remap touchpad buttons.","example":[1,3,2],"readOnly":false,"type":"list of integers"},"services.xserver.multitouch.enable":{"declarations":["nixos/modules/services/x11/hardware/multitouch.nix"],"default":false,"description":"Whether to enable multitouch touchpad support.","example":true,"readOnly":false,"type":"unspecified"},"services.xserver.multitouch.ignorePalm":{"declarations":["nixos/modules/services/x11/hardware/multitouch.nix"],"default":false,"description":"Whether to ignore touches detected as being the palm (i.e when typing)","example":true,"readOnly":false,"type":"boolean"},"services.xserver.multitouch.invertScroll":{"declarations":["nixos/modules/services/x11/hardware/multitouch.nix"],"default":false,"description":"Whether to invert scrolling direction à la OSX Lion","example":true,"readOnly":false,"type":"boolean"},"services.xserver.multitouch.tapButtons":{"declarations":["nixos/modules/services/x11/hardware/multitouch.nix"],"default":true,"description":"Whether to enable tap buttons.","example":false,"readOnly":false,"type":"boolean"},"services.xserver.resolutions":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":[],"description":"The screen resolutions for the X server.  The first element\nis the default resolution.  If this list is empty, the X\nserver will automatically configure the resolution.\n","example":[{"x":1600,"y":1200},{"x":1024,"y":786}],"readOnly":false,"type":"list of attribute sets"},"services.xserver.s3tcSupport":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>hardware.opengl.s3tcSupport</option>.","readOnly":false,"type":"unspecified"},"services.xserver.screenSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the first Screen section of the X server configuration file.","example":"Option \"RandRRotation\" \"on\"\n","readOnly":false,"type":"string"},"services.xserver.serverFlagsSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the ServerFlags section of the X server configuration file.","example":"Option \"BlankTime\" \"0\"\nOption \"StandbyTime\" \"0\"\nOption \"SuspendTime\" \"0\"\nOption \"OffTime\" \"0\"\n","readOnly":false,"type":"unspecified"},"services.xserver.serverLayoutSection":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"Contents of the ServerLayout section of the X server configuration file.","example":"Option \"AIGLX\" \"true\"\n","readOnly":false,"type":"string"},"services.xserver.startDbusSession":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":true,"description":"Whether to start a new DBus session when you log in with dbus-launch.\n","readOnly":false,"type":"boolean"},"services.xserver.startOpenSSHAgent":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>programs.ssh.startAgent</option>.","readOnly":false,"type":"unspecified"},"services.xserver.startSSHAgent":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.xserver.startOpenSSHAgent</option>.","readOnly":false,"type":"unspecified"},"services.xserver.synaptics.accelFactor":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"0.001","description":"Cursor acceleration (how fast speed increases from minSpeed to maxSpeed).","readOnly":false,"type":"null or string"},"services.xserver.synaptics.additionalOptions":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"","description":"Additional options for synaptics touchpad driver.\n","example":"Option \"RTCornerButton\" \"2\"\nOption \"RBCornerButton\" \"3\"\n","readOnly":false,"type":"string"},"services.xserver.synaptics.buttonsMap":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":[1,2,3],"description":"Remap touchpad buttons.","example":[1,3,2],"readOnly":false,"type":"list of integers"},"services.xserver.synaptics.dev":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":null,"description":"Path for touchpad device.  Set to null to apply to any\nauto-detected touchpad.\n","example":"/dev/input/event0","readOnly":false,"type":"null or string"},"services.xserver.synaptics.enable":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":false,"description":"Whether to enable touchpad support.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.synaptics.fingersMap":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":[1,2,3],"description":"Remap several-fingers taps.","example":[1,3,2],"readOnly":false,"type":"list of integers"},"services.xserver.synaptics.horizEdgeScroll":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":true,"description":"Whether to enable horizontal edge drag-scrolling.","readOnly":false,"type":"boolean"},"services.xserver.synaptics.horizTwoFingerScroll":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":false,"description":"Whether to enable horizontal two-finger drag-scrolling.","readOnly":false,"type":"boolean"},"services.xserver.synaptics.horizontalScroll":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":true,"description":"Whether to enable horizontal scrolling (on touchpad)","example":false,"readOnly":false,"type":"boolean"},"services.xserver.synaptics.maxSpeed":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"1.0","description":"Cursor speed factor for highest-speed finger motion.","readOnly":false,"type":"null or string"},"services.xserver.synaptics.minSpeed":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":"0.6","description":"Cursor speed factor for precision finger motion.","readOnly":false,"type":"null or string"},"services.xserver.synaptics.palmDetect":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":false,"description":"Whether to enable palm detection (hardware support required)","example":true,"readOnly":false,"type":"boolean"},"services.xserver.synaptics.palmMinWidth":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":null,"description":"Minimum finger width at which touch is considered a palm","example":5,"readOnly":false,"type":"null or integer"},"services.xserver.synaptics.palmMinZ":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":null,"description":"Minimum finger pressure at which touch is considered a palm","example":20,"readOnly":false,"type":"null or integer"},"services.xserver.synaptics.scrollDelta":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":null,"description":"Move distance of the finger for a scroll event.","example":75,"readOnly":false,"type":"null or integer"},"services.xserver.synaptics.tapButtons":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":true,"description":"Whether to enable tap buttons.","example":false,"readOnly":false,"type":"boolean"},"services.xserver.synaptics.twoFingerScroll":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":false,"description":"Whether to enable two-finger drag-scrolling. Overridden by horizTwoFingerScroll and vertTwoFingerScroll.","readOnly":false,"type":"boolean"},"services.xserver.synaptics.vertEdgeScroll":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":true,"description":"Whether to enable vertical edge drag-scrolling.","readOnly":false,"type":"boolean"},"services.xserver.synaptics.vertTwoFingerScroll":{"declarations":["nixos/modules/services/x11/hardware/synaptics.nix"],"default":false,"description":"Whether to enable vertical two-finger drag-scrolling.","readOnly":false,"type":"boolean"},"services.xserver.tty":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":7,"description":"Virtual console for the X server.","readOnly":false,"type":"null or integer"},"services.xserver.updateDbusEnvironment":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to update the DBus activation environment after launching the\ndesktop manager.\n","readOnly":false,"type":"boolean"},"services.xserver.useGlamor":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Whether to use the Glamor module for 2D acceleration,\nif possible.\n","readOnly":false,"type":"boolean"},"services.xserver.useXFS":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":false,"description":"Determines how to connect to the X Font Server.","example":"unix/:7100","readOnly":false,"type":"unspecified"},"services.xserver.vaapiDrivers":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>hardware.opengl.extraPackages</option>.","readOnly":false,"type":"unspecified"},"services.xserver.videoDriver":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"The name of the video driver for your graphics card.  This\noption is obsolete; please set the\n<option>services.xserver.videoDrivers</option> instead.\n","example":"i810","readOnly":false,"type":"null or string"},"services.xserver.videoDrivers":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":["ati","cirrus","intel","vesa","vmware","modesetting"],"description":"The names of the video drivers the configuration\nsupports. They will be tried in order until one that\nsupports your card is found.\n","example":["vesa"],"readOnly":false,"type":"list of strings"},"services.xserver.virtualScreen":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":null,"description":"Virtual screen size for Xrandr.\n","example":{"x":2048,"y":2048},"readOnly":false,"type":"null or attribute set"},"services.xserver.wacom.enable":{"declarations":["nixos/modules/services/x11/hardware/wacom.nix"],"default":false,"description":"Whether to enable the Wacom touchscreen/digitizer/tablet.\nIf you ever have any issues such as, try switching to terminal (ctrl-alt-F1) and back\nwhich will make Xorg reconfigure the device ?\n\nIf you're not satisfied by the default behaviour you can override\n<option>environment.etc.\"X11/xorg.conf.d/50-wacom.conf\"</option> in\nconfiguration.nix easily.\n","readOnly":false,"type":"unspecified"},"services.xserver.windowManager.afterstep.enable":{"declarations":["nixos/modules/services/x11/window-managers/afterstep.nix"],"default":false,"description":"Whether to enable afterstep.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.awesome.enable":{"declarations":["nixos/modules/services/x11/window-managers/awesome.nix"],"default":false,"description":"Whether to enable Awesome window manager.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.awesome.luaModules":{"declarations":["nixos/modules/services/x11/window-managers/awesome.nix"],"default":[],"description":"List of lua packages available for being used in the Awesome configuration.","example":{"_type":"literalExample","text":"[ luaPackages.oocairo ]"},"readOnly":false,"type":"list of packages"},"services.xserver.windowManager.awesome.package":{"declarations":["nixos/modules/services/x11/window-managers/awesome.nix"],"default":null,"description":"Package to use for running the Awesome WM.","readOnly":false,"type":"null or package"},"services.xserver.windowManager.bspwm.configFile":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":null,"description":"Path to the bspwm configuration file.\nIf null, $HOME/.config/bspwm/bspwmrc will be used.\n","example":"${pkgs.bspwm}/share/doc/bspwm/examples/bspwmrc","readOnly":false,"type":"null or path"},"services.xserver.windowManager.bspwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":false,"description":"Whether to enable bspwm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.bspwm.package":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":"pkgs.bspwm","description":"bspwm package to use.\n","example":"pkgs.bspwm-unstable","readOnly":false,"type":"package"},"services.xserver.windowManager.bspwm.sxhkd.configFile":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":null,"description":"Path to the sxhkd configuration file.\nIf null, $HOME/.config/sxhkd/sxhkdrc will be used.\n","example":"${pkgs.bspwm}/share/doc/bspwm/examples/sxhkdrc","readOnly":false,"type":"null or path"},"services.xserver.windowManager.bspwm.sxhkd.package":{"declarations":["nixos/modules/services/x11/window-managers/bspwm.nix"],"default":"pkgs.sxhkd","description":"sxhkd package to use.\n","example":"pkgs.sxhkd-unstable","readOnly":false,"type":"package"},"services.xserver.windowManager.compiz.enable":{"declarations":["nixos/modules/services/x11/window-managers/compiz.nix"],"default":false,"description":"Whether to enable compiz.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.compiz.renderingFlag":{"declarations":["nixos/modules/services/x11/window-managers/compiz.nix"],"default":"","description":"Pass the <option>--indirect-rendering</option> flag to Compiz.","example":"--indirect-rendering","readOnly":false,"type":"unspecified"},"services.xserver.windowManager.default":{"declarations":["nixos/modules/services/x11/window-managers/default.nix"],"default":"none","description":"Default window manager loaded if none have been chosen.","example":"wmii","readOnly":false,"type":"string"},"services.xserver.windowManager.dwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/dwm.nix"],"default":false,"description":"Whether to enable dwm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.exwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/exwm.nix"],"default":false,"description":"Whether to enable exwm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.exwm.enableDefaultConfig":{"declarations":["nixos/modules/services/x11/window-managers/exwm.nix"],"default":true,"description":"Enable an uncustomised exwm configuration.","example":false,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.exwm.extraPackages":{"declarations":["nixos/modules/services/x11/window-managers/exwm.nix"],"default":"<function>","description":"Extra packages available to Emacs. The value must be a\nfunction which receives the attrset defined in\n<varname>emacsPackages</varname> as the sole argument.\n","example":{"_type":"literalExample","text":"epkgs: [\n  epkgs.emms\n  epkgs.magit\n  epkgs.proofgeneral\n]\n"},"readOnly":false,"type":"unspecified"},"services.xserver.windowManager.fluxbox.enable":{"declarations":["nixos/modules/services/x11/window-managers/fluxbox.nix"],"default":false,"description":"Whether to enable fluxbox.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.herbstluftwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/herbstluftwm.nix"],"default":false,"description":"Whether to enable herbstluftwm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.i3.configFile":{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":null,"description":"Path to the i3 configuration file.\nIf left at the default value, $HOME/.i3/config will be used.\n","readOnly":false,"type":"null or path"},"services.xserver.windowManager.i3.enable":{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":false,"description":"Whether to enable i3 window manager.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.i3.extraSessionCommands":{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":"","description":"Shell commands executed just before i3 is started.\n","readOnly":false,"type":"string"},"services.xserver.windowManager.i3.package":{"declarations":["nixos/modules/services/x11/window-managers/i3.nix"],"default":"pkgs.i3","description":"i3 package to use.\n","example":"pkgs.i3-gaps","readOnly":false,"type":"package"},"services.xserver.windowManager.icewm.enable":{"declarations":["nixos/modules/services/x11/window-managers/icewm.nix"],"default":false,"description":"Whether to enable icewm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.jwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/jwm.nix"],"default":false,"description":"Whether to enable jwm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.metacity.enable":{"declarations":["nixos/modules/services/x11/window-managers/metacity.nix"],"default":false,"description":"Whether to enable metacity.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.mwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/mwm.nix"],"default":false,"description":"Whether to enable mwm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.notion.enable":{"declarations":["nixos/modules/services/x11/window-managers/notion.nix"],"default":false,"description":"Whether to enable notion.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.openbox.enable":{"declarations":["nixos/modules/services/x11/window-managers/openbox.nix"],"default":false,"description":"Whether to enable openbox.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.pekwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/pekwm.nix"],"default":false,"description":"Whether to enable pekwm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.qtile.enable":{"declarations":["nixos/modules/services/x11/window-managers/qtile.nix"],"default":false,"description":"Whether to enable qtile.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.ratpoison.enable":{"declarations":["nixos/modules/services/x11/window-managers/ratpoison.nix"],"default":false,"description":"Whether to enable ratpoison.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.sawfish.enable":{"declarations":["nixos/modules/services/x11/window-managers/sawfish.nix"],"default":false,"description":"Whether to enable sawfish.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.spectrwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/spectrwm.nix"],"default":false,"description":"Whether to enable spectrwm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.stumpwm.enable":{"declarations":["nixos/modules/services/x11/window-managers/stumpwm.nix"],"default":false,"description":"Whether to enable stumpwm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.twm.enable":{"declarations":["nixos/modules/services/x11/window-managers/twm.nix"],"default":false,"description":"Whether to enable twm.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.windowlab.enable":{"declarations":["nixos/modules/services/x11/window-managers/windowlab.nix"],"default":false,"description":"Whether to enable windowlab.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.windowmaker.enable":{"declarations":["nixos/modules/services/x11/window-managers/windowmaker.nix"],"default":false,"description":"Whether to enable windowmaker.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.wmii.enable":{"declarations":["nixos/modules/services/x11/window-managers/wmii.nix"],"default":false,"description":"Whether to enable wmii.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.xbmc":{"declarations":["nixos/modules/rename.nix"],"description":"Alias of <option>services.xserver.desktopManager.kodi</option>.","readOnly":false,"type":"unspecified"},"services.xserver.windowManager.xmonad.enable":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":false,"description":"Whether to enable xmonad.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.xmonad.enableContribAndExtras":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":false,"description":"Enable xmonad-{contrib,extras} in Xmonad.","example":true,"readOnly":false,"type":"boolean"},"services.xserver.windowManager.xmonad.extraPackages":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":"<function>","description":"Extra packages available to ghc when rebuilding Xmonad. The\nvalue must be a function which receives the attrset defined\nin <varname>haskellPackages</varname> as the sole argument.\n","example":{"_type":"literalExample","text":"haskellPackages: [\n  haskellPackages.xmonad-contrib\n  haskellPackages.monad-logger\n]\n"},"readOnly":false,"type":"unspecified"},"services.xserver.windowManager.xmonad.haskellPackages":{"declarations":["nixos/modules/services/x11/window-managers/xmonad.nix"],"default":"pkgs.haskellPackages","description":"haskellPackages used to build Xmonad and other packages.\nThis can be used to change the GHC version used to build\nXmonad and the packages listed in\n<varname>extraPackages</varname>.\n","example":{"_type":"literalExample","text":"pkgs.haskell.packages.ghc784"},"readOnly":false,"type":"unspecified"},"services.xserver.xkbDir":{"declarations":["nixos/modules/services/x11/xserver.nix"],"description":"Path used for -xkbdir xserver parameter.\n","readOnly":false,"type":"path"},"services.xserver.xkbModel":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"pc104","description":"Keyboard model.\n","example":"presario","readOnly":false,"type":"string"},"services.xserver.xkbOptions":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"terminate:ctrl_alt_bksp","description":"X keyboard options; layout switching goes here.\n","example":"grp:caps_toggle, grp_led:scroll","readOnly":false,"type":"string"},"services.xserver.xkbVariant":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":"","description":"X keyboard variant.\n","example":"colemak","readOnly":false,"type":"string"},"services.xserver.xrandrHeads":{"declarations":["nixos/modules/services/x11/xserver.nix"],"default":[],"description":"Simple multiple monitor configuration, just specify a list of XRandR\noutputs which will be mapped from left to right in the order of the\nlist.\n\nBe careful using this option with multiple graphic adapters or with\ndrivers that have poor support for XRandR, unexpected things might\nhappen with those.\n","example":["HDMI-0","DVI-0"],"readOnly":false,"type":"list of strings"},"services.xtreemfs.dir.address":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":"","description":"If specified, it defines the interface to listen on. If not\nspecified, the service will listen on all interfaces (any).\n","example":"127.0.0.1","readOnly":false,"type":"unspecified"},"services.xtreemfs.dir.enable":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":true,"description":"Whether to enable XtreemFS DIR service.\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.dir.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":"","description":"Configuration of XtreemFS DIR service.\nWARNING: configuration is saved as plaintext inside nix store.\nFor more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/index.html\n","example":"# specify whether SSL is required\nssl.enabled = true\nssl.service_creds.pw = passphrase\nssl.service_creds.container = pkcs12\nssl.service_creds = /etc/xos/xtreemfs/truststore/certs/dir.p12\nssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks\nssl.trusted_certs.pw = jks_passphrase\nssl.trusted_certs.container = jks\n","readOnly":false,"type":"string"},"services.xtreemfs.dir.httpPort":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":30638,"description":"Specifies the listen port for the HTTP service that returns the\nstatus page.\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.dir.port":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":32638,"description":"The port to listen on for incoming connections (TCP).\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.dir.replication.enable":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":false,"description":"Whether to enable XtreemFS DIR replication plugin.","example":true,"readOnly":false,"type":"boolean"},"services.xtreemfs.dir.replication.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"description":"Configuration of XtreemFS DIR replication plugin.\nWARNING: configuration is saved as plaintext inside nix store.\nFor more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/index.html\n","example":"# participants of the replication including this replica\nbabudb.repl.participant.0 = 192.168.0.10\nbabudb.repl.participant.0.port = 35676\nbabudb.repl.participant.1 = 192.168.0.11\nbabudb.repl.participant.1.port = 35676\nbabudb.repl.participant.2 = 192.168.0.12\nbabudb.repl.participant.2.port = 35676\n\n# number of servers that at least have to be up to date\n# To have a fault-tolerant system, this value has to be set to the\n# majority of nodes i.e., if you have three replicas, set this to 2\n# Please note that a setup with two nodes provides no fault-tolerance.\nbabudb.repl.sync.n = 2\n\n# specify whether SSL is required\nbabudb.ssl.enabled = true\n\nbabudb.ssl.protocol = tlsv12\n\n# server credentials for SSL handshakes\nbabudb.ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/osd.p12\nbabudb.ssl.service_creds.pw = passphrase\nbabudb.ssl.service_creds.container = pkcs12\n\n# trusted certificates for SSL handshakes\nbabudb.ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks\nbabudb.ssl.trusted_certs.pw = jks_passphrase\nbabudb.ssl.trusted_certs.container = jks\n\nbabudb.ssl.authenticationWithoutEncryption = false\n","readOnly":false,"type":"string"},"services.xtreemfs.dir.syncMode":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":"FSYNC","description":"The sync mode influences how operations are committed to the disk\nlog before the operation is acknowledged to the caller.\n\n-ASYNC mode the writes to the disk log are buffered in memory by the operating system. This is the fastest mode but will lead to data loss in case of a crash, kernel panic or power failure.\n-SYNC_WRITE_METADATA opens the file with O_SYNC, the system will not buffer any writes. The operation will be acknowledged when data has been safely written to disk. This mode is slow but offers maximum data safety. However, BabuDB cannot influence the disk drive caches, this depends on the OS and hard disk model.\n-SYNC_WRITE similar to SYNC_WRITE_METADATA but opens file with O_DSYNC which means that only the data is commit to disk. This can lead to some data loss depending on the implementation of the underlying file system. Linux does not implement this mode.\n-FDATASYNC is similar to SYNC_WRITE but opens the file in asynchronous mode and calls fdatasync() after writing the data to disk.\n-FSYNC is similar to SYNC_WRITE_METADATA but opens the file in asynchronous mode and calls fsync() after writing the data to disk.\n\nFor best throughput use ASYNC, for maximum data safety use FSYNC.\n\n(If xtreemfs.dir.replication.enable is true then FDATASYNC is forced)\n","example":"FDATASYNC","readOnly":false,"type":"unspecified"},"services.xtreemfs.dir.uuid":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"description":"Must be set to a unique identifier, preferably a UUID according to\nRFC 4122. UUIDs can be generated with `uuidgen` command, found in\nthe `utillinux` package.\n","example":"eacb6bab-f444-4ebf-a06a-3f72d7465e40","readOnly":false,"type":"unspecified"},"services.xtreemfs.enable":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":false,"description":"Whether to enable XtreemFS.","example":true,"readOnly":false,"type":"boolean"},"services.xtreemfs.homeDir":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":"/var/lib/xtreemfs","description":"XtreemFS home dir for the xtreemfs user.\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.mrc.address":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":"","description":"If specified, it defines the interface to listen on. If not\nspecified, the service will listen on all interfaces (any).\n","example":"127.0.0.1","readOnly":false,"type":"unspecified"},"services.xtreemfs.mrc.enable":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":true,"description":"Whether to enable XtreemFS MRC service.\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.mrc.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"description":"Configuration of XtreemFS MRC service.\nWARNING: configuration is saved as plaintext inside nix store.\nFor more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/index.html\n","example":"osd_check_interval = 300\nno_atime = true\nlocal_clock_renewal = 0\nremote_time_sync = 30000\nauthentication_provider = org.xtreemfs.common.auth.NullAuthProvider\n\n# shared secret between the MRC and all OSDs\ncapability_secret = iNG8UuQJrJ6XVDTe\n\ndir_service.host = 192.168.0.10\ndir_service.port = 32638\n\n# if replication is enabled\ndir_service.1.host = 192.168.0.11\ndir_service.1.port = 32638\ndir_service.2.host = 192.168.0.12\ndir_service.2.port = 32638\n\n# specify whether SSL is required\nssl.enabled = true\nssl.protocol = tlsv12\nssl.service_creds.pw = passphrase\nssl.service_creds.container = pkcs12\nssl.service_creds = /etc/xos/xtreemfs/truststore/certs/mrc.p12\nssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks\nssl.trusted_certs.pw = jks_passphrase\nssl.trusted_certs.container = jks\n","readOnly":false,"type":"string"},"services.xtreemfs.mrc.httpPort":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":30636,"description":"Specifies the listen port for the HTTP service that returns the\nstatus page.\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.mrc.port":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":32636,"description":"The port to listen on for incoming connections (TCP).\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.mrc.replication.enable":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":false,"description":"Whether to enable XtreemFS MRC replication plugin.","example":true,"readOnly":false,"type":"boolean"},"services.xtreemfs.mrc.replication.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"description":"Configuration of XtreemFS MRC replication plugin.\nWARNING: configuration is saved as plaintext inside nix store.\nFor more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/index.html\n","example":"# participants of the replication including this replica\nbabudb.repl.participant.0 = 192.168.0.10\nbabudb.repl.participant.0.port = 35678\nbabudb.repl.participant.1 = 192.168.0.11\nbabudb.repl.participant.1.port = 35678\nbabudb.repl.participant.2 = 192.168.0.12\nbabudb.repl.participant.2.port = 35678\n\n# number of servers that at least have to be up to date\n# To have a fault-tolerant system, this value has to be set to the\n# majority of nodes i.e., if you have three replicas, set this to 2\n# Please note that a setup with two nodes provides no fault-tolerance.\nbabudb.repl.sync.n = 2\n\n# specify whether SSL is required\nbabudb.ssl.enabled = true\n\nbabudb.ssl.protocol = tlsv12\n\n# server credentials for SSL handshakes\nbabudb.ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/osd.p12\nbabudb.ssl.service_creds.pw = passphrase\nbabudb.ssl.service_creds.container = pkcs12\n\n# trusted certificates for SSL handshakes\nbabudb.ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks\nbabudb.ssl.trusted_certs.pw = jks_passphrase\nbabudb.ssl.trusted_certs.container = jks\n\nbabudb.ssl.authenticationWithoutEncryption = false\n","readOnly":false,"type":"string"},"services.xtreemfs.mrc.syncMode":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":"FSYNC","description":"The sync mode influences how operations are committed to the disk\nlog before the operation is acknowledged to the caller.\n\n-ASYNC mode the writes to the disk log are buffered in memory by the operating system. This is the fastest mode but will lead to data loss in case of a crash, kernel panic or power failure.\n-SYNC_WRITE_METADATA opens the file with O_SYNC, the system will not buffer any writes. The operation will be acknowledged when data has been safely written to disk. This mode is slow but offers maximum data safety. However, BabuDB cannot influence the disk drive caches, this depends on the OS and hard disk model.\n-SYNC_WRITE similar to SYNC_WRITE_METADATA but opens file with O_DSYNC which means that only the data is commit to disk. This can lead to some data loss depending on the implementation of the underlying file system. Linux does not implement this mode.\n-FDATASYNC is similar to SYNC_WRITE but opens the file in asynchronous mode and calls fdatasync() after writing the data to disk.\n-FSYNC is similar to SYNC_WRITE_METADATA but opens the file in asynchronous mode and calls fsync() after writing the data to disk.\n\nFor best throughput use ASYNC, for maximum data safety use FSYNC.\n\n(If xtreemfs.mrc.replication.enable is true then FDATASYNC is forced)\n","example":"FDATASYNC","readOnly":false,"type":"unspecified"},"services.xtreemfs.mrc.uuid":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"description":"Must be set to a unique identifier, preferably a UUID according to\nRFC 4122. UUIDs can be generated with `uuidgen` command, found in\nthe `utillinux` package.\n","example":"eacb6bab-f444-4ebf-a06a-3f72d7465e41","readOnly":false,"type":"unspecified"},"services.xtreemfs.osd.address":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":"","description":"If specified, it defines the interface to listen on. If not\nspecified, the service will listen on all interfaces (any).\n","example":"127.0.0.1","readOnly":false,"type":"unspecified"},"services.xtreemfs.osd.enable":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":true,"description":"Whether to enable XtreemFS OSD service.\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.osd.extraConfig":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"description":"Configuration of XtreemFS OSD service.\nWARNING: configuration is saved as plaintext inside nix store.\nFor more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/index.html\n","example":"local_clock_renewal = 0\nremote_time_sync = 30000\nreport_free_space = true\ncapability_secret = iNG8UuQJrJ6XVDTe\n\ndir_service.host = 192.168.0.10\ndir_service.port = 32638\n\n# if replication is used\ndir_service.1.host = 192.168.0.11\ndir_service.1.port = 32638\ndir_service.2.host = 192.168.0.12\ndir_service.2.port = 32638\n\n# specify whether SSL is required\nssl.enabled = true\nssl.service_creds.pw = passphrase\nssl.service_creds.container = pkcs12\nssl.service_creds = /etc/xos/xtreemfs/truststore/certs/osd.p12\nssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks\nssl.trusted_certs.pw = jks_passphrase\nssl.trusted_certs.container = jks\n","readOnly":false,"type":"string"},"services.xtreemfs.osd.httpPort":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":30640,"description":"Specifies the listen port for the HTTP service that returns the\nstatus page.\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.osd.port":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"default":32640,"description":"The port to listen on for incoming connections (TCP and UDP).\n","readOnly":false,"type":"unspecified"},"services.xtreemfs.osd.uuid":{"declarations":["nixos/modules/services/network-filesystems/xtreemfs.nix"],"description":"Must be set to a unique identifier, preferably a UUID according to\nRFC 4122. UUIDs can be generated with `uuidgen` command, found in\nthe `utillinux` package.\n","example":"eacb6bab-f444-4ebf-a06a-3f72d7465e42","readOnly":false,"type":"unspecified"},"services.yandex-disk.directory":{"declarations":["nixos/modules/services/network-filesystems/yandex-disk.nix"],"default":"/home/Yandex.Disk","description":"The directory to use for Yandex.Disk storage","readOnly":false,"type":"unspecified"},"services.yandex-disk.enable":{"declarations":["nixos/modules/services/network-filesystems/yandex-disk.nix"],"default":false,"description":"\n          Whether to enable Yandex-disk client. See https://disk.yandex.ru/\n        ","readOnly":false,"type":"unspecified"},"services.yandex-disk.excludes":{"declarations":["nixos/modules/services/network-filesystems/yandex-disk.nix"],"default":"","description":"Comma-separated list of directories which are excluded from synchronization.\n","example":"data,backup","readOnly":false,"type":"string"},"services.yandex-disk.password":{"declarations":["nixos/modules/services/network-filesystems/yandex-disk.nix"],"default":"","description":"Your yandex.com password. Warning: it will be world-readable in /nix/store.\n","readOnly":false,"type":"string"},"services.yandex-disk.user":{"declarations":["nixos/modules/services/network-filesystems/yandex-disk.nix"],"default":null,"description":"The user the yandex-disk daemon should run as.\n","readOnly":false,"type":"unspecified"},"services.yandex-disk.username":{"declarations":["nixos/modules/services/network-filesystems/yandex-disk.nix"],"default":"","description":"Your yandex.com login name.\n","readOnly":false,"type":"string"},"services.ympd.enable":{"declarations":["nixos/modules/services/audio/ympd.nix"],"default":false,"description":"Whether to enable ympd, the MPD Web GUI.","example":true,"readOnly":false,"type":"boolean"},"services.ympd.mpd.host":{"declarations":["nixos/modules/services/audio/ympd.nix"],"default":"localhost","description":"The host where MPD is listening.","example":"localhost","readOnly":false,"type":"string"},"services.ympd.mpd.port":{"declarations":["nixos/modules/services/audio/ympd.nix"],"default":6600,"description":"The port where MPD is listening.","example":6600,"readOnly":false,"type":"integer"},"services.ympd.webPort":{"declarations":["nixos/modules/services/audio/ympd.nix"],"default":"8080","description":"The port where ympd's web interface will be available.","example":"ssl://8080:/path/to/ssl-private-key.pem","readOnly":false,"type":"string"},"services.zabbixAgent.enable":{"declarations":["nixos/modules/services/monitoring/zabbix-agent.nix"],"default":false,"description":"Whether to run the Zabbix monitoring agent on this machine.\nIt will send monitoring data to a Zabbix server.\n","readOnly":false,"type":"unspecified"},"services.zabbixAgent.extraConfig":{"declarations":["nixos/modules/services/monitoring/zabbix-agent.nix"],"default":"","description":"Configuration that is injected verbatim into the configuration file.\n","readOnly":false,"type":"string"},"services.zabbixAgent.server":{"declarations":["nixos/modules/services/monitoring/zabbix-agent.nix"],"default":"127.0.0.1","description":"The IP address or hostname of the Zabbix server to connect to.\n","readOnly":false,"type":"unspecified"},"services.zabbixServer.dbPassword":{"declarations":["nixos/modules/services/monitoring/zabbix-server.nix"],"default":"","description":"Password used to connect to the database server.","readOnly":false,"type":"string"},"services.zabbixServer.dbServer":{"declarations":["nixos/modules/services/monitoring/zabbix-server.nix"],"default":"localhost","description":"Hostname or IP address of the database server.\nUse an empty string (\"\") to use peer authentication.\n","readOnly":false,"type":"string"},"services.zabbixServer.enable":{"declarations":["nixos/modules/services/monitoring/zabbix-server.nix"],"default":false,"description":"Whether to run the Zabbix server on this machine.\n","readOnly":false,"type":"boolean"},"services.zabbixServer.extraConfig":{"declarations":["nixos/modules/services/monitoring/zabbix-server.nix"],"default":"","description":"Configuration that is injected verbatim into the configuration file.\n","readOnly":false,"type":"string"},"services.zerobin.dataDir":{"declarations":["nixos/modules/services/networking/zerobin.nix"],"default":"/var/lib/zerobin","description":"Path to the 0bin data directory\n","readOnly":false,"type":"string"},"services.zerobin.enable":{"declarations":["nixos/modules/services/networking/zerobin.nix"],"default":false,"description":"Whether to enable 0bin.","example":true,"readOnly":false,"type":"boolean"},"services.zerobin.extraConfig":{"declarations":["nixos/modules/services/networking/zerobin.nix"],"default":"","description":"Extra configuration to be appended to the 0bin config file\n(see https://0bin.readthedocs.org/en/latest/en/options.html)\n","example":"MENU = (\n('Home', '/'),\n)\nCOMPRESSED_STATIC_FILE = True\n","readOnly":false,"type":"string"},"services.zerobin.group":{"declarations":["nixos/modules/services/networking/zerobin.nix"],"default":"zerobin","description":"The group 0bin should run as\n","readOnly":false,"type":"string"},"services.zerobin.listenAddress":{"declarations":["nixos/modules/services/networking/zerobin.nix"],"default":"localhost","description":"The address zerobin should listen to\n","example":"127.0.0.1","readOnly":false,"type":"string"},"services.zerobin.listenPort":{"declarations":["nixos/modules/services/networking/zerobin.nix"],"default":8000,"description":"The port zerobin should listen on\n","example":1357,"readOnly":false,"type":"integer"},"services.zerobin.user":{"declarations":["nixos/modules/services/networking/zerobin.nix"],"default":"zerobin","description":"The user 0bin should run as\n","readOnly":false,"type":"string"},"services.zerotierone.enable":{"declarations":["nixos/modules/services/networking/zerotierone.nix"],"default":false,"description":"Whether to enable ZeroTierOne.","example":true,"readOnly":false,"type":"boolean"},"services.zerotierone.package":{"declarations":["nixos/modules/services/networking/zerotierone.nix"],"default":"pkgs.zerotierone","description":"ZeroTier One package to use.\n","readOnly":false,"type":"package"},"services.zfs.autoSnapshot.daily":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":7,"description":"Number of daily auto-snapshots that you wish to keep.\n","readOnly":false,"type":"integer"},"services.zfs.autoSnapshot.enable":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":false,"description":"Enable the (OpenSolaris-compatible) ZFS auto-snapshotting service.\nNote that you must set the <literal>com.sun:auto-snapshot</literal>\nproperty to <literal>true</literal> on all datasets which you wish\nto auto-snapshot.\n\nYou can override a child dataset to use, or not use auto-snapshotting\nby setting its flag with the given interval:\n<literal>zfs set com.sun:auto-snapshot:weekly=false DATASET</literal>\n","readOnly":false,"type":"boolean"},"services.zfs.autoSnapshot.flags":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":"-k -p","description":"Flags to pass to the zfs-auto-snapshot command.\n\nRun <literal>zfs-auto-snapshot</literal> (without any arguments) to\nsee available flags.\n\nIf it's not too inconvenient for snapshots to have timestamps in UTC,\nit is suggested that you append <literal>--utc</literal> to the list\nof default options (see example).\n\nOtherwise, snapshot names can cause name conflicts or apparent time\nreversals due to daylight savings, timezone or other date/time changes.\n","example":"-k -p --utc","readOnly":false,"type":"string"},"services.zfs.autoSnapshot.frequent":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":4,"description":"Number of frequent (15-minute) auto-snapshots that you wish to keep.\n","readOnly":false,"type":"integer"},"services.zfs.autoSnapshot.hourly":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":24,"description":"Number of hourly auto-snapshots that you wish to keep.\n","readOnly":false,"type":"integer"},"services.zfs.autoSnapshot.monthly":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":12,"description":"Number of monthly auto-snapshots that you wish to keep.\n","readOnly":false,"type":"integer"},"services.zfs.autoSnapshot.weekly":{"declarations":["nixos/modules/tasks/filesystems/zfs.nix"],"default":4,"description":"Number of weekly auto-snapshots that you wish to keep.\n","readOnly":false,"type":"integer"},"services.znapzend.enable":{"declarations":["nixos/modules/services/backup/znapzend.nix"],"default":false,"description":"Whether to enable ZnapZend daemon.","example":true,"readOnly":false,"type":"boolean"},"services.znc.confOptions.extraZncConf":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":"","description":"Extra config to `znc.conf` file.\n","readOnly":false,"type":"string"},"services.znc.confOptions.modules":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":["webadmin","adminlog"],"description":"A list of modules to include in the `znc.conf` file.\n","example":["partyline","webadmin","adminlog","log"],"readOnly":false,"type":"list of strings"},"services.znc.confOptions.networks":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":{},"description":"IRC networks to connect the user to.\n","example":{"freenode":{"modules":["simple_away"],"port":6697,"server":"chat.freenode.net","ssl":true}},"readOnly":false,"type":"list or attribute set of submodules"},"services.znc.confOptions.networks.<name?>.channels":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":[],"description":"IRC channels to join.\n","example":["nixos"],"readOnly":false,"type":"list of strings"},"services.znc.confOptions.networks.<name?>.modulePackages":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":[],"description":"External ZNC modules to build.\n","example":["pkgs.zncModules.push","pkgs.zncModules.fish"],"readOnly":false,"type":"list of packages"},"services.znc.confOptions.networks.<name?>.modules":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":["simple_away"],"description":"ZNC modules to load.\n","example":{"_type":"literalExample","text":"[ simple_away sasl ]"},"readOnly":false,"type":"list of strings"},"services.znc.confOptions.networks.<name?>.port":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":6697,"description":"IRC server port.\n","example":6697,"readOnly":false,"type":"integer"},"services.znc.confOptions.networks.<name?>.server":{"declarations":["nixos/modules/services/networking/znc.nix"],"description":"IRC server address.\n","example":"chat.freenode.net","readOnly":false,"type":"string"},"services.znc.confOptions.networks.<name?>.useSSL":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":true,"description":"Whether to use SSL to connect to the IRC server.\n","readOnly":false,"type":"boolean"},"services.znc.confOptions.nick":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":"znc-user","description":"The IRC nick.\n","example":"john","readOnly":false,"type":"string"},"services.znc.confOptions.passBlock":{"declarations":["nixos/modules/services/networking/znc.nix"],"description":"Generate with znc --makepass.\nThis is the password used to log in to the ZNC web admin interface.\n","example":"\n        <Pass password>\n                Method = sha256\n                Hash = e2ce303c7ea75c571d80d8540a8699b46535be6a085be3414947d638e48d9e93\n                Salt = l5Xryew4g*!oa(ECfX2o\n        </Pass>\n  ","readOnly":false,"type":"string"},"services.znc.confOptions.port":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":5000,"description":"Specifies the port on which to listen.\n","example":5000,"readOnly":false,"type":"integer"},"services.znc.confOptions.useSSL":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":true,"description":"Indicates whether the ZNC server should use SSL when listening on the specified port. A self-signed certificate will be generated.\n","example":true,"readOnly":false,"type":"boolean"},"services.znc.confOptions.userModules":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":["chansaver","controlpanel"],"description":"A list of user modules to include in the `znc.conf` file.\n","example":["chansaver","controlpanel","fish","push"],"readOnly":false,"type":"list of strings"},"services.znc.confOptions.userName":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":"znc","description":"The user name used to log in to the ZNC web admin interface.\n","example":"johntron","readOnly":false,"type":"string"},"services.znc.dataDir":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":"/var/lib/znc/","description":"The data directory. Used for configuration files and modules.\n","example":"/home/john/.znc/","readOnly":false,"type":"path"},"services.znc.enable":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":false,"description":"Enable a ZNC service for a user.\n","example":true,"readOnly":false,"type":"boolean"},"services.znc.extraFlags":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":[],"description":"Extra flags to use when executing znc command.\n","example":["--debug"],"readOnly":false,"type":"list of strings"},"services.znc.group":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":"","description":"Group to own the ZNCserver process.\n","example":"users","readOnly":false,"type":"string"},"services.znc.modulePackages":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":[],"description":"A list of global znc module packages to add to znc.\n","example":{"_type":"literalExample","text":"[ pkgs.zncModules.fish pkgs.zncModules.push ]"},"readOnly":false,"type":"list of packages"},"services.znc.mutable":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":false,"description":"Indicates whether to allow the contents of the `dataDir` directory to be changed\nby the user at run-time.\nIf true, modifications to the ZNC configuration after its initial creation are not \n  overwritten by a NixOS system rebuild.\nIf false, the ZNC configuration is rebuilt by every system rebuild.\nIf the user wants to manage the ZNC service using the web admin interface, this value\n  should be set to true.\n","example":true,"readOnly":false,"type":"boolean"},"services.znc.user":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":"znc","description":"The name of an existing user account to use to own the ZNC server process.\nIf not specified, a default user will be created to own the process.\n","example":"john","readOnly":false,"type":"string"},"services.znc.zncConf":{"declarations":["nixos/modules/services/networking/znc.nix"],"default":"","description":"Config file as generated with `znc --makeconf` to use for the whole ZNC configuration.\nIf specified, `confOptions` will be ignored, and this value, as-is, will be used.\nIf left empty, a conf file with default values will be used.\n","example":"See: http://wiki.znc.in/Configuration","readOnly":false,"type":"string"},"services.zookeeper.dataDir":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":"/var/lib/zookeeper","description":"Data directory for Zookeeper\n","readOnly":false,"type":"path"},"services.zookeeper.enable":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":false,"description":"Whether to enable Zookeeper.","readOnly":false,"type":"boolean"},"services.zookeeper.extraCmdLineOptions":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":["-Dcom.sun.management.jmxremote","-Dcom.sun.management.jmxremote.local.only=true"],"description":"Extra command line options for the Zookeeper launcher.","example":["-Djava.net.preferIPv4Stack=true","-Dcom.sun.management.jmxremote","-Dcom.sun.management.jmxremote.local.only=true"],"readOnly":false,"type":"list of strings"},"services.zookeeper.extraConf":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":"initLimit=5\nsyncLimit=2\ntickTime=2000\n","description":"Extra configuration for Zookeeper.","readOnly":false,"type":"string"},"services.zookeeper.id":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":0,"description":"Zookeeper ID.","readOnly":false,"type":"integer"},"services.zookeeper.logging":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":"zookeeper.root.logger=INFO, CONSOLE\nlog4j.rootLogger=INFO, CONSOLE\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=[myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n\n","description":"Zookeeper logging configuration.","readOnly":false,"type":"string"},"services.zookeeper.port":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":2181,"description":"Zookeeper Client port.","readOnly":false,"type":"integer"},"services.zookeeper.preferIPv4":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":true,"description":"Add the -Djava.net.preferIPv4Stack=true flag to the Zookeeper server.\n","readOnly":false,"type":"boolean"},"services.zookeeper.purgeInterval":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":1,"description":"The time interval in hours for which the purge task has to be triggered. Set to a positive integer (1 and above) to enable the auto purging.\n","readOnly":false,"type":"integer"},"services.zookeeper.servers":{"declarations":["nixos/modules/services/misc/zookeeper.nix"],"default":"","description":"All Zookeeper Servers.","example":"server.0=host0:2888:3888\nserver.1=host1:2888:3888\nserver.2=host2:2888:3888\n","readOnly":false,"type":"string"},"services.zope2.instances":{"declarations":["nixos/modules/services/web-servers/zope2.nix"],"default":{},"description":"zope2 instances to be created automaticaly by the system.","example":{"_type":"literalExample","text":"{\n  plone01 = {\n    http_address = \"127.0.0.1:8080\";\n    extra =\n      ''\n      <zodb_db main>\n        mount-point /\n        cache-size 30000\n        <blobstorage>\n            blob-dir /var/lib/zope2/plone01/blobstorage\n            <filestorage>\n            path /var/lib/zope2/plone01/filestorage/Data.fs\n            </filestorage>\n        </blobstorage>\n      </zodb_db>\n      '';\n  };\n}\n"},"readOnly":false,"type":"list or attribute set of submodules"},"services.zope2.instances.<name?>.clientHome":{"declarations":["nixos/modules/services/web-servers/zope2.nix"],"default":"/var/lib/zope2/","description":"Home directory of zope2 instance.","readOnly":false,"type":"string"},"services.zope2.instances.<name?>.extra":{"declarations":["nixos/modules/services/web-servers/zope2.nix"],"default":"<zodb_db main>\n  mount-point /\n  cache-size 30000\n  <blobstorage>\n      blob-dir /var/lib/zope2//blobstorage\n      <filestorage>\n      path /var/lib/zope2//filestorage/Data.fs\n      </filestorage>\n  </blobstorage>\n</zodb_db>\n","description":"Extra zope.conf","readOnly":false,"type":"string"},"services.zope2.instances.<name?>.http_address":{"declarations":["nixos/modules/services/web-servers/zope2.nix"],"default":"localhost:8080","description":"Give a port and address for the HTTP server.","readOnly":false,"type":"string"},"services.zope2.instances.<name?>.name":{"declarations":["nixos/modules/services/web-servers/zope2.nix"],"default":"","description":"The name of the zope2 instance. If undefined, the name of the attribute set will be used.","readOnly":false,"type":"string"},"services.zope2.instances.<name?>.packages":{"declarations":["nixos/modules/services/web-servers/zope2.nix"],"description":"The list of packages you want to make available to the zope2 instance.","readOnly":false,"type":"list of packages"},"services.zope2.instances.<name?>.threads":{"declarations":["nixos/modules/services/web-servers/zope2.nix"],"default":2,"description":"Specify the number of threads that Zope's ZServer web server will use to service requests. ","readOnly":false,"type":"integer"},"services.zope2.instances.<name?>.user":{"declarations":["nixos/modules/services/web-servers/zope2.nix"],"default":"zope2","description":"The name of the effective user for the Zope process.","readOnly":false,"type":"string"},"sound.enable":{"declarations":["nixos/modules/services/audio/alsa.nix"],"default":true,"description":"Whether to enable ALSA sound.\n","readOnly":false,"type":"boolean"},"sound.enableMediaKeys":{"declarations":["nixos/modules/services/audio/alsa.nix"],"default":false,"description":"Whether to enable volume and capture control with keyboard media keys.\n\nEnabling this will turn on <option>services.actkbd</option>.\n","readOnly":false,"type":"boolean"},"sound.enableOSSEmulation":{"declarations":["nixos/modules/services/audio/alsa.nix"],"default":true,"description":"Whether to enable ALSA OSS emulation (with certain cards sound mixing may not work!).\n","readOnly":false,"type":"boolean"},"sound.extraConfig":{"declarations":["nixos/modules/services/audio/alsa.nix"],"default":"","description":"Set addition configuration for system-wide alsa.\n","example":"defaults.pcm.!card 3\n","readOnly":false,"type":"string"},"swapDevices":{"declarations":["nixos/modules/tasks/encrypted-devices.nix","nixos/modules/config/swap.nix"],"default":[],"description":"The swap devices and swap files.  These must have been\ninitialised using <command>mkswap</command>.  Each element\nshould be an attribute set specifying either the path of the\nswap device or file (<literal>device</literal>) or the label\nof the swap device (<literal>label</literal>, see\n<command>mkswap -L</command>).  Using a label is\nrecommended.\n","example":[{"device":"/dev/hda7"},{"device":"/var/swapfile"},{"label":"bigswap"}],"readOnly":false,"type":"list of submodules"},"swapDevices.*.device":{"declarations":["nixos/modules/config/swap.nix"],"description":"Path of the device.","example":"/dev/sda3","readOnly":false,"type":"string"},"swapDevices.*.encrypted.blkDev":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":null,"description":"Location of the backing encrypted device.","example":"/dev/sda1","readOnly":false,"type":"null or string"},"swapDevices.*.encrypted.enable":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":false,"description":"The block device is backed by an encrypted one, adds this device as a initrd luks entry.","readOnly":false,"type":"boolean"},"swapDevices.*.encrypted.keyFile":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":null,"description":"File system location of keyfile. This unlocks the drive after the root has been mounted to <literal>/mnt-root</literal>.","example":"/root/.swapkey","readOnly":false,"type":"null or string"},"swapDevices.*.encrypted.label":{"declarations":["nixos/modules/tasks/encrypted-devices.nix"],"default":null,"description":"Label of the unlocked encrypted device. Set <literal>fileSystems.&lt;name?&gt;.device</literal> to <literal>/dev/mapper/&lt;label&gt;</literal> to mount the unlocked device.","example":"rootfs","readOnly":false,"type":"null or string"},"swapDevices.*.label":{"declarations":["nixos/modules/config/swap.nix"],"description":"Label of the device.  Can be used instead of <varname>device</varname>.\n","example":"swap","readOnly":false,"type":"string"},"swapDevices.*.priority":{"declarations":["nixos/modules/config/swap.nix"],"default":null,"description":"Specify the priority of the swap device. Priority is a value between 0 and 32767.\nHigher numbers indicate higher priority.\nnull lets the kernel choose a priority, which will show up as a negative value.\n","example":2048,"readOnly":false,"type":"null or integer"},"swapDevices.*.randomEncryption":{"declarations":["nixos/modules/config/swap.nix"],"default":false,"description":"Encrypt swap device with a random key. This way you won't have a persistent swap device.\n\nWARNING: Don't try to hibernate when you have at least one swap partition with\nthis option enabled! We have no way to set the partition into which hibernation image\nis saved, so if your image ends up on an encrypted one you would lose it!\n\nWARNING #2: Do not use /dev/disk/by-uuid/… or /dev/disk/by-label/… as your swap device\nwhen using randomEncryption as the UUIDs and labels will get erased on every boot when\nthe partition is encrypted. Best to use /dev/disk/by-partuuid/…\n","readOnly":false,"type":"boolean"},"swapDevices.*.size":{"declarations":["nixos/modules/config/swap.nix"],"default":null,"description":"If this option is set, ‘device’ is interpreted as the\npath of a swapfile that will be created automatically\nwith the indicated size (in megabytes).\n","example":2048,"readOnly":false,"type":"null or integer"},"system.activationScripts":{"declarations":["nixos/modules/system/activation/activation-script.nix"],"default":{},"description":"A set of shell script fragments that are executed when a NixOS\nsystem configuration is activated.  Examples are updating\n/etc, creating accounts, and so on.  Since these are executed\nevery time you boot the system or run\n<command>nixos-rebuild</command>, it's important that they are\nidempotent and fast.\n","example":{"_type":"literalExample","text":"{ stdio = {\n    text = ''\n      # Needed by some programs.\n      ln -sfn /proc/self/fd /dev/fd\n      ln -sfn /proc/self/fd/0 /dev/stdin\n      ln -sfn /proc/self/fd/1 /dev/stdout\n      ln -sfn /proc/self/fd/2 /dev/stderr\n    '';\n    deps = [];\n  };\n}\n"},"readOnly":false,"type":"attribute set of unspecifieds"},"system.autoUpgrade.channel":{"declarations":["nixos/modules/installer/tools/auto-upgrade.nix"],"default":null,"description":"The URI of the NixOS channel to use for automatic\nupgrades. By default, this is the channel set using\n<command>nix-channel</command> (run <literal>nix-channel\n--list</literal> to see the current value).\n","example":"https://nixos.org/channels/nixos-14.12-small","readOnly":false,"type":"null or string"},"system.autoUpgrade.dates":{"declarations":["nixos/modules/installer/tools/auto-upgrade.nix"],"default":"04:40","description":"Specification (in the format described by\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>) of the time at\nwhich the update will occur.\n","readOnly":false,"type":"string"},"system.autoUpgrade.enable":{"declarations":["nixos/modules/installer/tools/auto-upgrade.nix"],"default":false,"description":"Whether to periodically upgrade NixOS to the latest\nversion. If enabled, a systemd timer will run\n<literal>nixos-rebuild switch --upgrade</literal> once a\nday.\n","readOnly":false,"type":"boolean"},"system.autoUpgrade.flags":{"declarations":["nixos/modules/installer/tools/auto-upgrade.nix"],"default":[],"description":"Any additional flags passed to <command>nixos-rebuild</command>.\n","example":["-I","stuff=/home/alice/nixos-stuff","--option","extra-binary-caches","http://my-cache.example.org/"],"readOnly":false,"type":"list of strings"},"system.copySystemConfiguration":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":false,"description":"If enabled, copies the NixOS configuration file\n(usually <filename>/etc/nixos/configuration.nix</filename>)\nand links it from the resulting system\n(getting to <filename>/run/current-system/configuration.nix</filename>).\nNote that only this single file is copied, even if it imports others.\n","readOnly":false,"type":"boolean"},"system.extraDependencies":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":[],"description":"A list of packages that should be included in the system\nclosure but not otherwise made available to users. This is\nprimarily used by the installation tests.\n","readOnly":false,"type":"list of packages"},"system.nixosCodeName":{"declarations":["nixos/modules/misc/version.nix"],"description":"The NixOS release code name (e.g. <literal>Emu</literal>).","readOnly":true,"type":"string"},"system.nixosLabel":{"declarations":["nixos/modules/misc/version.nix"],"description":"Label to be used in the names of generated outputs and boot\nlabels.\n","readOnly":false,"type":"string"},"system.nixosRelease":{"declarations":["nixos/modules/misc/version.nix"],"default":"17.03","description":"The NixOS release (e.g. <literal>16.03</literal>).","readOnly":true,"type":"string"},"system.replaceRuntimeDependencies":{"declarations":["nixos/modules/system/activation/top-level.nix"],"default":[],"description":"List of packages to override without doing a full rebuild.\nThe original derivation and replacement derivation must have the same\nname length, and ideally should have close-to-identical directory layout.\n","example":{"_type":"literalExample","text":"[ ({ original = pkgs.openssl; replacement = pkgs.callPackage /path/to/openssl { }; }) ]"},"readOnly":false,"type":"list of submodules"},"system.replaceRuntimeDependencies.*.original":{"declarations":["nixos/modules/system/activation/top-level.nix"],"description":"The original package to override.","readOnly":false,"type":"package"},"system.replaceRuntimeDependencies.*.replacement":{"declarations":["nixos/modules/system/activation/top-level.nix"],"description":"The replacement package.","readOnly":false,"type":"package"},"system.stateVersion":{"declarations":["nixos/modules/misc/version.nix"],"default":"17.03","description":"Every once in a while, a new NixOS release may change\nconfiguration defaults in a way incompatible with stateful\ndata. For instance, if the default version of PostgreSQL\nchanges, the new version will probably be unable to read your\nexisting databases. To prevent such breakage, you can set the\nvalue of this option to the NixOS release with which you want\nto be compatible. The effect is that NixOS will option\ndefaults corresponding to the specified release (such as using\nan older version of PostgreSQL).\n","readOnly":false,"type":"string"},"systemd.additionalUpstreamSystemUnits":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Additional units shipped with systemd that shall be enabled.\n","example":["debug-shell.service","systemd-quotacheck.service"],"readOnly":false,"type":"list of strings"},"systemd.automounts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Definition of systemd automount units.\nThis is a list instead of an attrSet, because systemd mandates the names to be derived from\nthe 'where' attribute.\n","readOnly":false,"type":"list of submodules"},"systemd.automounts.*.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.automounts.*.automountConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Automount]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.automount</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"DirectoryMode":"0775"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.automounts.*.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.automounts.*.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.automounts.*.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.automounts.*.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.automounts.*.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.automounts.*.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.automounts.*.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.automounts.*.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.automounts.*.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.automounts.*.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.automounts.*.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.automounts.*.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.automounts.*.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.automounts.*.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.automounts.*.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.automounts.*.where":{"declarations":["nixos/modules/system/boot/systemd.nix"],"description":"Absolute path of a directory of the mount point.\nWill be created if it doesn't exist. (Mandatory)\n","example":"/mnt","readOnly":false,"type":"string"},"systemd.coredump.enable":{"declarations":["nixos/modules/system/boot/coredump.nix"],"default":false,"description":"Enables storing core dumps in systemd.\nNote that this alone is not enough to enable core dumps. The maximum\nfile size for core dumps must be specified in limits.conf as well. See\n<option>security.pam.loginLimits</option> as well as the limits.conf(5)\nman page.\n","readOnly":false,"type":"boolean"},"systemd.coredump.extraConfig":{"declarations":["nixos/modules/system/boot/coredump.nix"],"default":"","description":"Extra config options for systemd-coredump. See coredump.conf(5) man page\nfor available options.\n","example":"Storage=journal","readOnly":false,"type":"string"},"systemd.ctrlAltDelUnit":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"reboot.target","description":"Target that should be started when Ctrl-Alt-Delete is pressed.\n","example":"poweroff.target","readOnly":false,"type":"string"},"systemd.defaultUnit":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"multi-user.target","description":"Default unit started when the system boots.","readOnly":false,"type":"string"},"systemd.enableEmergencyMode":{"declarations":["nixos/modules/system/boot/emergency-mode.nix"],"default":true,"description":"Whether to enable emergency mode, which is an\n<command>sulogin</command> shell started on the console if\nmounting a filesystem fails.  Since some machines (like EC2\ninstances) have no console of any kind, emergency mode doesn't\nmake sense, and it's better to continue with the boot insofar\nas possible.\n","readOnly":false,"type":"boolean"},"systemd.extraConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Extra config options for systemd. See man systemd-system.conf for\navailable options.\n","example":"DefaultLimitCORE=infinity","readOnly":false,"type":"string"},"systemd.generator-packages":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Packages providing systemd generators.","example":{"_type":"literalExample","text":"[ pkgs.systemd-cryptsetup-generator ]"},"readOnly":false,"type":"list of packages"},"systemd.generators":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd generators.\nFor each <literal>NAME = VALUE</literal> pair of the attrSet, a link is generated from\n<literal>/etc/systemd/system-generators/NAME</literal> to <literal>VALUE</literal>.\n","example":{"systemd-gpt-auto-generator":"/dev/null"},"readOnly":false,"type":"attribute set of paths"},"systemd.globalEnvironment":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Environment variables passed to <emphasis>all</emphasis> systemd units.\n","example":{"TZ":"CET"},"readOnly":false,"type":"attribute set"},"systemd.mounts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Definition of systemd mount units.\nThis is a list instead of an attrSet, because systemd mandates the names to be derived from\nthe 'where' attribute.\n","readOnly":false,"type":"list of submodules"},"systemd.mounts.*.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.mounts.*.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.mounts.*.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.mounts.*.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.mounts.*.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.mounts.*.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.mounts.*.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.mounts.*.mountConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Mount]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.mount</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"DirectoryMode":"0775"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.mounts.*.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.mounts.*.options":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Options used to mount the file system.","example":"noatime","readOnly":false,"type":"string"},"systemd.mounts.*.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.mounts.*.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.mounts.*.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.mounts.*.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.mounts.*.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.mounts.*.type":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"File system type.","example":"ext4","readOnly":false,"type":"string"},"systemd.mounts.*.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.mounts.*.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.mounts.*.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.mounts.*.what":{"declarations":["nixos/modules/system/boot/systemd.nix"],"description":"Absolute path of device node, file or other resource. (Mandatory)","example":"/dev/sda1","readOnly":false,"type":"string"},"systemd.mounts.*.where":{"declarations":["nixos/modules/system/boot/systemd.nix"],"description":"Absolute path of a directory of the mount point.\nWill be created if it doesn't exist. (Mandatory)\n","example":"/mnt","readOnly":false,"type":"string"},"systemd.network.enable":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":false,"description":"Whether to enable networkd or not.\n","readOnly":false,"type":"boolean"},"systemd.network.links":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Definition of systemd network links.","readOnly":false,"type":"attribute set of submodules"},"systemd.network.links.<name>.enable":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":true,"description":"Whether to manage network configuration using <command>systemd-network</command>.\n","readOnly":false,"type":"boolean"},"systemd.network.links.<name>.linkConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Link]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.link</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"MACAddress":"00:ff:ee:aa:cc:dd"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.links.<name>.matchConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Match]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.link</refentrytitle><manvolnum>5</manvolnum></citerefentry>\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle><manvolnum>5</manvolnum></citerefentry>\n<citerefentry><refentrytitle>systemd.network</refentrytitle><manvolnum>5</manvolnum></citerefentry>\nfor details.\n","example":{"Name":"eth0"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Definition of systemd network devices.","readOnly":false,"type":"attribute set of submodules"},"systemd.network.netdevs.<name>.bondConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Bond]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Mode":"802.3ad"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs.<name>.enable":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":true,"description":"Whether to manage network configuration using <command>systemd-network</command>.\n","readOnly":false,"type":"boolean"},"systemd.network.netdevs.<name>.macvlanConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[MACVLAN]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Mode":"private"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs.<name>.matchConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Match]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.link</refentrytitle><manvolnum>5</manvolnum></citerefentry>\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle><manvolnum>5</manvolnum></citerefentry>\n<citerefentry><refentrytitle>systemd.network</refentrytitle><manvolnum>5</manvolnum></citerefentry>\nfor details.\n","example":{"Name":"eth0"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs.<name>.netdevConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Netdev]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Kind":"bridge","Name":"mybridge"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs.<name>.peerConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Peer]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Name":"veth2"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs.<name>.tapConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Tap]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"User":"openvpn"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs.<name>.tunConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Tun]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"User":"openvpn"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs.<name>.tunnelConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Tunnel]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Remote":"192.168.1.1"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs.<name>.vlanConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[VLAN]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Id":"4"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.netdevs.<name>.vxlanConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[VXLAN]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Id":"4"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.networks":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Definition of systemd networks.","readOnly":false,"type":"attribute set of submodules"},"systemd.network.networks.<name>.DHCP":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":null,"description":"Whether to enable DHCP on the interfaces matched.\n","readOnly":false,"type":"null or string"},"systemd.network.networks.<name>.address":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of addresses to be added to the network section of the\nunit.  See <citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of strings"},"systemd.network.networks.<name>.addresses":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of address sections to be added to the unit.  See\n<citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of submodules"},"systemd.network.networks.<name>.addresses.*.addressConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Address]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Address":"192.168.0.100/24"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.networks.<name>.dhcpConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[DHCP]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"UseDNS":true,"UseRoutes":true},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.networks.<name>.dhcpServerConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[DHCPServer]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"EmitDNS":false,"PoolOffset":50},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.networks.<name>.dns":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of dns servers to be added to the network section of the\nunit.  See <citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of strings"},"systemd.network.networks.<name>.domains":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":null,"description":"A list of domains to pass to the network config.\n","readOnly":false,"type":"null or list of strings"},"systemd.network.networks.<name>.enable":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":true,"description":"Whether to manage network configuration using <command>systemd-network</command>.\n","readOnly":false,"type":"boolean"},"systemd.network.networks.<name>.gateway":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of gateways to be added to the network section of the\nunit.  See <citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of strings"},"systemd.network.networks.<name>.macvlan":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of macvlan interfaces to be added to the network section of the\nunit.  See <citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of strings"},"systemd.network.networks.<name>.matchConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Match]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.link</refentrytitle><manvolnum>5</manvolnum></citerefentry>\n<citerefentry><refentrytitle>systemd.netdev</refentrytitle><manvolnum>5</manvolnum></citerefentry>\n<citerefentry><refentrytitle>systemd.network</refentrytitle><manvolnum>5</manvolnum></citerefentry>\nfor details.\n","example":{"Name":"eth0"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.networks.<name>.name":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":null,"description":"The name of the network interface to match against.\n","readOnly":false,"type":"null or string"},"systemd.network.networks.<name>.networkConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Network]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Description":"My Network"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.networks.<name>.ntp":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of ntp servers to be added to the network section of the\nunit.  See <citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of strings"},"systemd.network.networks.<name>.routes":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of route sections to be added to the unit.  See\n<citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of submodules"},"systemd.network.networks.<name>.routes.*.routeConfig":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Route]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Gateway":"192.168.0.1"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.network.networks.<name>.tunnel":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of tunnel interfaces to be added to the network section of the\nunit.  See <citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of strings"},"systemd.network.networks.<name>.vlan":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of vlan interfaces to be added to the network section of the\nunit.  See <citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of strings"},"systemd.network.networks.<name>.vxlan":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"A list of vxlan interfaces to be added to the network section of the\nunit.  See <citerefentry><refentrytitle>systemd.network</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","readOnly":false,"type":"list of strings"},"systemd.network.units":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":{},"description":"Definition of networkd units.","readOnly":false,"type":"attribute set of submodules"},"systemd.network.units.<name>.enable":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.network.units.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.network.units.<name>.text":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":null,"description":"Text of this systemd unit.","readOnly":false,"type":"null or string"},"systemd.network.units.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/networkd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.nspawn":{"declarations":["nixos/modules/system/boot/systemd-nspawn.nix"],"default":{},"description":"Definition of systemd-nspawn configurations.","readOnly":false,"type":"attribute set of submodules"},"systemd.nspawn.<name>.execConfig":{"declarations":["nixos/modules/system/boot/systemd-nspawn.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Exec]</literal> section of this unit. See\n<citerefentry><refentrytitle>systemd.nspawn</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Parameters":"/bin/sh"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.nspawn.<name>.filesConfig":{"declarations":["nixos/modules/system/boot/systemd-nspawn.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Files]</literal> section of this unit. See\n<citerefentry><refentrytitle>systemd.nspawn</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Bind":["/home/alice"]},"readOnly":false,"type":"attribute set of systemd options"},"systemd.nspawn.<name>.networkConfig":{"declarations":["nixos/modules/system/boot/systemd-nspawn.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Network]</literal> section of this unit. See\n<citerefentry><refentrytitle>systemd.nspawn</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"Private":false},"readOnly":false,"type":"attribute set of systemd options"},"systemd.package":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"pkgs.systemd","description":"The systemd package.","readOnly":false,"type":"package"},"systemd.packages":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Packages providing systemd units.","readOnly":false,"type":"list of packages"},"systemd.paths":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd path units.","readOnly":false,"type":"attribute set of submodules"},"systemd.paths.<name>.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.paths.<name>.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.paths.<name>.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.pathConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Path]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.path</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"PathChanged":"/some/path","Unit":"changedpath.service"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.paths.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.paths.<name>.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.paths.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.paths.<name>.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.services":{"declarations":["nixos/modules/testing/service-runner.nix","nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd service units.","readOnly":false,"type":"attribute set of submodules"},"systemd.services.<name>.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.services.<name>.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.services.<name>.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.services.<name>.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.services.<name>.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.services.<name>.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.services.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.services.<name>.environment":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Environment variables passed to the service's processes.","example":{"LANG":"nl_NL.UTF-8","PATH":"/foo/bar/bin"},"readOnly":false,"type":"attribute set"},"systemd.services.<name>.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.services.<name>.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.services.<name>.path":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Packages added to the service's <envar>PATH</envar>\nenvironment variable.  Both the <filename>bin</filename>\nand <filename>sbin</filename> subdirectories of each\npackage are added.\n","readOnly":false,"type":"unspecified"},"systemd.services.<name>.postStart":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed after the service's main process\nis started.\n","readOnly":false,"type":"string"},"systemd.services.<name>.postStop":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed after the service's main process\nhas exited.\n","readOnly":false,"type":"string"},"systemd.services.<name>.preStart":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed before the service's main process\nis started.\n","readOnly":false,"type":"string"},"systemd.services.<name>.preStop":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed to stop the service.\n","readOnly":false,"type":"string"},"systemd.services.<name>.reload":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed when the service's main process\nis reloaded.\n","readOnly":false,"type":"string"},"systemd.services.<name>.reloadIfChanged":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":false,"description":"Whether the service should be reloaded during a NixOS\nconfiguration switch if its definition has changed.  If\nenabled, the value of <option>restartIfChanged</option> is\nignored.\n","readOnly":false,"type":"boolean"},"systemd.services.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.services.<name>.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.services.<name>.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.services.<name>.restartIfChanged":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"Whether the service should be restarted during a NixOS\nconfiguration switch if its definition has changed.\n","readOnly":false,"type":"boolean"},"systemd.services.<name>.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.services.<name>.script":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed as the service's main process.","readOnly":false,"type":"string"},"systemd.services.<name>.scriptArgs":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Arguments passed to the main process script.","readOnly":false,"type":"string"},"systemd.services.<name>.serviceConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Service]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.service</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RestartSec":5,"StartLimitInterval":10},"readOnly":false,"type":"attribute set of systemd options"},"systemd.services.<name>.startAt":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Automatically start this unit at the given date/time, which\nmust be in the format described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.  This is equivalent\nto adding a corresponding timer unit with\n<option>OnCalendar</option> set to the value given here.\n","example":"Sun 14:00:00","readOnly":false,"type":"string or list of strings"},"systemd.services.<name>.stopIfChanged":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set, a changed unit is restarted by calling\n<command>systemctl stop</command> in the old configuration,\nthen <command>systemctl start</command> in the new one.\nOtherwise, it is restarted in a single step using\n<command>systemctl restart</command> in the new configuration.\nThe latter is less correct because it runs the\n<literal>ExecStop</literal> commands from the new\nconfiguration.\n","readOnly":false,"type":"boolean"},"systemd.services.<name>.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.services.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.services.<name>.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.sockets":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd socket units.","readOnly":false,"type":"attribute set of submodules"},"systemd.sockets.<name>.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.sockets.<name>.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.sockets.<name>.listenStreams":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"For each item in this list, a <literal>ListenStream</literal>\noption in the <literal>[Socket]</literal> section will be created.\n","example":["0.0.0.0:993","/run/my-socket"],"readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.sockets.<name>.socketConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Socket]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.socket</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"ListenStream":"/run/my-socket"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.sockets.<name>.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.sockets.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.sockets.<name>.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.targets":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd target units.","readOnly":false,"type":"attribute set of submodules"},"systemd.targets.<name>.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.targets.<name>.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.targets.<name>.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.targets.<name>.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.targets.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.targets.<name>.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.timers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd timer units.","readOnly":false,"type":"attribute set of submodules"},"systemd.timers.<name>.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.timers.<name>.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.timers.<name>.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.timers.<name>.timerConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Timer]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.timer</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> and\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"OnCalendar":"Sun 14:00:00","Unit":"foo.service"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.timers.<name>.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.timers.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.timers.<name>.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.tmpfiles.rules":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Rules for creating and cleaning up temporary files\nautomatically. See\n<citerefentry><refentrytitle>tmpfiles.d</refentrytitle><manvolnum>5</manvolnum></citerefentry>\nfor the exact format. You should not use this option to create\nfiles required by systemd services, since there is no\nguarantee that <command>systemd-tmpfiles</command> runs when\nthe system is reconfigured using\n<command>nixos-rebuild</command>.\n","example":["d /tmp 1777 root root 10d"],"readOnly":false,"type":"list of strings"},"systemd.units":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd units.","readOnly":false,"type":"attribute set of submodules"},"systemd.units.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.units.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.units.<name>.text":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":null,"description":"Text of this systemd unit.","readOnly":false,"type":"null or string"},"systemd.units.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.extraConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Extra config options for systemd user instances. See man systemd-user.conf for\navailable options.\n","example":"DefaultCPUAccounting=yes","readOnly":false,"type":"string"},"systemd.user.services":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd per-user service units.","readOnly":false,"type":"attribute set of submodules"},"systemd.user.services.<name>.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.user.services.<name>.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.user.services.<name>.environment":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Environment variables passed to the service's processes.","example":{"LANG":"nl_NL.UTF-8","PATH":"/foo/bar/bin"},"readOnly":false,"type":"attribute set"},"systemd.user.services.<name>.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.path":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Packages added to the service's <envar>PATH</envar>\nenvironment variable.  Both the <filename>bin</filename>\nand <filename>sbin</filename> subdirectories of each\npackage are added.\n","readOnly":false,"type":"unspecified"},"systemd.user.services.<name>.postStart":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed after the service's main process\nis started.\n","readOnly":false,"type":"string"},"systemd.user.services.<name>.postStop":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed after the service's main process\nhas exited.\n","readOnly":false,"type":"string"},"systemd.user.services.<name>.preStart":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed before the service's main process\nis started.\n","readOnly":false,"type":"string"},"systemd.user.services.<name>.preStop":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed to stop the service.\n","readOnly":false,"type":"string"},"systemd.user.services.<name>.reload":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed when the service's main process\nis reloaded.\n","readOnly":false,"type":"string"},"systemd.user.services.<name>.reloadIfChanged":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":false,"description":"Whether the service should be reloaded during a NixOS\nconfiguration switch if its definition has changed.  If\nenabled, the value of <option>restartIfChanged</option> is\nignored.\n","readOnly":false,"type":"boolean"},"systemd.user.services.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.restartIfChanged":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"Whether the service should be restarted during a NixOS\nconfiguration switch if its definition has changed.\n","readOnly":false,"type":"boolean"},"systemd.user.services.<name>.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.user.services.<name>.script":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Shell commands executed as the service's main process.","readOnly":false,"type":"string"},"systemd.user.services.<name>.scriptArgs":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Arguments passed to the main process script.","readOnly":false,"type":"string"},"systemd.user.services.<name>.serviceConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Service]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.service</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RestartSec":5,"StartLimitInterval":10},"readOnly":false,"type":"attribute set of systemd options"},"systemd.user.services.<name>.startAt":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Automatically start this unit at the given date/time, which\nmust be in the format described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.  This is equivalent\nto adding a corresponding timer unit with\n<option>OnCalendar</option> set to the value given here.\n","example":"Sun 14:00:00","readOnly":false,"type":"string or list of strings"},"systemd.user.services.<name>.stopIfChanged":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set, a changed unit is restarted by calling\n<command>systemctl stop</command> in the old configuration,\nthen <command>systemctl start</command> in the new one.\nOtherwise, it is restarted in a single step using\n<command>systemctl restart</command> in the new configuration.\nThe latter is less correct because it runs the\n<literal>ExecStop</literal> commands from the new\nconfiguration.\n","readOnly":false,"type":"boolean"},"systemd.user.services.<name>.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.user.services.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.services.<name>.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.user.sockets":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd per-user socket units.","readOnly":false,"type":"attribute set of submodules"},"systemd.user.sockets.<name>.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.user.sockets.<name>.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.user.sockets.<name>.listenStreams":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"For each item in this list, a <literal>ListenStream</literal>\noption in the <literal>[Socket]</literal> section will be created.\n","example":["0.0.0.0:993","/run/my-socket"],"readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.user.sockets.<name>.socketConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Socket]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.socket</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"ListenStream":"/run/my-socket"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.user.sockets.<name>.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.user.sockets.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.sockets.<name>.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.user.targets":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd per-user target units.","readOnly":false,"type":"attribute set of submodules"},"systemd.user.targets.<name>.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.user.targets.<name>.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.user.targets.<name>.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.user.targets.<name>.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.user.targets.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.targets.<name>.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.user.timers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd per-user timer units.","readOnly":false,"type":"attribute set of submodules"},"systemd.user.timers.<name>.after":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay this unit until they have started.\n","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.before":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started at the same time as\nthis unit, delay them until this unit has started.\n","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.bindsTo":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Like ‘requires’, but in addition, if the specified units\nunexpectedly disappear, this unit will be stopped as well.\n","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.conflicts":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are started, then this unit is stopped\nand vice versa.\n","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.description":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":"","description":"Description of this unit used in systemd messages and progress indicators.","readOnly":false,"type":"string"},"systemd.user.timers.<name>.documentation":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of URIs referencing documentation for this unit or its configuration.","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.user.timers.<name>.onFailure":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"A list of one or more units that are activated when\nthis unit enters the \"failed\" state.\n","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.partOf":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"If the specified units are stopped or restarted, then this\nunit is stopped or restarted as well.\n","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.requires":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started, and stop\nthis unit when the specified units are stopped or fail.\n","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.requisite":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Similar to requires. However if the units listed are not started,\nthey will not be started and the transaction will fail.\n","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.restartTriggers":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"An arbitrary list of items such as derivations.  If any item\nin the list changes between reconfigurations, the service will\nbe restarted.\n","readOnly":false,"type":"list of unspecifieds"},"systemd.user.timers.<name>.timerConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Timer]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.timer</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> and\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"OnCalendar":"Sun 14:00:00","Unit":"foo.service"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.user.timers.<name>.unitConfig":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Each attribute in this set specifies an option in the\n<literal>[Unit]</literal> section of the unit.  See\n<citerefentry><refentrytitle>systemd.unit</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry> for details.\n","example":{"RequiresMountsFor":"/data"},"readOnly":false,"type":"attribute set of systemd options"},"systemd.user.timers.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.timers.<name>.wants":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Start the specified units when this unit is started.\n","readOnly":false,"type":"list of strings"},"systemd.user.units":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":{},"description":"Definition of systemd per-user units.","readOnly":false,"type":"attribute set of submodules"},"systemd.user.units.<name>.enable":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":true,"description":"If set to false, this unit will be a symlink to\n/dev/null. This is primarily useful to prevent specific\ntemplate instances (e.g. <literal>serial-getty@ttyS0</literal>)\nfrom being started.\n","readOnly":false,"type":"boolean"},"systemd.user.units.<name>.requiredBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that require (i.e. depend on and need to go down with) this unit.","readOnly":false,"type":"list of strings"},"systemd.user.units.<name>.text":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":null,"description":"Text of this systemd unit.","readOnly":false,"type":"null or string"},"systemd.user.units.<name>.wantedBy":{"declarations":["nixos/modules/system/boot/systemd.nix"],"default":[],"description":"Units that want (i.e. depend on) this unit.","readOnly":false,"type":"list of strings"},"time.hardwareClockInLocalTime":{"declarations":["nixos/modules/config/timezone.nix"],"default":false,"description":"If set, keep the hardware clock in local time instead of UTC.","readOnly":false,"type":"boolean"},"time.timeZone":{"declarations":["nixos/modules/config/timezone.nix"],"default":"UTC","description":"The time zone used when displaying times and dates. See <link\nxlink:href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\"/>\nfor a comprehensive list of possible values for this setting.\n","example":"America/New_York","readOnly":false,"type":"string"},"users.defaultUserShell":{"declarations":["nixos/modules/programs/shadow.nix"],"description":"This option defines the default shell assigned to user\naccounts. This can be either a full system path or a shell package.\n\nThis must not be a store path, since the path is\nused outside the store (in particular in /etc/passwd).\n","example":{"_type":"literalExample","text":"pkgs.zsh"},"readOnly":false,"type":"path or package"},"users.enforceIdUniqueness":{"declarations":["nixos/modules/config/users-groups.nix"],"default":true,"description":"Whether to require that no two users/groups share the same uid/gid.\n","readOnly":false,"type":"boolean"},"users.extraGroups":{"declarations":["nixos/modules/config/users-groups.nix"],"description":"Alias of <option>users.groups</option>.","readOnly":false,"type":"unspecified"},"users.extraUsers":{"declarations":["nixos/modules/config/users-groups.nix"],"description":"Alias of <option>users.users</option>.","readOnly":false,"type":"unspecified"},"users.groups":{"declarations":["nixos/modules/config/users-groups.nix"],"default":{},"description":"Additional groups to be created automatically by the system.\n","example":{"hackers":{},"students":{"gid":1001}},"readOnly":false,"type":"list or attribute set of submodules"},"users.groups.<name?>.gid":{"declarations":["nixos/modules/config/users-groups.nix"],"default":null,"description":"The group GID. If the GID is null, a free GID is picked on\nactivation.\n","readOnly":false,"type":"null or integer"},"users.groups.<name?>.members":{"declarations":["nixos/modules/config/users-groups.nix"],"default":[],"description":"The user names of the group members, added to the\n<literal>/etc/group</literal> file.\n","readOnly":false,"type":"list of strings"},"users.groups.<name?>.name":{"declarations":["nixos/modules/config/users-groups.nix"],"description":"The name of the group. If undefined, the name of the attribute set\nwill be used.\n","readOnly":false,"type":"string"},"users.ldap.base":{"declarations":["nixos/modules/config/ldap.nix"],"description":"The distinguished name of the search base.","example":"dc=example,dc=org","readOnly":false,"type":"unspecified"},"users.ldap.bind.distinguishedName":{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"The distinguished name to bind to the LDAP server with. If this\nis not specified, an anonymous bind will be done.\n","example":"cn=admin,dc=example,dc=com","readOnly":false,"type":"string"},"users.ldap.bind.password":{"declarations":["nixos/modules/config/ldap.nix"],"default":"/etc/ldap/bind.password","description":"The path to a file containing the credentials to use when binding\nto the LDAP server (if not binding anonymously).\n","readOnly":false,"type":"string"},"users.ldap.bind.policy":{"declarations":["nixos/modules/config/ldap.nix"],"default":"hard_open","description":"Specifies the policy to use for reconnecting to an unavailable\nLDAP server. The default is <literal>hard_open</literal>, which\nreconnects if opening the connection to the directory server\nfailed. By contrast, <literal>hard_init</literal> reconnects if\ninitializing the connection failed. Initializing may not\nactually contact the directory server, and it is possible that\na malformed configuration file will trigger reconnection. If\n<literal>soft</literal> is specified, then\n<literal>nss_ldap</literal> will return immediately on server\nfailure. All hard reconnect policies block with exponential\nbackoff before retrying.\n","readOnly":false,"type":"one of \"hard_open\", \"hard_init\", \"soft\""},"users.ldap.bind.timeLimit":{"declarations":["nixos/modules/config/ldap.nix"],"default":30,"description":"Specifies the time limit (in seconds) to use when connecting\nto the directory server. This is distinct from the time limit\nspecified in <literal>users.ldap.timeLimit</literal> and affects\nthe initial server connection only.\n","readOnly":false,"type":"integer"},"users.ldap.daemon.enable":{"declarations":["nixos/modules/config/ldap.nix"],"default":false,"description":"Whether to let the nslcd daemon (nss-pam-ldapd) handle the\nLDAP lookups for NSS and PAM. This can improve performance,\nand if you need to bind to the LDAP server with a password,\nit increases security, since only the nslcd user needs to\nhave access to the bindpw file, not everyone that uses NSS\nand/or PAM. If this option is enabled, a local nscd user is\ncreated automatically, and the nslcd service is started\nautomatically when the network get up.\n","readOnly":false,"type":"unspecified"},"users.ldap.daemon.extraConfig":{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"Extra configuration options that will be added verbatim at\nthe end of the nslcd configuration file (nslcd.conf).\n","readOnly":false,"type":"string"},"users.ldap.enable":{"declarations":["nixos/modules/config/ldap.nix"],"default":false,"description":"Whether to enable authentication against an LDAP server.","readOnly":false,"type":"boolean"},"users.ldap.extraConfig":{"declarations":["nixos/modules/config/ldap.nix"],"default":"","description":"Extra configuration options that will be added verbatim at\nthe end of the ldap configuration file (ldap.conf).\nIf <literal>users.ldap.daemon</literal> is enabled, this\nconfiguration will not be used. In that case, use\n<literal>users.ldap.daemon.extraConfig</literal> instead.\n","readOnly":false,"type":"string"},"users.ldap.loginPam":{"declarations":["nixos/modules/config/ldap.nix"],"default":true,"description":"Whether to include authentication against LDAP in login PAM","readOnly":false,"type":"boolean"},"users.ldap.nsswitch":{"declarations":["nixos/modules/config/ldap.nix"],"default":true,"description":"Whether to include lookup against LDAP in NSS","readOnly":false,"type":"boolean"},"users.ldap.server":{"declarations":["nixos/modules/config/ldap.nix"],"description":"The URL of the LDAP server.","example":"ldap://ldap.example.org/","readOnly":false,"type":"unspecified"},"users.ldap.timeLimit":{"declarations":["nixos/modules/config/ldap.nix"],"default":0,"description":"Specifies the time limit (in seconds) to use when performing\nsearches. A value of zero (0), which is the default, is to\nwait indefinitely for searches to be completed.\n","readOnly":false,"type":"integer"},"users.ldap.useTLS":{"declarations":["nixos/modules/config/ldap.nix"],"default":false,"description":"If enabled, use TLS (encryption) over an LDAP (port 389)\nconnection.  The alternative is to specify an LDAPS server (port\n636) in <option>users.ldap.server</option> or to forego\nsecurity.\n","readOnly":false,"type":"unspecified"},"users.motd":{"declarations":["nixos/modules/security/pam.nix"],"default":null,"description":"Message of the day shown to users when they log in.","example":"Today is Sweetmorn, the 4th day of The Aftermath in the YOLD 3178.","readOnly":false,"type":"null or string"},"users.mutableUsers":{"declarations":["nixos/modules/config/users-groups.nix"],"default":true,"description":"If set to <literal>true</literal>, you are free to add new users and groups to the system\nwith the ordinary <literal>useradd</literal> and\n<literal>groupadd</literal> commands. On system activation, the\nexisting contents of the <literal>/etc/passwd</literal> and\n<literal>/etc/group</literal> files will be merged with the\ncontents generated from the <literal>users.users</literal> and\n<literal>users.groups</literal> options.\nThe initial password for a user will be set\naccording to <literal>users.users</literal>, but existing passwords\nwill not be changed.\n\n<warning><para>\nIf set to <literal>false</literal>, the contents of the user and\ngroup files will simply be replaced on system activation. This also\nholds for the user passwords; all changed\npasswords will be reset according to the\n<literal>users.users</literal> configuration on activation.\n</para></warning>\n","readOnly":false,"type":"boolean"},"users.users":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix","nixos/modules/config/users-groups.nix"],"default":{},"description":"Additional user accounts to be created automatically by the system.\nThis can also be used to set options for root.\n","example":{"alice":{"createHome":true,"description":"Alice Q. User","extraGroups":["wheel"],"group":"users","home":"/home/alice","shell":"/bin/sh","uid":1234}},"readOnly":false,"type":"list or attribute set of submodules"},"users.users.<name?>.createHome":{"declarations":["nixos/modules/config/users-groups.nix"],"default":false,"description":"If true, the home directory will be created automatically. If this\noption is true and the home directory already exists but is not\nowned by the user, directory owner and group will be changed to\nmatch the user.\n","readOnly":false,"type":"boolean"},"users.users.<name?>.cryptHomeLuks":{"declarations":["nixos/modules/config/users-groups.nix"],"default":null,"description":"Path to encrypted luks device that contains\nthe user's home directory.\n","readOnly":false,"type":"null or string"},"users.users.<name?>.description":{"declarations":["nixos/modules/config/users-groups.nix"],"default":"","description":"A short description of the user account, typically the\nuser's full name.  This is actually the “GECOS” or “comment”\nfield in <filename>/etc/passwd</filename>.\n","example":"Alice Q. User","readOnly":false,"type":"string"},"users.users.<name?>.extraGroups":{"declarations":["nixos/modules/config/users-groups.nix"],"default":[],"description":"The user's auxiliary groups.","readOnly":false,"type":"list of strings"},"users.users.<name?>.group":{"declarations":["nixos/modules/config/users-groups.nix"],"default":"nogroup","description":"The user's primary group.","readOnly":false,"type":"string"},"users.users.<name?>.hashedPassword":{"declarations":["nixos/modules/config/users-groups.nix"],"default":null,"description":"Specifies the hashed password for the user.\nThe options <option>hashedPassword</option>,\n<option>password</option> and <option>passwordFile</option>\ncontrols what password is set for the user.\n<option>hashedPassword</option> overrides both\n<option>password</option> and <option>passwordFile</option>.\n<option>password</option> overrides <option>passwordFile</option>.\nIf none of these three options are set, no password is assigned to\nthe user, and the user will not be able to do password logins.\nIf the option <option>users.mutableUsers</option> is true, the\npassword defined in one of the three options will only be set when\nthe user is created for the first time. After that, you are free to\nchange the password with the ordinary user management commands. If\n<option>users.mutableUsers</option> is false, you cannot change\nuser passwords, they will always be set according to the password\noptions.\n\nTo generate hashed password install <literal>mkpasswd</literal>\npackage and run <literal>mkpasswd -m sha-512</literal>.\n\n","readOnly":false,"type":"null or string"},"users.users.<name?>.home":{"declarations":["nixos/modules/config/users-groups.nix"],"default":"/var/empty","description":"The user's home directory.","readOnly":false,"type":"path"},"users.users.<name?>.initialHashedPassword":{"declarations":["nixos/modules/config/users-groups.nix"],"default":null,"description":"Specifies the initial hashed password for the user, i.e. the\nhashed password assigned if the user does not already\nexist. If <option>users.mutableUsers</option> is true, the\npassword can be changed subsequently using the\n<command>passwd</command> command. Otherwise, it's\nequivalent to setting the <option>hashedPassword</option> option.\n\nTo generate hashed password install <literal>mkpasswd</literal>\npackage and run <literal>mkpasswd -m sha-512</literal>.\n\n","readOnly":false,"type":"null or string"},"users.users.<name?>.initialPassword":{"declarations":["nixos/modules/config/users-groups.nix"],"default":null,"description":"Specifies the initial password for the user, i.e. the\npassword assigned if the user does not already exist. If\n<option>users.mutableUsers</option> is true, the password\ncan be changed subsequently using the\n<command>passwd</command> command. Otherwise, it's\nequivalent to setting the <option>password</option>\noption. The same caveat applies: the password specified here\nis world-readable in the Nix store, so it should only be\nused for guest accounts or passwords that will be changed\npromptly.\n","readOnly":false,"type":"null or string"},"users.users.<name?>.isNormalUser":{"declarations":["nixos/modules/config/users-groups.nix"],"default":false,"description":"Indicates whether this is an account for a “real” user. This\nautomatically sets <option>group</option> to\n<literal>users</literal>, <option>createHome</option> to\n<literal>true</literal>, <option>home</option> to\n<filename>/home/<replaceable>username</replaceable></filename>,\n<option>useDefaultShell</option> to <literal>true</literal>,\nand <option>isSystemUser</option> to\n<literal>false</literal>.\n","readOnly":false,"type":"boolean"},"users.users.<name?>.isSystemUser":{"declarations":["nixos/modules/config/users-groups.nix"],"default":false,"description":"Indicates if the user is a system user or not. This option\nonly has an effect if <option>uid</option> is\n<option>null</option>, in which case it determines whether\nthe user's UID is allocated in the range for system users\n(below 500) or in the range for normal users (starting at\n1000).\n","readOnly":false,"type":"boolean"},"users.users.<name?>.name":{"declarations":["nixos/modules/config/users-groups.nix"],"description":"The name of the user account. If undefined, the name of the\nattribute set will be used.\n","readOnly":false,"type":"string"},"users.users.<name?>.openssh.authorizedKeys.keyFiles":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":[],"description":"A list of files each containing one OpenSSH public key that should be\nadded to the user's authorized keys. The contents of the files are\nread at build time and added to a file that the SSH daemon reads in\naddition to the the user's authorized_keys file. You can combine the\n<literal>keyFiles</literal> and <literal>keys</literal> options.\n","readOnly":false,"type":"list of paths"},"users.users.<name?>.openssh.authorizedKeys.keys":{"declarations":["nixos/modules/services/networking/ssh/sshd.nix"],"default":[],"description":"A list of verbatim OpenSSH public keys that should be added to the\nuser's authorized keys. The keys are added to a file that the SSH\ndaemon reads in addition to the the user's authorized_keys file.\nYou can combine the <literal>keys</literal> and\n<literal>keyFiles</literal> options.\n","readOnly":false,"type":"list of strings"},"users.users.<name?>.password":{"declarations":["nixos/modules/config/users-groups.nix"],"default":null,"description":"Specifies the (clear text) password for the user.\nWarning: do not set confidential information here\nbecause it is world-readable in the Nix store. This option\nshould only be used for public accounts.\nThe options <option>hashedPassword</option>,\n<option>password</option> and <option>passwordFile</option>\ncontrols what password is set for the user.\n<option>hashedPassword</option> overrides both\n<option>password</option> and <option>passwordFile</option>.\n<option>password</option> overrides <option>passwordFile</option>.\nIf none of these three options are set, no password is assigned to\nthe user, and the user will not be able to do password logins.\nIf the option <option>users.mutableUsers</option> is true, the\npassword defined in one of the three options will only be set when\nthe user is created for the first time. After that, you are free to\nchange the password with the ordinary user management commands. If\n<option>users.mutableUsers</option> is false, you cannot change\nuser passwords, they will always be set according to the password\noptions.\n\n","readOnly":false,"type":"null or string"},"users.users.<name?>.passwordFile":{"declarations":["nixos/modules/config/users-groups.nix"],"default":null,"description":"The full path to a file that contains the user's password. The password\nfile is read on each system activation. The file should contain\nexactly one line, which should be the password in an encrypted form\nthat is suitable for the <literal>chpasswd -e</literal> command.\nThe options <option>hashedPassword</option>,\n<option>password</option> and <option>passwordFile</option>\ncontrols what password is set for the user.\n<option>hashedPassword</option> overrides both\n<option>password</option> and <option>passwordFile</option>.\n<option>password</option> overrides <option>passwordFile</option>.\nIf none of these three options are set, no password is assigned to\nthe user, and the user will not be able to do password logins.\nIf the option <option>users.mutableUsers</option> is true, the\npassword defined in one of the three options will only be set when\nthe user is created for the first time. After that, you are free to\nchange the password with the ordinary user management commands. If\n<option>users.mutableUsers</option> is false, you cannot change\nuser passwords, they will always be set according to the password\noptions.\n\n","readOnly":false,"type":"null or string"},"users.users.<name?>.shell":{"declarations":["nixos/modules/config/users-groups.nix"],"default":"pkgs.nologin","description":"The path to the user's shell. Can use shell derivations,\nlike <literal>pkgs.bashInteractive</literal>. Don’t\nforget to enable your shell in\n<literal>programs</literal> if necessary,\nlike <code>programs.zsh.enable = true;</code>.\n","example":{"_type":"literalExample","text":"pkgs.bashInteractive"},"readOnly":false,"type":"package or path"},"users.users.<name?>.subGidRanges":{"declarations":["nixos/modules/config/users-groups.nix"],"default":[],"description":"Subordinate group ids that user is allowed to use.\nThey are set into <filename>/etc/subgid</filename> and are used\nby <literal>newgidmap</literal> for user namespaces.\n","example":[{"count":1,"startGid":100},{"count":999,"startGid":1001}],"readOnly":false,"type":"list of submodules"},"users.users.<name?>.subGidRanges.*.count":{"declarations":["nixos/modules/config/users-groups.nix"],"default":1,"description":"Count of subordinate group ids","readOnly":false,"type":"integer"},"users.users.<name?>.subGidRanges.*.startGid":{"declarations":["nixos/modules/config/users-groups.nix"],"description":"Start of the range of subordinate group ids that user is\nallowed to use.\n","readOnly":false,"type":"integer"},"users.users.<name?>.subUidRanges":{"declarations":["nixos/modules/config/users-groups.nix"],"default":[],"description":"Subordinate user ids that user is allowed to use.\nThey are set into <filename>/etc/subuid</filename> and are used\nby <literal>newuidmap</literal> for user namespaces.\n","example":[{"count":1,"startUid":1000},{"count":65534,"startUid":100001}],"readOnly":false,"type":"list of submodules"},"users.users.<name?>.subUidRanges.*.count":{"declarations":["nixos/modules/config/users-groups.nix"],"default":1,"description":"Count of subordinate user ids","readOnly":false,"type":"integer"},"users.users.<name?>.subUidRanges.*.startUid":{"declarations":["nixos/modules/config/users-groups.nix"],"description":"Start of the range of subordinate user ids that user is\nallowed to use.\n","readOnly":false,"type":"integer"},"users.users.<name?>.uid":{"declarations":["nixos/modules/config/users-groups.nix"],"default":null,"description":"The account UID. If the UID is null, a free UID is picked on\nactivation.\n","readOnly":false,"type":"null or integer"},"users.users.<name?>.useDefaultShell":{"declarations":["nixos/modules/config/users-groups.nix"],"default":false,"description":"If true, the user's shell will be set to\n<option>users.defaultUserShell</option>.\n","readOnly":false,"type":"boolean"},"virtualisation.docker.enable":{"declarations":["nixos/modules/virtualisation/docker.nix"],"default":false,"description":"This option enables docker, a daemon that manages\nlinux containers. Users in the \"docker\" group can interact with\nthe daemon (e.g. to start or stop containers) using the\n<command>docker</command> command line tool.\n","readOnly":false,"type":"boolean"},"virtualisation.docker.extraOptions":{"declarations":["nixos/modules/virtualisation/docker.nix"],"default":"","description":"The extra command-line options to pass to\n<command>docker</command> daemon.\n","readOnly":false,"type":"string"},"virtualisation.docker.logDriver":{"declarations":["nixos/modules/virtualisation/docker.nix"],"default":"journald","description":"This option determines which Docker log driver to use.\n","readOnly":false,"type":"one of \"none\", \"json-file\", \"syslog\", \"journald\", \"gelf\", \"fluentd\", \"awslogs\", \"splunk\", \"etwlogs\", \"gcplogs\""},"virtualisation.docker.postStart":{"declarations":["nixos/modules/virtualisation/docker.nix"],"default":"while ! [ -e /var/run/docker.sock ]; do\n  sleep 0.1\ndone\n","description":"The postStart phase of the systemd service. You may need to\noverride this if you are passing in flags to docker which\ndon't cause the socket file to be created. This option is ignored\nif socket activation is used.\n","readOnly":false,"type":"string"},"virtualisation.docker.socketActivation":{"declarations":["nixos/modules/virtualisation/docker.nix"],"default":true,"description":"This option enables docker with socket activation. I.e. docker will\nstart when first called by client.\n","readOnly":false,"type":"boolean"},"virtualisation.docker.storageDriver":{"declarations":["nixos/modules/virtualisation/docker.nix"],"default":null,"description":"This option determines which Docker storage driver to use. By default\nit let's docker automatically choose preferred storage driver.\n","readOnly":false,"type":"null or one of \"aufs\", \"btrfs\", \"devicemapper\", \"overlay\", \"overlay2\", \"zfs\""},"virtualisation.libvirtd.enable":{"declarations":["nixos/modules/virtualisation/libvirtd.nix"],"default":false,"description":"This option enables libvirtd, a daemon that manages\nvirtual machines. Users in the \"libvirtd\" group can interact with\nthe daemon (e.g. to start or stop VMs) using the\n<command>virsh</command> command line tool, among others.\n","readOnly":false,"type":"boolean"},"virtualisation.libvirtd.enableKVM":{"declarations":["nixos/modules/virtualisation/libvirtd.nix"],"default":true,"description":"This option enables support for QEMU/KVM in libvirtd.\n","readOnly":false,"type":"boolean"},"virtualisation.libvirtd.extraConfig":{"declarations":["nixos/modules/virtualisation/libvirtd.nix"],"default":"","description":"Extra contents appended to the libvirtd configuration file,\nlibvirtd.conf.\n","readOnly":false,"type":"string"},"virtualisation.libvirtd.extraOptions":{"declarations":["nixos/modules/virtualisation/libvirtd.nix"],"default":[],"description":"Extra command line arguments passed to libvirtd on startup.\n","example":["--verbose"],"readOnly":false,"type":"list of strings"},"virtualisation.libvirtd.onShutdown":{"declarations":["nixos/modules/virtualisation/libvirtd.nix"],"default":"suspend","description":"When shutting down / restarting the host what method should\nbe used to gracefully halt the guests. Setting to \"shutdown\"\nwill cause an ACPI shutdown of each guest. \"suspend\" will\nattempt to save the state of the guests ready to restore on boot.\n","readOnly":false,"type":"one of \"shutdown\", \"suspend\""},"virtualisation.lxc.defaultConfig":{"declarations":["nixos/modules/virtualisation/lxc.nix"],"default":"","description":"Default config (default.conf) for new containers, i.e. for\nnetwork config. See <citerefentry><refentrytitle>lxc.container.conf\n</refentrytitle><manvolnum>5</manvolnum></citerefentry>.\n","readOnly":false,"type":"string"},"virtualisation.lxc.enable":{"declarations":["nixos/modules/virtualisation/lxc.nix"],"default":false,"description":"This enables Linux Containers (LXC), which provides tools\nfor creating and managing system or application containers\non Linux.\n","readOnly":false,"type":"boolean"},"virtualisation.lxc.lxcfs.enable":{"declarations":["nixos/modules/virtualisation/lxcfs.nix"],"default":false,"description":"This enables LXCFS, a FUSE filesystem for LXC.\nTo use lxcfs in include the following configuration in your\ncontainer configuration:\n<code>\n  virtualisation.lxc.defaultConfig = \"lxc.include = ${pkgs.lxcfs}/share/lxc/config/common.conf.d/00-lxcfs.conf\";\n</code>\n","readOnly":false,"type":"boolean"},"virtualisation.lxc.systemConfig":{"declarations":["nixos/modules/virtualisation/lxc.nix"],"default":"","description":"This is the system-wide LXC config. See\n<citerefentry><refentrytitle>lxc.system.conf</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>.\n","readOnly":false,"type":"string"},"virtualisation.lxc.usernetConfig":{"declarations":["nixos/modules/virtualisation/lxc.nix"],"default":"","description":"This is the config file for managing unprivileged user network\nadministration access in LXC. See <citerefentry>\n<refentrytitle>lxc-user-net</refentrytitle><manvolnum>5</manvolnum>\n</citerefentry>.\n","readOnly":false,"type":"string"},"virtualisation.lxd.enable":{"declarations":["nixos/modules/virtualisation/lxd.nix"],"default":false,"description":"This option enables lxd, a daemon that manages\ncontainers. Users in the \"lxd\" group can interact with\nthe daemon (e.g. to start or stop containers) using the\n<command>lxc</command> command line tool, among others.\n","readOnly":false,"type":"boolean"},"virtualisation.rkt.enable":{"declarations":["nixos/modules/virtualisation/rkt.nix"],"default":false,"description":"Whether to enable rkt metadata service.","example":true,"readOnly":false,"type":"boolean"},"virtualisation.rkt.gc.automatic":{"declarations":["nixos/modules/virtualisation/rkt.nix"],"default":true,"description":"Automatically run the garbage collector at a specific time.","readOnly":false,"type":"boolean"},"virtualisation.rkt.gc.dates":{"declarations":["nixos/modules/virtualisation/rkt.nix"],"default":"03:15","description":"Specification (in the format described by\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>5</manvolnum></citerefentry>) of the time at\nwhich the garbage collector will run.\n","readOnly":false,"type":"string"},"virtualisation.rkt.gc.options":{"declarations":["nixos/modules/virtualisation/rkt.nix"],"default":"--grace-period=24h","description":"Options given to <filename>rkt gc</filename> when the\ngarbage collector is run automatically.\n","readOnly":false,"type":"string"},"virtualisation.virtualbox.guest.enable":{"declarations":["nixos/modules/virtualisation/virtualbox-guest.nix"],"default":false,"description":"Whether to enable the VirtualBox service and other guest additions.","readOnly":false,"type":"unspecified"},"virtualisation.virtualbox.host.addNetworkInterface":{"declarations":["nixos/modules/virtualisation/virtualbox-host.nix"],"default":true,"description":"Automatically set up a vboxnet0 host-only network interface.\n","readOnly":false,"type":"boolean"},"virtualisation.virtualbox.host.enable":{"declarations":["nixos/modules/virtualisation/virtualbox-host.nix"],"default":false,"description":"Whether to enable VirtualBox.\n\n<note><para>\n  In order to pass USB devices from the host to the guests, the user\n  needs to be in the <literal>vboxusers</literal> group.\n</para></note>\n","readOnly":false,"type":"boolean"},"virtualisation.virtualbox.host.enableHardening":{"declarations":["nixos/modules/virtualisation/virtualbox-host.nix"],"default":true,"description":"Enable hardened VirtualBox, which ensures that only the binaries in the\nsystem path get access to the devices exposed by the kernel modules\ninstead of all users in the vboxusers group.\n\n<important><para>\n  Disabling this can put your system's security at risk, as local users\n  in the vboxusers group can tamper with the VirtualBox device files.\n</para></important>\n","readOnly":false,"type":"boolean"},"virtualisation.virtualbox.host.headless":{"declarations":["nixos/modules/virtualisation/virtualbox-host.nix"],"default":false,"description":"Use VirtualBox installation without GUI and Qt dependency. Useful to enable on servers\nand when virtual machines are controlled only via SSH.\n","readOnly":false,"type":"boolean"},"virtualisation.vswitch.enable":{"declarations":["nixos/modules/virtualisation/openvswitch.nix"],"default":false,"description":"Whether to enable Open vSwitch. A configuration daemon (ovs-server)\nwill be started.\n","readOnly":false,"type":"boolean"},"virtualisation.vswitch.ipsec":{"declarations":["nixos/modules/virtualisation/openvswitch.nix"],"default":false,"description":"Whether to start racoon service for openvswitch.\n","readOnly":false,"type":"boolean"},"virtualisation.vswitch.package":{"declarations":["nixos/modules/virtualisation/openvswitch.nix"],"default":"pkgs.openvswitch","description":"Open vSwitch package to use.\n","readOnly":false,"type":"package"},"virtualisation.vswitch.resetOnStart":{"declarations":["nixos/modules/virtualisation/openvswitch.nix"],"default":false,"description":"Whether to reset the Open vSwitch configuration database to a default\nconfiguration on every start of the systemd <literal>ovsdb.service</literal>.\n","readOnly":false,"type":"boolean"},"virtualisation.xen.bootParams":{"declarations":["nixos/modules/virtualisation/xen-dom0.nix"],"default":"","description":"Parameters passed to the Xen hypervisor at boot time.\n","readOnly":false,"type":"unspecified"},"virtualisation.xen.bridge.address":{"declarations":["nixos/modules/virtualisation/xen-dom0.nix"],"default":"172.16.0.1","description":"IPv4 address of the bridge.\n","readOnly":false,"type":"string"},"virtualisation.xen.bridge.name":{"declarations":["nixos/modules/virtualisation/xen-dom0.nix"],"default":"xenbr0","description":"Name of bridge the Xen domUs connect to.\n","readOnly":false,"type":"unspecified"},"virtualisation.xen.bridge.prefixLength":{"declarations":["nixos/modules/virtualisation/xen-dom0.nix"],"default":16,"description":"Subnet mask of the bridge interface, specified as the number of\nbits in the prefix (<literal>24</literal>).\nA DHCP server will provide IP addresses for the whole, remaining\nsubnet.\n","readOnly":false,"type":"integer"},"virtualisation.xen.domain0MemorySize":{"declarations":["nixos/modules/virtualisation/xen-dom0.nix"],"default":0,"description":"Amount of memory (in MiB) allocated to Domain 0 on boot.\nIf set to 0, all memory is assigned to Domain 0.\n","example":512,"readOnly":false,"type":"unspecified"},"virtualisation.xen.enable":{"declarations":["nixos/modules/virtualisation/xen-dom0.nix"],"default":false,"description":"Setting this option enables the Xen hypervisor, a\nvirtualisation technology that allows multiple virtual\nmachines, known as <emphasis>domains</emphasis>, to run\nconcurrently on the physical machine.  NixOS runs as the\nprivileged <emphasis>Domain 0</emphasis>.  This option\nrequires a reboot to take effect.\n","readOnly":false,"type":"unspecified"},"virtualisation.xen.stored":{"declarations":["nixos/modules/virtualisation/xen-dom0.nix"],"description":"Xen Store daemon to use. Defaults to oxenstored of the xen package.\n","readOnly":false,"type":"path"},"virtualisation.xen.trace":{"declarations":["nixos/modules/virtualisation/xen-dom0.nix"],"default":false,"description":"Enable Xen tracing.\n","readOnly":false,"type":"unspecified"},"zramSwap.enable":{"declarations":["nixos/modules/config/zram.nix"],"default":false,"description":"Enable in-memory compressed swap space provided by the zram kernel\nmodule. It is recommended to enable only for kernel 3.14 or higher.\n","readOnly":false,"type":"boolean"},"zramSwap.memoryPercent":{"declarations":["nixos/modules/config/zram.nix"],"default":50,"description":"Maximum amount of memory that can be used by the zram swap devices\n(as a percentage of your total memory). Defaults to 1/2 of your total\nRAM.\n","readOnly":false,"type":"integer"},"zramSwap.numDevices":{"declarations":["nixos/modules/config/zram.nix"],"default":4,"description":"Number of zram swap devices to create. It should be equal to the\nnumber of CPU cores your system has.\n","readOnly":false,"type":"integer"},"zramSwap.priority":{"declarations":["nixos/modules/config/zram.nix"],"default":5,"description":"Priority of the zram swap devices. It should be a number higher than\nthe priority of your disk-based swap devices (so that the system will\nfill the zram swap devices before falling back to disk swap).\n","readOnly":false,"type":"integer"}}